
my_nios.elf:     file format elf32-littlenios2
my_nios.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00040244

Program Header:
    LOAD off    0x00001000 vaddr 0x00040000 paddr 0x00040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00040020 paddr 0x00040020 align 2**12
         filesz 0x0000fce8 memsz 0x0000fce8 flags r-x
    LOAD off    0x00010d08 vaddr 0x0004fd08 paddr 0x000517f4 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x000132e0 vaddr 0x000532e0 paddr 0x000532e0 align 2**12
         filesz 0x00000000 memsz 0x0000016c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00040000  00040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00040020  00040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f708  00040244  00040244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000003bc  0004f94c  0004f94c  0001094c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0004fd08  000517f4  00010d08  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000016c  000532e0  000532e0  000132e0  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  0005344c  0005344c  000127f4  2**0
                  CONTENTS
  7 .onchip_memory2_2 00000000  00080000  00080000  000127f4  2**0
                  CONTENTS
  8 .onchip_memory2_1 00000000  00081000  00081000  000127f4  2**0
                  CONTENTS
  9 .comment      00000023  00000000  00000000  000127f4  2**0
                  CONTENTS, READONLY
 10 .debug_aranges 00000f10  00000000  00000000  00012818  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_info   000238af  00000000  00000000  00013728  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 000091ca  00000000  00000000  00036fd7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000b6b9  00000000  00000000  000401a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00002204  00000000  00000000  0004b85c  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00003940  00000000  00000000  0004da60  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc    00017868  00000000  00000000  000513a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_alt_sim_info 00000060  00000000  00000000  00068c08  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_ranges 000018c0  00000000  00000000  00068c68  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .thread_model 00000003  00000000  00000000  0006d8f6  2**0
                  CONTENTS, READONLY
 20 .cpu          0000000c  00000000  00000000  0006d8f9  2**0
                  CONTENTS, READONLY
 21 .qsys         00000001  00000000  00000000  0006d905  2**0
                  CONTENTS, READONLY
 22 .simulation_enabled 00000001  00000000  00000000  0006d906  2**0
                  CONTENTS, READONLY
 23 .sysid_hash   00000004  00000000  00000000  0006d907  2**0
                  CONTENTS, READONLY
 24 .sysid_base   00000004  00000000  00000000  0006d90b  2**0
                  CONTENTS, READONLY
 25 .sysid_time   00000004  00000000  00000000  0006d90f  2**0
                  CONTENTS, READONLY
 26 .stderr_dev   0000000b  00000000  00000000  0006d913  2**0
                  CONTENTS, READONLY
 27 .stdin_dev    0000000b  00000000  00000000  0006d91e  2**0
                  CONTENTS, READONLY
 28 .stdout_dev   0000000b  00000000  00000000  0006d929  2**0
                  CONTENTS, READONLY
 29 .sopc_system_name 00000007  00000000  00000000  0006d934  2**0
                  CONTENTS, READONLY
 30 .quartus_project_dir 00000026  00000000  00000000  0006d93b  2**0
                  CONTENTS, READONLY
 31 .jdi          00005599  00000000  00000000  0006d961  2**0
                  CONTENTS, READONLY
 32 .sopcinfo     000564fa  00000000  00000000  00072efa  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00040000 l    d  .entry	00000000 .entry
00040020 l    d  .exceptions	00000000 .exceptions
00040244 l    d  .text	00000000 .text
0004f94c l    d  .rodata	00000000 .rodata
0004fd08 l    d  .rwdata	00000000 .rwdata
000532e0 l    d  .bss	00000000 .bss
0005344c l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00080000 l    d  .onchip_memory2_2	00000000 .onchip_memory2_2
00081000 l    d  .onchip_memory2_1	00000000 .onchip_memory2_1
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../my_nios_bsp//obj/HAL/src/crt0.o
0004028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00040290 l     F .text	0000005c handle_button_interrupts
000402ec l     F .text	0000006c init_button_pio
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0004fa4e l     O .rodata	00000010 zeroes.4404
00042abc l     F .text	000000bc __sbprintf
0004fa5e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00042ccc l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
000447fc l     F .text	00000008 __fp_unlock
00044810 l     F .text	0000019c __sinit.part.1
000449ac l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0004fd08 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0005014c l     O .rwdata	00000020 lc_ctype_charset
0005012c l     O .rwdata	00000020 lc_message_charset
0005016c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0004fa90 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00047da8 l     F .text	000000fc __sprint_r.part.0
0004fbc4 l     O .rodata	00000010 blanks.4348
0004fbb4 l     O .rodata	00000010 zeroes.4349
00049334 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0004cff0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0004d0fc l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0004d128 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0004d4b4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0004d594 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0004d680 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0004d854 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000517e8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0004dad0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0004dc04 l     F .text	00000034 alt_dev_reg
00050754 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0004def8 l     F .text	0000020c altera_avalon_jtag_uart_irq
0004e104 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_ts.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0004eb20 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0004ed90 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
0004eed0 l     F .text	0000003c alt_get_errno
0004ef0c l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00053318 g     O .bss	00000004 alt_instruction_exception_handler
000473ec g     F .text	00000074 _mprec_log10
000474d8 g     F .text	0000008c __any_on
000498d0 g     F .text	00000054 _isatty_r
0004fa9c g     O .rodata	00000028 __mprec_tinytens
0004d790 g     F .text	0000007c alt_main
0004073c g     F .text	000000c0 _puts_r
0005334c g     O .bss	00000100 alt_irq
00049924 g     F .text	00000060 _lseek_r
000517f4 g       *ABS*	00000000 __flash_rwdata_start
0004bb1c g     F .text	00000088 .hidden __eqdf2
0005344c g       *ABS*	00000000 __alt_heap_start
00040700 g     F .text	0000003c printf
00049b3c g     F .text	0000009c _wcrtomb_r
00047c68 g     F .text	0000005c __sseek
00044b4c g     F .text	00000010 __sinit
000499e4 g     F .text	00000140 __swbuf_r
00045614 g     F .text	0000007c _setlocale_r
000449b4 g     F .text	00000068 __sfmoreglue
0004d830 g     F .text	00000024 __malloc_unlock
00053314 g     O .bss	00000004 altera_avalon_timer_ts_freq
000462e4 g     F .text	0000015c memmove
00044b34 g     F .text	00000018 _cleanup
00046568 g     F .text	000000a8 _Balloc
0004bba4 g     F .text	000000dc .hidden __gtdf2
0004f2c8 g     F .text	00000024 altera_nios2_gen2_irq_init
00040000 g     F .entry	0000001c __reset
000532e0 g     O .bss	00000004 edge_capture
00040020 g       *ABS*	00000000 __flash_exceptions_start
00049874 g     F .text	0000005c _fstat_r
000532fc g     O .bss	00000004 errno
00047be4 g     F .text	00000008 __seofread
00053308 g     O .bss	00000004 alt_argv
000597b4 g       *ABS*	00000000 _gp
0004daa0 g     F .text	00000030 usleep
00080000 g       *ABS*	00000000 __alt_mem_onchip_memory2_2
000505d4 g     O .rwdata	00000180 alt_fd_list
0004f2ec g     F .text	00000090 alt_find_dev
0004619c g     F .text	00000148 memcpy
00044804 g     F .text	0000000c _cleanup_r
0004ce08 g     F .text	000000dc .hidden __floatsidf
0004ee54 g     F .text	0000007c alt_io_redirect
0004bc80 g     F .text	000000f4 .hidden __ltdf2
000404e4 g     F .text	000000a8 addArrayPointsX
0004f94c g       *ABS*	00000000 __DTOR_END__
000407fc g     F .text	00000014 puts
0004ecf4 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00047ac8 g     F .text	00000074 __fpclassifyd
00047348 g     F .text	000000a4 __ratio
00049318 g     F .text	0000001c __vfiprintf_internal
0004e2fc g     F .text	0000021c altera_avalon_jtag_uart_read
000406d0 g     F .text	00000030 _printf_r
00040000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0004a8cc g     F .text	00000064 .hidden __udivsi3
0004d4f0 g     F .text	000000a4 isatty
0004faec g     O .rodata	000000c8 __mprec_tens
00045690 g     F .text	0000000c __locale_charset
0004f528 g     F .text	00000090 alt_icache_flush
000532f8 g     O .bss	00000004 __malloc_top_pad
000517bc g     O .rwdata	00000004 __mb_cur_max
000456c0 g     F .text	0000000c _localeconv_r
00046974 g     F .text	0000003c __i2b
00044fd0 g     F .text	000004bc __sfvwrite_r
00047b3c g     F .text	00000054 _sbrk_r
00049984 g     F .text	00000060 _read_r
000517dc g     O .rwdata	00000004 alt_max_fd
00049568 g     F .text	000000f0 _fclose_r
000447cc g     F .text	00000030 fflush
000532f4 g     O .bss	00000004 __malloc_max_sbrked_mem
0004a988 g     F .text	000008ac .hidden __adddf3
000470f0 g     F .text	0000010c __b2d
0004a29c g     F .text	00000538 .hidden __umoddi3
0004d6bc g     F .text	000000d4 lseek
000517b4 g     O .rwdata	00000004 _global_impure_ptr
00047564 g     F .text	00000564 _realloc_r
0005344c g       *ABS*	00000000 __bss_end
0004d3c4 g     F .text	000000f0 alt_iic_isr_register
0004f1c0 g     F .text	00000108 alt_tick
00049d24 g     F .text	00000578 .hidden __udivdi3
000497d0 g     F .text	00000024 _fputwc_r
0004fac4 g     O .rodata	00000028 __mprec_bigtens
00046758 g     F .text	00000104 __s2b
0004cee4 g     F .text	000000a8 .hidden __floatunsidf
00046e30 g     F .text	00000060 __mcmp
00044b6c g     F .text	00000018 __fp_lock_all
0004d378 g     F .text	0000004c alt_ic_irq_enabled
0004f124 g     F .text	0000009c alt_alarm_stop
00053300 g     O .bss	00000004 alt_irq_active
000400fc g     F .exceptions	000000d4 alt_irq_handler
000505ac g     O .rwdata	00000028 alt_dev_null
0004ead8 g     F .text	00000048 alt_dcache_flush_all
0004685c g     F .text	00000068 __hi0bits
0004cd88 g     F .text	00000080 .hidden __fixdfsi
000517f4 g       *ABS*	00000000 __ram_rwdata_end
000517d4 g     O .rwdata	00000008 alt_dev_list
0004db0c g     F .text	000000f8 write
0004e834 g     F .text	00000020 alt_timestamp_freq
0004fd08 g       *ABS*	00000000 __ram_rodata_end
0004d164 g     F .text	000000b0 fstat
0004bc80 g     F .text	000000f4 .hidden __ledf2
00046ba8 g     F .text	00000140 __pow5mult
00047ebc g     F .text	0000145c ___vfiprintf_internal_r
000532ec g     O .bss	00000004 __nlocale_changed
0004a930 g     F .text	00000058 .hidden __umodsi3
0005344c g       *ABS*	00000000 end
0004de38 g     F .text	000000c0 altera_avalon_jtag_uart_init
000401d0 g     F .exceptions	00000074 alt_instruction_exception_entry
0004f94c g       *ABS*	00000000 __CTOR_LIST__
00072000 g       *ABS*	00000000 __alt_stack_pointer
0004cf8c g     F .text	00000064 .hidden __clzsi2
0004e518 g     F .text	00000224 altera_avalon_jtag_uart_write
00044b5c g     F .text	00000004 __sfp_lock_acquire
000460b8 g     F .text	000000e4 memchr
000408a8 g     F .text	000021f8 ___vfprintf_internal_r
00044cc0 g     F .text	00000310 _free_r
0004569c g     F .text	00000010 __locale_mb_cur_max
00040358 g     F .text	00000084 process_no_interrupt
0004f798 g     F .text	00000180 __call_exitprocs
000532e8 g     O .bss	00000004 __mlocale_changed
000517c0 g     O .rwdata	00000004 __malloc_sbrk_base
00040244 g     F .text	0000004c _start
0005331c g     O .bss	00000004 _alt_tick_rate
000403dc g     F .text	00000028 GetMSB
00046ce8 g     F .text	00000148 __lshift
00053320 g     O .bss	00000004 _alt_nticks
0004d890 g     F .text	000000fc read
0004dc70 g     F .text	00000064 alt_sys_init
0004f680 g     F .text	00000118 __register_exitproc
000469b0 g     F .text	000001f8 __multiply
0004e1a4 g     F .text	00000068 altera_avalon_jtag_uart_close
0004fd08 g       *ABS*	00000000 __ram_rwdata_start
0004f94c g       *ABS*	00000000 __ram_rodata_start
00053324 g     O .bss	00000028 __malloc_current_mallinfo
00081000 g       *ABS*	00000000 __alt_mem_onchip_memory2_1
000471fc g     F .text	0000014c __d2b
0004dcd4 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0004f484 g     F .text	000000a4 alt_get_fd
0004e980 g     F .text	00000158 alt_busy_sleep
00049450 g     F .text	00000054 _close_r
0004f604 g     F .text	0000007c memcmp
0004dd94 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0005344c g       *ABS*	00000000 __alt_stack_base
0004dde4 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00042b78 g     F .text	00000154 __swsetup_r
0004b234 g     F .text	000008e8 .hidden __divdf3
00044a1c g     F .text	00000118 __sfp
00047460 g     F .text	00000078 __copybits
000501a4 g     O .rwdata	00000408 __malloc_av_
00044b68 g     F .text	00000004 __sinit_lock_release
0004bd74 g     F .text	00000718 .hidden __muldf3
00047b90 g     F .text	00000054 __sread
0004f37c g     F .text	00000108 alt_find_file
0004eb5c g     F .text	000000a4 alt_dev_llist_insert
0004d80c g     F .text	00000024 __malloc_lock
0004d9f0 g     F .text	000000b0 sbrk
00044770 g     F .text	0000005c _fflush_r
000494a4 g     F .text	000000c4 _calloc_r
000532e0 g       *ABS*	00000000 __bss_start
00046440 g     F .text	00000128 memset
0004058c g     F .text	00000144 main
0005330c g     O .bss	00000004 alt_envp
000532f0 g     O .bss	00000004 __malloc_max_total_mem
0004dd34 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00049b24 g     F .text	00000018 __swbuf
00047cc4 g     F .text	00000008 __sclose
00072000 g       *ABS*	00000000 __alt_heap_limit
00049658 g     F .text	00000014 fclose
0004e73c g     F .text	00000078 alt_timestamp_start
00042ecc g     F .text	00001688 _dtoa_r
000458ac g     F .text	0000080c _malloc_r
00049c98 g     F .text	00000030 __ascii_wctomb
000517e0 g     O .rwdata	00000004 alt_errno
0004548c g     F .text	000000c4 _fwalk
0004a7d4 g     F .text	00000084 .hidden __divsi3
00044b9c g     F .text	00000124 _malloc_trim_r
0004f94c g       *ABS*	00000000 __CTOR_END__
00047ccc g     F .text	000000dc strcmp
0004f94c g       *ABS*	00000000 __flash_rodata_start
0004f94c g       *ABS*	00000000 __DTOR_LIST__
0004bb1c g     F .text	00000088 .hidden __nedf2
0004dc38 g     F .text	00000038 alt_irq_init
0004d98c g     F .text	00000064 alt_release_fd
0004fbd4 g     O .rodata	00000100 .hidden __clz_tab
000532e4 g     O .bss	00000004 _PathLocale
0004f5b8 g     F .text	00000014 atexit
000493f0 g     F .text	00000060 _write_r
000456cc g     F .text	00000018 setlocale
000517b8 g     O .rwdata	00000004 _impure_ptr
00053304 g     O .bss	00000004 alt_argc
00044554 g     F .text	0000021c __sflush_r
00053310 g     O .bss	00000004 altera_avalon_timer_ts_base
0004ec60 g     F .text	00000060 _do_dtors
000456b8 g     F .text	00000008 __locale_cjk_lang
00040020 g       .exceptions	00000000 alt_irq_entry
0004708c g     F .text	00000064 __ulp
00044b84 g     F .text	00000018 __fp_unlock_all
000517cc g     O .rwdata	00000008 alt_fs_list
00040020 g       *ABS*	00000000 __ram_exceptions_start
000456e4 g     F .text	0000000c localeconv
0004e7b4 g     F .text	00000080 alt_timestamp
0004d214 g     F .text	00000050 alt_ic_isr_register
0004042c g     F .text	000000b8 read_on_chip_ram
000517f4 g       *ABS*	00000000 _edata
0005344c g       *ABS*	00000000 _end
0004966c g     F .text	00000164 __fputwc
00040244 g       *ABS*	00000000 __ram_exceptions_end
0004e20c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0004d2ec g     F .text	0000008c alt_ic_irq_disable
00047bec g     F .text	0000007c __swrite
000517c4 g     O .rwdata	00000004 __malloc_trim_threshold
000456ac g     F .text	0000000c __locale_msgcharset
0004f5cc g     F .text	00000038 exit
00045550 g     F .text	000000c4 _fwalk_reent
00046e90 g     F .text	000001fc __mdiff
0004a858 g     F .text	00000074 .hidden __modsi3
00072000 g       *ABS*	00000000 __alt_data_end
00040020 g     F .exceptions	00000000 alt_exception
00044b60 g     F .text	00000004 __sfp_lock_release
0004f918 g     F .text	00000034 _exit
0004e854 g     F .text	0000012c alt_alarm_start
000456f0 g     F .text	000001bc __smakebuf_r
00040810 g     F .text	00000098 strlen
0004efd0 g     F .text	00000154 open
0004bba4 g     F .text	000000dc .hidden __gedf2
000517c8 g     O .rwdata	00000004 __wctomb
00047ea4 g     F .text	00000018 __sprint_r
0004ecc0 g     F .text	00000034 alt_icache_flush_all
000517e4 g     O .rwdata	00000004 alt_priority_mask
0004d264 g     F .text	00000088 alt_ic_irq_enable
00042aa0 g     F .text	0000001c __vfprintf_internal
00049cc8 g     F .text	0000005c _wctomb_r
0004c48c g     F .text	000008fc .hidden __subdf3
00040404 g     F .text	00000028 GetLSB
000468c4 g     F .text	000000b0 __lo0bits
000517ec g     O .rwdata	00000008 alt_alarm_list
0004ec00 g     F .text	00000060 _do_ctors
00049bd8 g     F .text	000000c0 wcrtomb
0004d02c g     F .text	000000d0 close
0004d5fc g     F .text	00000084 alt_load
000497f4 g     F .text	00000080 fputwc
00044b64 g     F .text	00000004 __sinit_lock_acquire
00046638 g     F .text	00000120 __multadd
00046610 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   40000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   40004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   40008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   4000c:	00bffd16 	blt	zero,r2,40004 <__alt_mem_onchip_memory2_1+0xfffbf004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   40010:	00400134 	movhi	at,4
    ori r1, r1, %lo(_start)
   40014:	08409114 	ori	at,at,580
    jmp r1
   40018:	0800683a 	jmp	at
   4001c:	00000000 	call	0 <__reset-0x40000>

Disassembly of section .exceptions:

00040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   40020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   40024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   40028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   4002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   40030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   40034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   40038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   4003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   40040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   40044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   40048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   4004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   40050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   40054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   40058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   4005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   40060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   40064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   40068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   4006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   40070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   40074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   40078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   4007c:	10000326 	beq	r2,zero,4008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   40080:	20000226 	beq	r4,zero,4008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   40084:	00400fc0 	call	400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   40088:	00000706 	br	400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   4008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   40090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   40094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   40098:	00401d00 	call	401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   4009c:	1000021e 	bne	r2,zero,400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   400f8:	ef80083a 	eret

000400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   400fc:	defff904 	addi	sp,sp,-28
   40100:	dfc00615 	stw	ra,24(sp)
   40104:	df000515 	stw	fp,20(sp)
   40108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   4010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   40110:	0005313a 	rdctl	r2,ipending
   40114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   40118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   4011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   40120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   40124:	00800044 	movi	r2,1
   40128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   4012c:	e0fffb17 	ldw	r3,-20(fp)
   40130:	e0bffc17 	ldw	r2,-16(fp)
   40134:	1884703a 	and	r2,r3,r2
   40138:	10001426 	beq	r2,zero,4018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   4013c:	00800174 	movhi	r2,5
   40140:	108cd304 	addi	r2,r2,13132
   40144:	e0fffd17 	ldw	r3,-12(fp)
   40148:	180690fa 	slli	r3,r3,3
   4014c:	10c5883a 	add	r2,r2,r3
   40150:	10c00017 	ldw	r3,0(r2)
   40154:	00800174 	movhi	r2,5
   40158:	108cd304 	addi	r2,r2,13132
   4015c:	e13ffd17 	ldw	r4,-12(fp)
   40160:	200890fa 	slli	r4,r4,3
   40164:	1105883a 	add	r2,r2,r4
   40168:	10800104 	addi	r2,r2,4
   4016c:	10800017 	ldw	r2,0(r2)
   40170:	1009883a 	mov	r4,r2
   40174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   40178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   4017c:	0005313a 	rdctl	r2,ipending
   40180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   40184:	e0bfff17 	ldw	r2,-4(fp)
   40188:	00000706 	br	401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   4018c:	e0bffc17 	ldw	r2,-16(fp)
   40190:	1085883a 	add	r2,r2,r2
   40194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   40198:	e0bffd17 	ldw	r2,-12(fp)
   4019c:	10800044 	addi	r2,r2,1
   401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   401a4:	003fe106 	br	4012c <__alt_mem_onchip_memory2_1+0xfffbf12c>

    active = alt_irq_pending ();
   401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   401ac:	e0bffb17 	ldw	r2,-20(fp)
   401b0:	103fdb1e 	bne	r2,zero,40120 <__alt_mem_onchip_memory2_1+0xfffbf120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   401b4:	0001883a 	nop
}
   401b8:	0001883a 	nop
   401bc:	e037883a 	mov	sp,fp
   401c0:	dfc00117 	ldw	ra,4(sp)
   401c4:	df000017 	ldw	fp,0(sp)
   401c8:	dec00204 	addi	sp,sp,8
   401cc:	f800283a 	ret

000401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   401d0:	defffb04 	addi	sp,sp,-20
   401d4:	dfc00415 	stw	ra,16(sp)
   401d8:	df000315 	stw	fp,12(sp)
   401dc:	df000304 	addi	fp,sp,12
   401e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   401e4:	000531fa 	rdctl	r2,exception
   401e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   401ec:	e0bffd17 	ldw	r2,-12(fp)
   401f0:	10801f0c 	andi	r2,r2,124
   401f4:	1004d0ba 	srli	r2,r2,2
   401f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   401fc:	0005333a 	rdctl	r2,badaddr
   40200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   40204:	d0a6d917 	ldw	r2,-25756(gp)
   40208:	10000726 	beq	r2,zero,40228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   4020c:	d0a6d917 	ldw	r2,-25756(gp)
   40210:	e0fffd17 	ldw	r3,-12(fp)
   40214:	e1bffe17 	ldw	r6,-8(fp)
   40218:	e17fff17 	ldw	r5,-4(fp)
   4021c:	1809883a 	mov	r4,r3
   40220:	103ee83a 	callr	r2
   40224:	00000206 	br	40230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   40228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   4022c:	0005883a 	mov	r2,zero
}
   40230:	e037883a 	mov	sp,fp
   40234:	dfc00117 	ldw	ra,4(sp)
   40238:	df000017 	ldw	fp,0(sp)
   4023c:	dec00204 	addi	sp,sp,8
   40240:	f800283a 	ret

Disassembly of section .text:

00040244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   40244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   40248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   4024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   40250:	00bffd16 	blt	zero,r2,40248 <__alt_mem_onchip_memory2_1+0xfffbf248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   40254:	06c001f4 	movhi	sp,7
    ori sp, sp, %lo(__alt_stack_pointer)
   40258:	dec80014 	ori	sp,sp,8192
    movhi gp, %hi(_gp)
   4025c:	06800174 	movhi	gp,5
    ori gp, gp, %lo(_gp)
   40260:	d6a5ed14 	ori	gp,gp,38836
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   40264:	00800174 	movhi	r2,5
    ori r2, r2, %lo(__bss_start)
   40268:	108cb814 	ori	r2,r2,13024

    movhi r3, %hi(__bss_end)
   4026c:	00c00174 	movhi	r3,5
    ori r3, r3, %lo(__bss_end)
   40270:	18cd1314 	ori	r3,r3,13388

    beq r2, r3, 1f
   40274:	10c00326 	beq	r2,r3,40284 <_start+0x40>

0:
    stw zero, (r2)
   40278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   4027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   40280:	10fffd36 	bltu	r2,r3,40278 <__alt_mem_onchip_memory2_1+0xfffbf278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   40284:	004d5fc0 	call	4d5fc <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   40288:	004d7900 	call	4d790 <alt_main>

0004028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   4028c:	003fff06 	br	4028c <__alt_mem_onchip_memory2_1+0xfffbf28c>

00040290 <handle_button_interrupts>:

/* Declare a global variable to hold the edge capture value. */
volatile int edge_capture;

static void handle_button_interrupts(void* context)
{
   40290:	defffd04 	addi	sp,sp,-12
   40294:	df000215 	stw	fp,8(sp)
   40298:	df000204 	addi	fp,sp,8
   4029c:	e13fff15 	stw	r4,-4(fp)
	/* Cast context to edge_capture's type. It is important that this
	be declared volatile to avoid unwanted compiler optimization. */
	volatile int* edge_capture_ptr = (volatile int*) context;
   402a0:	e0bfff17 	ldw	r2,-4(fp)
   402a4:	e0bffe15 	stw	r2,-8(fp)
	/*
	 * Read the edge capture register on the button PIO.
	 * Store value.
	 */
	*edge_capture_ptr = IORD_ALTERA_AVALON_PIO_EDGE_CAP(PIO_INTERRUPT_BASE);
   402a8:	00800234 	movhi	r2,8
   402ac:	108c0b04 	addi	r2,r2,12332
   402b0:	10c00037 	ldwio	r3,0(r2)
   402b4:	e0bffe17 	ldw	r2,-8(fp)
   402b8:	10c00015 	stw	r3,0(r2)
	/* Write to the edge capture register to reset it. */
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_INTERRUPT_BASE, 0);
   402bc:	0007883a 	mov	r3,zero
   402c0:	00800234 	movhi	r2,8
   402c4:	108c0b04 	addi	r2,r2,12332
   402c8:	10c00035 	stwio	r3,0(r2)
	/* Read the PIO to delay ISR exit. This is done to prevent a
	spurious interrupt in systems with high processor -> pio
	latency and fast interrupts. */
	IORD_ALTERA_AVALON_PIO_EDGE_CAP(PIO_INTERRUPT_BASE);
   402cc:	00800234 	movhi	r2,8
   402d0:	108c0b04 	addi	r2,r2,12332
   402d4:	10800037 	ldwio	r2,0(r2)
}
   402d8:	0001883a 	nop
   402dc:	e037883a 	mov	sp,fp
   402e0:	df000017 	ldw	fp,0(sp)
   402e4:	dec00104 	addi	sp,sp,4
   402e8:	f800283a 	ret

000402ec <init_button_pio>:

static void init_button_pio()
{
   402ec:	defffc04 	addi	sp,sp,-16
   402f0:	dfc00315 	stw	ra,12(sp)
   402f4:	df000215 	stw	fp,8(sp)
   402f8:	df000204 	addi	fp,sp,8
	/* Recast the edge_capture pointer to match the
	alt_irq_register() function prototype. */
	void* edge_capture_ptr = (void*) &edge_capture;
   402fc:	d0a6cb04 	addi	r2,gp,-25812
   40300:	e0bfff15 	stw	r2,-4(fp)
	/* Enable 1 button interrupts. */
	IOWR_ALTERA_AVALON_PIO_IRQ_MASK(PIO_INTERRUPT_BASE, 0x1);
   40304:	00c00044 	movi	r3,1
   40308:	00800234 	movhi	r2,8
   4030c:	108c0a04 	addi	r2,r2,12328
   40310:	10c00035 	stwio	r3,0(r2)
	/* Reset the edge capture register. */
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_INTERRUPT_BASE, 0x0);
   40314:	0007883a 	mov	r3,zero
   40318:	00800234 	movhi	r2,8
   4031c:	108c0b04 	addi	r2,r2,12332
   40320:	10c00035 	stwio	r3,0(r2)
	/* Register the ISR. */
	alt_ic_isr_register(PIO_INTERRUPT_IRQ_INTERRUPT_CONTROLLER_ID, PIO_INTERRUPT_IRQ, handle_button_interrupts, edge_capture_ptr, 0x0);
   40324:	d8000015 	stw	zero,0(sp)
   40328:	e1ffff17 	ldw	r7,-4(fp)
   4032c:	01800134 	movhi	r6,4
   40330:	3180a404 	addi	r6,r6,656
   40334:	01400084 	movi	r5,2
   40338:	0009883a 	mov	r4,zero
   4033c:	004d2140 	call	4d214 <alt_ic_isr_register>

}
   40340:	0001883a 	nop
   40344:	e037883a 	mov	sp,fp
   40348:	dfc00117 	ldw	ra,4(sp)
   4034c:	df000017 	ldw	fp,0(sp)
   40350:	dec00204 	addi	sp,sp,8
   40354:	f800283a 	ret

00040358 <process_no_interrupt>:

void process_no_interrupt()
{
   40358:	defffe04 	addi	sp,sp,-8
   4035c:	dfc00115 	stw	ra,4(sp)
   40360:	df000015 	stw	fp,0(sp)
   40364:	d839883a 	mov	fp,sp
	printf("interrupt disable\n");
   40368:	01000174 	movhi	r4,5
   4036c:	213e5304 	addi	r4,r4,-1716
   40370:	00407fc0 	call	407fc <puts>
	alt_ic_irq_disable(PIO_INTERRUPT_IRQ_INTERRUPT_CONTROLLER_ID, PIO_INTERRUPT_IRQ);
   40374:	01400084 	movi	r5,2
   40378:	0009883a 	mov	r4,zero
   4037c:	004d2ec0 	call	4d2ec <alt_ic_irq_disable>

	IOWR_ALTERA_AVALON_PIO_DATA(PIO_0_BASE, 0x01);
   40380:	00c00044 	movi	r3,1
   40384:	00800234 	movhi	r2,8
   40388:	108c0c04 	addi	r2,r2,12336
   4038c:	10c00035 	stwio	r3,0(r2)
	usleep(20000000);
   40390:	01004c74 	movhi	r4,305
   40394:	210b4004 	addi	r4,r4,11520
   40398:	004daa00 	call	4daa0 <usleep>
	IOWR_ALTERA_AVALON_PIO_DATA(PIO_0_BASE, 0x00);
   4039c:	0007883a 	mov	r3,zero
   403a0:	00800234 	movhi	r2,8
   403a4:	108c0c04 	addi	r2,r2,12336
   403a8:	10c00035 	stwio	r3,0(r2)
	alt_ic_irq_enable(PIO_INTERRUPT_IRQ_INTERRUPT_CONTROLLER_ID, PIO_INTERRUPT_IRQ);
   403ac:	01400084 	movi	r5,2
   403b0:	0009883a 	mov	r4,zero
   403b4:	004d2640 	call	4d264 <alt_ic_irq_enable>
	printf("interrupt enable\n");
   403b8:	01000174 	movhi	r4,5
   403bc:	213e5804 	addi	r4,r4,-1696
   403c0:	00407fc0 	call	407fc <puts>
}
   403c4:	0001883a 	nop
   403c8:	e037883a 	mov	sp,fp
   403cc:	dfc00117 	ldw	ra,4(sp)
   403d0:	df000017 	ldw	fp,0(sp)
   403d4:	dec00204 	addi	sp,sp,8
   403d8:	f800283a 	ret

000403dc <GetMSB>:

int GetMSB(int intValue)
{
   403dc:	defffe04 	addi	sp,sp,-8
   403e0:	df000115 	stw	fp,4(sp)
   403e4:	df000104 	addi	fp,sp,4
   403e8:	e13fff15 	stw	r4,-4(fp)
    return (intValue & 0xFFFF0000) >> 16;
   403ec:	e0bfff17 	ldw	r2,-4(fp)
   403f0:	1004d43a 	srli	r2,r2,16
}
   403f4:	e037883a 	mov	sp,fp
   403f8:	df000017 	ldw	fp,0(sp)
   403fc:	dec00104 	addi	sp,sp,4
   40400:	f800283a 	ret

00040404 <GetLSB>:

int GetLSB(int intValue)
{
   40404:	defffe04 	addi	sp,sp,-8
   40408:	df000115 	stw	fp,4(sp)
   4040c:	df000104 	addi	fp,sp,4
   40410:	e13fff15 	stw	r4,-4(fp)
    return (intValue & 0x0000FFFF);
   40414:	e0bfff17 	ldw	r2,-4(fp)
   40418:	10bfffcc 	andi	r2,r2,65535
}
   4041c:	e037883a 	mov	sp,fp
   40420:	df000017 	ldw	fp,0(sp)
   40424:	dec00104 	addi	sp,sp,4
   40428:	f800283a 	ret

0004042c <read_on_chip_ram>:

void read_on_chip_ram(int ram_addr , Point* src_point, Point* dst_point)
{
   4042c:	defff804 	addi	sp,sp,-32
   40430:	dfc00715 	stw	ra,28(sp)
   40434:	df000615 	stw	fp,24(sp)
   40438:	dc000515 	stw	r16,20(sp)
   4043c:	df000604 	addi	fp,sp,24
   40440:	e13ffc15 	stw	r4,-16(fp)
   40444:	e17ffd15 	stw	r5,-12(fp)
   40448:	e1bffe15 	stw	r6,-8(fp)
	//uint32_t xy;
	uint32_t read_val;
	for (int idx = 0; idx < MATCHES_NUMBER*2 ; idx++  )
   4044c:	e03ffa15 	stw	zero,-24(fp)
   40450:	00001a06 	br	404bc <read_on_chip_ram+0x90>
	{
		read_val = IORD(ram_addr, 0);
   40454:	e0bffc17 	ldw	r2,-16(fp)
   40458:	10800037 	ldwio	r2,0(r2)
   4045c:	e0bffb15 	stw	r2,-20(fp)

		src_point[idx].y = GetMSB(read_val);
   40460:	e0bffa17 	ldw	r2,-24(fp)
   40464:	1085883a 	add	r2,r2,r2
   40468:	1085883a 	add	r2,r2,r2
   4046c:	1007883a 	mov	r3,r2
   40470:	e0bffd17 	ldw	r2,-12(fp)
   40474:	10e1883a 	add	r16,r2,r3
   40478:	e0bffb17 	ldw	r2,-20(fp)
   4047c:	1009883a 	mov	r4,r2
   40480:	00403dc0 	call	403dc <GetMSB>
   40484:	8080008d 	sth	r2,2(r16)
		src_point[idx].x = GetLSB(read_val);
   40488:	e0bffa17 	ldw	r2,-24(fp)
   4048c:	1085883a 	add	r2,r2,r2
   40490:	1085883a 	add	r2,r2,r2
   40494:	1007883a 	mov	r3,r2
   40498:	e0bffd17 	ldw	r2,-12(fp)
   4049c:	10e1883a 	add	r16,r2,r3
   404a0:	e0bffb17 	ldw	r2,-20(fp)
   404a4:	1009883a 	mov	r4,r2
   404a8:	00404040 	call	40404 <GetLSB>
   404ac:	8080000d 	sth	r2,0(r16)

void read_on_chip_ram(int ram_addr , Point* src_point, Point* dst_point)
{
	//uint32_t xy;
	uint32_t read_val;
	for (int idx = 0; idx < MATCHES_NUMBER*2 ; idx++  )
   404b0:	e0bffa17 	ldw	r2,-24(fp)
   404b4:	10800044 	addi	r2,r2,1
   404b8:	e0bffa15 	stw	r2,-24(fp)
   404bc:	e0bffa17 	ldw	r2,-24(fp)
   404c0:	1080fa10 	cmplti	r2,r2,1000
   404c4:	103fe31e 	bne	r2,zero,40454 <__alt_mem_onchip_memory2_1+0xfffbf454>
		src_point[idx].y = GetMSB(read_val);
		src_point[idx].x = GetLSB(read_val);

	}

}
   404c8:	0001883a 	nop
   404cc:	e6ffff04 	addi	sp,fp,-4
   404d0:	dfc00217 	ldw	ra,8(sp)
   404d4:	df000117 	ldw	fp,4(sp)
   404d8:	dc000017 	ldw	r16,0(sp)
   404dc:	dec00304 	addi	sp,sp,12
   404e0:	f800283a 	ret

000404e4 <addArrayPointsX>:

void addArrayPointsX(Point a[],Point b[],Point res[],int size)
{
   404e4:	defffa04 	addi	sp,sp,-24
   404e8:	df000515 	stw	fp,20(sp)
   404ec:	df000504 	addi	fp,sp,20
   404f0:	e13ffc15 	stw	r4,-16(fp)
   404f4:	e17ffd15 	stw	r5,-12(fp)
   404f8:	e1bffe15 	stw	r6,-8(fp)
   404fc:	e1ffff15 	stw	r7,-4(fp)
    int i;
    for(i=0; i< size;i++)
   40500:	e03ffb15 	stw	zero,-20(fp)
   40504:	00001906 	br	4056c <addArrayPointsX+0x88>
    	res[i].x = a[i].x + b[i].x;
   40508:	e0bffb17 	ldw	r2,-20(fp)
   4050c:	1085883a 	add	r2,r2,r2
   40510:	1085883a 	add	r2,r2,r2
   40514:	1007883a 	mov	r3,r2
   40518:	e0bffe17 	ldw	r2,-8(fp)
   4051c:	10c7883a 	add	r3,r2,r3
   40520:	e0bffb17 	ldw	r2,-20(fp)
   40524:	1085883a 	add	r2,r2,r2
   40528:	1085883a 	add	r2,r2,r2
   4052c:	1009883a 	mov	r4,r2
   40530:	e0bffc17 	ldw	r2,-16(fp)
   40534:	1105883a 	add	r2,r2,r4
   40538:	1100000b 	ldhu	r4,0(r2)
   4053c:	e0bffb17 	ldw	r2,-20(fp)
   40540:	1085883a 	add	r2,r2,r2
   40544:	1085883a 	add	r2,r2,r2
   40548:	100b883a 	mov	r5,r2
   4054c:	e0bffd17 	ldw	r2,-12(fp)
   40550:	1145883a 	add	r2,r2,r5
   40554:	1080000b 	ldhu	r2,0(r2)
   40558:	2085883a 	add	r2,r4,r2
   4055c:	1880000d 	sth	r2,0(r3)
}

void addArrayPointsX(Point a[],Point b[],Point res[],int size)
{
    int i;
    for(i=0; i< size;i++)
   40560:	e0bffb17 	ldw	r2,-20(fp)
   40564:	10800044 	addi	r2,r2,1
   40568:	e0bffb15 	stw	r2,-20(fp)
   4056c:	e0fffb17 	ldw	r3,-20(fp)
   40570:	e0bfff17 	ldw	r2,-4(fp)
   40574:	18bfe416 	blt	r3,r2,40508 <__alt_mem_onchip_memory2_1+0xfffbf508>
    	res[i].x = a[i].x + b[i].x;
}
   40578:	0001883a 	nop
   4057c:	e037883a 	mov	sp,fp
   40580:	df000017 	ldw	fp,0(sp)
   40584:	dec00104 	addi	sp,sp,4
   40588:	f800283a 	ret

0004058c <main>:


int main()
{
   4058c:	defa1c04 	addi	sp,sp,-6032
   40590:	dfc5e315 	stw	ra,6028(sp)
   40594:	df05e215 	stw	fp,6024(sp)
   40598:	df05e204 	addi	fp,sp,6024
	init_button_pio();
   4059c:	00402ec0 	call	402ec <init_button_pio>
	printf("Hello from Nios II!\n");
   405a0:	01000174 	movhi	r4,5
   405a4:	213e5d04 	addi	r4,r4,-1676
   405a8:	00407fc0 	call	407fc <puts>
	if (alt_timestamp_start() < 0) {
   405ac:	004e73c0 	call	4e73c <alt_timestamp_start>
   405b0:	1000030e 	bge	r2,zero,405c0 <main+0x34>
		printf("Timer init failed \n");
   405b4:	01000174 	movhi	r4,5
   405b8:	213e6204 	addi	r4,r4,-1656
   405bc:	00407fc0 	call	407fc <puts>
	}
			//calculate overhead
	int time1 = alt_timestamp();
   405c0:	004e7b40 	call	4e7b4 <alt_timestamp>
   405c4:	e0ba1f15 	stw	r2,-6020(fp)
	int time2 = alt_timestamp();
   405c8:	004e7b40 	call	4e7b4 <alt_timestamp>
   405cc:	e0ba2015 	stw	r2,-6016(fp)
	int num_ticks;
	int timer_overhead = time2 - time1;
   405d0:	e0fa2017 	ldw	r3,-6016(fp)
   405d4:	e0ba1f17 	ldw	r2,-6020(fp)
   405d8:	1885c83a 	sub	r2,r3,r2
   405dc:	e0ba2115 	stw	r2,-6012(fp)
	printf("Number of ticks per second = %u \n", (unsigned int)alt_timestamp_freq());
   405e0:	004e8340 	call	4e834 <alt_timestamp_freq>
   405e4:	100b883a 	mov	r5,r2
   405e8:	01000174 	movhi	r4,5
   405ec:	213e6704 	addi	r4,r4,-1636
   405f0:	00407000 	call	40700 <printf>

	int array_size = MATCHES_NUMBER;
   405f4:	00807d04 	movi	r2,500
   405f8:	e0ba2215 	stw	r2,-6008(fp)
	Point src_points[MATCHES_NUMBER];
	Point dst_points[MATCHES_NUMBER];
	Point u[MATCHES_NUMBER];

	int int_counter = 0;
   405fc:	e03a1e15 	stw	zero,-6024(fp)

	while(1)
			{
				time1 = alt_timestamp();
   40600:	004e7b40 	call	4e7b4 <alt_timestamp>
   40604:	e0ba1f15 	stw	r2,-6020(fp)

				read_on_chip_ram(ONCHIP_MEMORY2_1_BASE, src_points, dst_points);
   40608:	e0fc1804 	addi	r3,fp,-4000
   4060c:	e0ba2404 	addi	r2,fp,-6000
   40610:	180d883a 	mov	r6,r3
   40614:	100b883a 	mov	r5,r2
   40618:	01000234 	movhi	r4,8
   4061c:	21040004 	addi	r4,r4,4096
   40620:	004042c0 	call	4042c <read_on_chip_ram>

				addArrayPointsX(src_points, dst_points, u, array_size);
   40624:	e13e0c04 	addi	r4,fp,-2000
   40628:	e0fc1804 	addi	r3,fp,-4000
   4062c:	e0ba2404 	addi	r2,fp,-6000
   40630:	e1fa2217 	ldw	r7,-6008(fp)
   40634:	200d883a 	mov	r6,r4
   40638:	180b883a 	mov	r5,r3
   4063c:	1009883a 	mov	r4,r2
   40640:	00404e40 	call	404e4 <addArrayPointsX>
				printf("mem x = %x, y = %x\n", src_points[0].y, src_points[0].x);
   40644:	e0ba248b 	ldhu	r2,-5998(fp)
   40648:	10bfffcc 	andi	r2,r2,65535
   4064c:	e0fa240b 	ldhu	r3,-6000(fp)
   40650:	18ffffcc 	andi	r3,r3,65535
   40654:	180d883a 	mov	r6,r3
   40658:	100b883a 	mov	r5,r2
   4065c:	01000174 	movhi	r4,5
   40660:	213e7004 	addi	r4,r4,-1600
   40664:	00407000 	call	40700 <printf>

				time2 = alt_timestamp(); // end timer
   40668:	004e7b40 	call	4e7b4 <alt_timestamp>
   4066c:	e0ba2015 	stw	r2,-6016(fp)

				num_ticks = time2 - time1 - timer_overhead; // calculate number of ticks
   40670:	e0fa2017 	ldw	r3,-6016(fp)
   40674:	e0ba1f17 	ldw	r2,-6020(fp)
   40678:	1887c83a 	sub	r3,r3,r2
   4067c:	e0ba2117 	ldw	r2,-6012(fp)
   40680:	1885c83a 	sub	r2,r3,r2
   40684:	e0ba2315 	stw	r2,-6004(fp)

				printf("Time in ticks = %u \n", (unsigned int)num_ticks);
   40688:	e0ba2317 	ldw	r2,-6004(fp)
   4068c:	100b883a 	mov	r5,r2
   40690:	01000174 	movhi	r4,5
   40694:	213e7504 	addi	r4,r4,-1580
   40698:	00407000 	call	40700 <printf>
				if (edge_capture == 1){
   4069c:	d0a6cb17 	ldw	r2,-25812(gp)
   406a0:	10800058 	cmpnei	r2,r2,1
   406a4:	103fd61e 	bne	r2,zero,40600 <__alt_mem_onchip_memory2_1+0xfffbf600>
					printf("edge_capture count = %d\n", int_counter);
   406a8:	e17a1e17 	ldw	r5,-6024(fp)
   406ac:	01000174 	movhi	r4,5
   406b0:	213e7b04 	addi	r4,r4,-1556
   406b4:	00407000 	call	40700 <printf>
					int_counter++;
   406b8:	e0ba1e17 	ldw	r2,-6024(fp)
   406bc:	10800044 	addi	r2,r2,1
   406c0:	e0ba1e15 	stw	r2,-6024(fp)
					process_no_interrupt();
   406c4:	00403580 	call	40358 <process_no_interrupt>
					edge_capture = 0;
   406c8:	d026cb15 	stw	zero,-25812(gp)

		       //IOWR_ALTERA_AVALON_PIO_DATA(0x81000, count & 0x01);
		   	   //usleep(20000);
		   	   //printf("test.x = %d, test.y = %ld\n", test[0].x , test[0].y );

		   }
   406cc:	003fcc06 	br	40600 <__alt_mem_onchip_memory2_1+0xfffbf600>

000406d0 <_printf_r>:
   406d0:	defffd04 	addi	sp,sp,-12
   406d4:	2805883a 	mov	r2,r5
   406d8:	dfc00015 	stw	ra,0(sp)
   406dc:	d9800115 	stw	r6,4(sp)
   406e0:	d9c00215 	stw	r7,8(sp)
   406e4:	21400217 	ldw	r5,8(r4)
   406e8:	d9c00104 	addi	r7,sp,4
   406ec:	100d883a 	mov	r6,r2
   406f0:	00408a80 	call	408a8 <___vfprintf_internal_r>
   406f4:	dfc00017 	ldw	ra,0(sp)
   406f8:	dec00304 	addi	sp,sp,12
   406fc:	f800283a 	ret

00040700 <printf>:
   40700:	defffc04 	addi	sp,sp,-16
   40704:	dfc00015 	stw	ra,0(sp)
   40708:	d9400115 	stw	r5,4(sp)
   4070c:	d9800215 	stw	r6,8(sp)
   40710:	d9c00315 	stw	r7,12(sp)
   40714:	00800174 	movhi	r2,5
   40718:	1085ee04 	addi	r2,r2,6072
   4071c:	10800017 	ldw	r2,0(r2)
   40720:	200b883a 	mov	r5,r4
   40724:	d9800104 	addi	r6,sp,4
   40728:	11000217 	ldw	r4,8(r2)
   4072c:	0042aa00 	call	42aa0 <__vfprintf_internal>
   40730:	dfc00017 	ldw	ra,0(sp)
   40734:	dec00404 	addi	sp,sp,16
   40738:	f800283a 	ret

0004073c <_puts_r>:
   4073c:	defff604 	addi	sp,sp,-40
   40740:	dc000715 	stw	r16,28(sp)
   40744:	2021883a 	mov	r16,r4
   40748:	2809883a 	mov	r4,r5
   4074c:	dc400815 	stw	r17,32(sp)
   40750:	dfc00915 	stw	ra,36(sp)
   40754:	2823883a 	mov	r17,r5
   40758:	00408100 	call	40810 <strlen>
   4075c:	10c00044 	addi	r3,r2,1
   40760:	d8800115 	stw	r2,4(sp)
   40764:	00800174 	movhi	r2,5
   40768:	10be8204 	addi	r2,r2,-1528
   4076c:	d8800215 	stw	r2,8(sp)
   40770:	00800044 	movi	r2,1
   40774:	d8800315 	stw	r2,12(sp)
   40778:	00800084 	movi	r2,2
   4077c:	dc400015 	stw	r17,0(sp)
   40780:	d8c00615 	stw	r3,24(sp)
   40784:	dec00415 	stw	sp,16(sp)
   40788:	d8800515 	stw	r2,20(sp)
   4078c:	80000226 	beq	r16,zero,40798 <_puts_r+0x5c>
   40790:	80800e17 	ldw	r2,56(r16)
   40794:	10001426 	beq	r2,zero,407e8 <_puts_r+0xac>
   40798:	81400217 	ldw	r5,8(r16)
   4079c:	2880030b 	ldhu	r2,12(r5)
   407a0:	10c8000c 	andi	r3,r2,8192
   407a4:	1800061e 	bne	r3,zero,407c0 <_puts_r+0x84>
   407a8:	29001917 	ldw	r4,100(r5)
   407ac:	00f7ffc4 	movi	r3,-8193
   407b0:	10880014 	ori	r2,r2,8192
   407b4:	20c6703a 	and	r3,r4,r3
   407b8:	2880030d 	sth	r2,12(r5)
   407bc:	28c01915 	stw	r3,100(r5)
   407c0:	d9800404 	addi	r6,sp,16
   407c4:	8009883a 	mov	r4,r16
   407c8:	0044fd00 	call	44fd0 <__sfvwrite_r>
   407cc:	1000091e 	bne	r2,zero,407f4 <_puts_r+0xb8>
   407d0:	00800284 	movi	r2,10
   407d4:	dfc00917 	ldw	ra,36(sp)
   407d8:	dc400817 	ldw	r17,32(sp)
   407dc:	dc000717 	ldw	r16,28(sp)
   407e0:	dec00a04 	addi	sp,sp,40
   407e4:	f800283a 	ret
   407e8:	8009883a 	mov	r4,r16
   407ec:	0044b4c0 	call	44b4c <__sinit>
   407f0:	003fe906 	br	40798 <__alt_mem_onchip_memory2_1+0xfffbf798>
   407f4:	00bfffc4 	movi	r2,-1
   407f8:	003ff606 	br	407d4 <__alt_mem_onchip_memory2_1+0xfffbf7d4>

000407fc <puts>:
   407fc:	00800174 	movhi	r2,5
   40800:	1085ee04 	addi	r2,r2,6072
   40804:	200b883a 	mov	r5,r4
   40808:	11000017 	ldw	r4,0(r2)
   4080c:	004073c1 	jmpi	4073c <_puts_r>

00040810 <strlen>:
   40810:	208000cc 	andi	r2,r4,3
   40814:	10002026 	beq	r2,zero,40898 <strlen+0x88>
   40818:	20800007 	ldb	r2,0(r4)
   4081c:	10002026 	beq	r2,zero,408a0 <strlen+0x90>
   40820:	2005883a 	mov	r2,r4
   40824:	00000206 	br	40830 <strlen+0x20>
   40828:	10c00007 	ldb	r3,0(r2)
   4082c:	18001826 	beq	r3,zero,40890 <strlen+0x80>
   40830:	10800044 	addi	r2,r2,1
   40834:	10c000cc 	andi	r3,r2,3
   40838:	183ffb1e 	bne	r3,zero,40828 <__alt_mem_onchip_memory2_1+0xfffbf828>
   4083c:	10c00017 	ldw	r3,0(r2)
   40840:	01ffbff4 	movhi	r7,65279
   40844:	39ffbfc4 	addi	r7,r7,-257
   40848:	00ca303a 	nor	r5,zero,r3
   4084c:	01a02074 	movhi	r6,32897
   40850:	19c7883a 	add	r3,r3,r7
   40854:	31a02004 	addi	r6,r6,-32640
   40858:	1946703a 	and	r3,r3,r5
   4085c:	1986703a 	and	r3,r3,r6
   40860:	1800091e 	bne	r3,zero,40888 <strlen+0x78>
   40864:	10800104 	addi	r2,r2,4
   40868:	10c00017 	ldw	r3,0(r2)
   4086c:	19cb883a 	add	r5,r3,r7
   40870:	00c6303a 	nor	r3,zero,r3
   40874:	28c6703a 	and	r3,r5,r3
   40878:	1986703a 	and	r3,r3,r6
   4087c:	183ff926 	beq	r3,zero,40864 <__alt_mem_onchip_memory2_1+0xfffbf864>
   40880:	00000106 	br	40888 <strlen+0x78>
   40884:	10800044 	addi	r2,r2,1
   40888:	10c00007 	ldb	r3,0(r2)
   4088c:	183ffd1e 	bne	r3,zero,40884 <__alt_mem_onchip_memory2_1+0xfffbf884>
   40890:	1105c83a 	sub	r2,r2,r4
   40894:	f800283a 	ret
   40898:	2005883a 	mov	r2,r4
   4089c:	003fe706 	br	4083c <__alt_mem_onchip_memory2_1+0xfffbf83c>
   408a0:	0005883a 	mov	r2,zero
   408a4:	f800283a 	ret

000408a8 <___vfprintf_internal_r>:
   408a8:	deffb804 	addi	sp,sp,-288
   408ac:	dfc04715 	stw	ra,284(sp)
   408b0:	ddc04515 	stw	r23,276(sp)
   408b4:	dd404315 	stw	r21,268(sp)
   408b8:	d9002c15 	stw	r4,176(sp)
   408bc:	282f883a 	mov	r23,r5
   408c0:	302b883a 	mov	r21,r6
   408c4:	d9c02d15 	stw	r7,180(sp)
   408c8:	df004615 	stw	fp,280(sp)
   408cc:	dd804415 	stw	r22,272(sp)
   408d0:	dd004215 	stw	r20,264(sp)
   408d4:	dcc04115 	stw	r19,260(sp)
   408d8:	dc804015 	stw	r18,256(sp)
   408dc:	dc403f15 	stw	r17,252(sp)
   408e0:	dc003e15 	stw	r16,248(sp)
   408e4:	00456c00 	call	456c0 <_localeconv_r>
   408e8:	10800017 	ldw	r2,0(r2)
   408ec:	1009883a 	mov	r4,r2
   408f0:	d8803415 	stw	r2,208(sp)
   408f4:	00408100 	call	40810 <strlen>
   408f8:	d8803715 	stw	r2,220(sp)
   408fc:	d8802c17 	ldw	r2,176(sp)
   40900:	10000226 	beq	r2,zero,4090c <___vfprintf_internal_r+0x64>
   40904:	10800e17 	ldw	r2,56(r2)
   40908:	1000f926 	beq	r2,zero,40cf0 <___vfprintf_internal_r+0x448>
   4090c:	b880030b 	ldhu	r2,12(r23)
   40910:	10c8000c 	andi	r3,r2,8192
   40914:	1800061e 	bne	r3,zero,40930 <___vfprintf_internal_r+0x88>
   40918:	b9001917 	ldw	r4,100(r23)
   4091c:	00f7ffc4 	movi	r3,-8193
   40920:	10880014 	ori	r2,r2,8192
   40924:	20c6703a 	and	r3,r4,r3
   40928:	b880030d 	sth	r2,12(r23)
   4092c:	b8c01915 	stw	r3,100(r23)
   40930:	10c0020c 	andi	r3,r2,8
   40934:	1800c126 	beq	r3,zero,40c3c <___vfprintf_internal_r+0x394>
   40938:	b8c00417 	ldw	r3,16(r23)
   4093c:	1800bf26 	beq	r3,zero,40c3c <___vfprintf_internal_r+0x394>
   40940:	1080068c 	andi	r2,r2,26
   40944:	00c00284 	movi	r3,10
   40948:	10c0c426 	beq	r2,r3,40c5c <___vfprintf_internal_r+0x3b4>
   4094c:	d8c00404 	addi	r3,sp,16
   40950:	05000174 	movhi	r20,5
   40954:	d9001e04 	addi	r4,sp,120
   40958:	a53e9384 	addi	r20,r20,-1458
   4095c:	d8c01e15 	stw	r3,120(sp)
   40960:	d8002015 	stw	zero,128(sp)
   40964:	d8001f15 	stw	zero,124(sp)
   40968:	d8003315 	stw	zero,204(sp)
   4096c:	d8003615 	stw	zero,216(sp)
   40970:	d8003815 	stw	zero,224(sp)
   40974:	1811883a 	mov	r8,r3
   40978:	d8003915 	stw	zero,228(sp)
   4097c:	d8003a15 	stw	zero,232(sp)
   40980:	d8002f15 	stw	zero,188(sp)
   40984:	d9002815 	stw	r4,160(sp)
   40988:	a8800007 	ldb	r2,0(r21)
   4098c:	10027b26 	beq	r2,zero,4137c <___vfprintf_internal_r+0xad4>
   40990:	00c00944 	movi	r3,37
   40994:	a821883a 	mov	r16,r21
   40998:	10c0021e 	bne	r2,r3,409a4 <___vfprintf_internal_r+0xfc>
   4099c:	00001406 	br	409f0 <___vfprintf_internal_r+0x148>
   409a0:	10c00326 	beq	r2,r3,409b0 <___vfprintf_internal_r+0x108>
   409a4:	84000044 	addi	r16,r16,1
   409a8:	80800007 	ldb	r2,0(r16)
   409ac:	103ffc1e 	bne	r2,zero,409a0 <__alt_mem_onchip_memory2_1+0xfffbf9a0>
   409b0:	8563c83a 	sub	r17,r16,r21
   409b4:	88000e26 	beq	r17,zero,409f0 <___vfprintf_internal_r+0x148>
   409b8:	d8c02017 	ldw	r3,128(sp)
   409bc:	d8801f17 	ldw	r2,124(sp)
   409c0:	45400015 	stw	r21,0(r8)
   409c4:	1c47883a 	add	r3,r3,r17
   409c8:	10800044 	addi	r2,r2,1
   409cc:	d8c02015 	stw	r3,128(sp)
   409d0:	44400115 	stw	r17,4(r8)
   409d4:	d8801f15 	stw	r2,124(sp)
   409d8:	00c001c4 	movi	r3,7
   409dc:	1880a716 	blt	r3,r2,40c7c <___vfprintf_internal_r+0x3d4>
   409e0:	42000204 	addi	r8,r8,8
   409e4:	d9402f17 	ldw	r5,188(sp)
   409e8:	2c4b883a 	add	r5,r5,r17
   409ec:	d9402f15 	stw	r5,188(sp)
   409f0:	80800007 	ldb	r2,0(r16)
   409f4:	1000a826 	beq	r2,zero,40c98 <___vfprintf_internal_r+0x3f0>
   409f8:	84400047 	ldb	r17,1(r16)
   409fc:	00bfffc4 	movi	r2,-1
   40a00:	85400044 	addi	r21,r16,1
   40a04:	d8002785 	stb	zero,158(sp)
   40a08:	0007883a 	mov	r3,zero
   40a0c:	000f883a 	mov	r7,zero
   40a10:	d8802915 	stw	r2,164(sp)
   40a14:	d8003115 	stw	zero,196(sp)
   40a18:	0025883a 	mov	r18,zero
   40a1c:	01401604 	movi	r5,88
   40a20:	01800244 	movi	r6,9
   40a24:	02800a84 	movi	r10,42
   40a28:	02401b04 	movi	r9,108
   40a2c:	ad400044 	addi	r21,r21,1
   40a30:	88bff804 	addi	r2,r17,-32
   40a34:	28830436 	bltu	r5,r2,41648 <___vfprintf_internal_r+0xda0>
   40a38:	100490ba 	slli	r2,r2,2
   40a3c:	01000134 	movhi	r4,4
   40a40:	21029404 	addi	r4,r4,2640
   40a44:	1105883a 	add	r2,r2,r4
   40a48:	10800017 	ldw	r2,0(r2)
   40a4c:	1000683a 	jmp	r2
   40a50:	00041568 	cmpgeui	zero,zero,4181
   40a54:	00041648 	cmpgei	zero,zero,4185
   40a58:	00041648 	cmpgei	zero,zero,4185
   40a5c:	00041588 	cmpgei	zero,zero,4182
   40a60:	00041648 	cmpgei	zero,zero,4185
   40a64:	00041648 	cmpgei	zero,zero,4185
   40a68:	00041648 	cmpgei	zero,zero,4185
   40a6c:	00041648 	cmpgei	zero,zero,4185
   40a70:	00041648 	cmpgei	zero,zero,4185
   40a74:	00041648 	cmpgei	zero,zero,4185
   40a78:	00040cfc 	xorhi	zero,zero,4147
   40a7c:	000414a4 	muli	zero,zero,4178
   40a80:	00041648 	cmpgei	zero,zero,4185
   40a84:	00040bc4 	movi	zero,4143
   40a88:	00040d24 	muli	zero,zero,4148
   40a8c:	00041648 	cmpgei	zero,zero,4185
   40a90:	00040d64 	muli	zero,zero,4149
   40a94:	00040d70 	cmpltui	zero,zero,4149
   40a98:	00040d70 	cmpltui	zero,zero,4149
   40a9c:	00040d70 	cmpltui	zero,zero,4149
   40aa0:	00040d70 	cmpltui	zero,zero,4149
   40aa4:	00040d70 	cmpltui	zero,zero,4149
   40aa8:	00040d70 	cmpltui	zero,zero,4149
   40aac:	00040d70 	cmpltui	zero,zero,4149
   40ab0:	00040d70 	cmpltui	zero,zero,4149
   40ab4:	00040d70 	cmpltui	zero,zero,4149
   40ab8:	00041648 	cmpgei	zero,zero,4185
   40abc:	00041648 	cmpgei	zero,zero,4185
   40ac0:	00041648 	cmpgei	zero,zero,4185
   40ac4:	00041648 	cmpgei	zero,zero,4185
   40ac8:	00041648 	cmpgei	zero,zero,4185
   40acc:	00041648 	cmpgei	zero,zero,4185
   40ad0:	00041648 	cmpgei	zero,zero,4185
   40ad4:	00041648 	cmpgei	zero,zero,4185
   40ad8:	00041648 	cmpgei	zero,zero,4185
   40adc:	00041648 	cmpgei	zero,zero,4185
   40ae0:	00040da4 	muli	zero,zero,4150
   40ae4:	00040e60 	cmpeqi	zero,zero,4153
   40ae8:	00041648 	cmpgei	zero,zero,4185
   40aec:	00040e60 	cmpeqi	zero,zero,4153
   40af0:	00041648 	cmpgei	zero,zero,4185
   40af4:	00041648 	cmpgei	zero,zero,4185
   40af8:	00041648 	cmpgei	zero,zero,4185
   40afc:	00041648 	cmpgei	zero,zero,4185
   40b00:	00040f00 	call	40f0 <__reset-0x3bf10>
   40b04:	00041648 	cmpgei	zero,zero,4185
   40b08:	00041648 	cmpgei	zero,zero,4185
   40b0c:	00040f0c 	andi	zero,zero,4156
   40b10:	00041648 	cmpgei	zero,zero,4185
   40b14:	00041648 	cmpgei	zero,zero,4185
   40b18:	00041648 	cmpgei	zero,zero,4185
   40b1c:	00041648 	cmpgei	zero,zero,4185
   40b20:	00041648 	cmpgei	zero,zero,4185
   40b24:	00041384 	movi	zero,4174
   40b28:	00041648 	cmpgei	zero,zero,4185
   40b2c:	00041648 	cmpgei	zero,zero,4185
   40b30:	000413e4 	muli	zero,zero,4175
   40b34:	00041648 	cmpgei	zero,zero,4185
   40b38:	00041648 	cmpgei	zero,zero,4185
   40b3c:	00041648 	cmpgei	zero,zero,4185
   40b40:	00041648 	cmpgei	zero,zero,4185
   40b44:	00041648 	cmpgei	zero,zero,4185
   40b48:	00041648 	cmpgei	zero,zero,4185
   40b4c:	00041648 	cmpgei	zero,zero,4185
   40b50:	00041648 	cmpgei	zero,zero,4185
   40b54:	00041648 	cmpgei	zero,zero,4185
   40b58:	00041648 	cmpgei	zero,zero,4185
   40b5c:	000415f4 	movhi	zero,4183
   40b60:	00041594 	movui	zero,4182
   40b64:	00040e60 	cmpeqi	zero,zero,4153
   40b68:	00040e60 	cmpeqi	zero,zero,4153
   40b6c:	00040e60 	cmpeqi	zero,zero,4153
   40b70:	000415a4 	muli	zero,zero,4182
   40b74:	00041594 	movui	zero,4182
   40b78:	00041648 	cmpgei	zero,zero,4185
   40b7c:	00041648 	cmpgei	zero,zero,4185
   40b80:	000415b0 	cmpltui	zero,zero,4182
   40b84:	00041648 	cmpgei	zero,zero,4185
   40b88:	000415c0 	call	415c <__reset-0x3bea4>
   40b8c:	00041494 	movui	zero,4178
   40b90:	00040bd0 	cmplti	zero,zero,4143
   40b94:	000414b4 	movhi	zero,4178
   40b98:	00041648 	cmpgei	zero,zero,4185
   40b9c:	000414c0 	call	414c <__reset-0x3beb4>
   40ba0:	00041648 	cmpgei	zero,zero,4185
   40ba4:	0004151c 	xori	zero,zero,4180
   40ba8:	00041648 	cmpgei	zero,zero,4185
   40bac:	00041648 	cmpgei	zero,zero,4185
   40bb0:	0004152c 	andhi	zero,zero,4180
   40bb4:	d9003117 	ldw	r4,196(sp)
   40bb8:	d8802d15 	stw	r2,180(sp)
   40bbc:	0109c83a 	sub	r4,zero,r4
   40bc0:	d9003115 	stw	r4,196(sp)
   40bc4:	94800114 	ori	r18,r18,4
   40bc8:	ac400007 	ldb	r17,0(r21)
   40bcc:	003f9706 	br	40a2c <__alt_mem_onchip_memory2_1+0xfffbfa2c>
   40bd0:	00800c04 	movi	r2,48
   40bd4:	d9002d17 	ldw	r4,180(sp)
   40bd8:	d9402917 	ldw	r5,164(sp)
   40bdc:	d8802705 	stb	r2,156(sp)
   40be0:	00801e04 	movi	r2,120
   40be4:	d8802745 	stb	r2,157(sp)
   40be8:	d8002785 	stb	zero,158(sp)
   40bec:	20c00104 	addi	r3,r4,4
   40bf0:	24c00017 	ldw	r19,0(r4)
   40bf4:	002d883a 	mov	r22,zero
   40bf8:	90800094 	ori	r2,r18,2
   40bfc:	28029a16 	blt	r5,zero,41668 <___vfprintf_internal_r+0xdc0>
   40c00:	00bfdfc4 	movi	r2,-129
   40c04:	90a4703a 	and	r18,r18,r2
   40c08:	d8c02d15 	stw	r3,180(sp)
   40c0c:	94800094 	ori	r18,r18,2
   40c10:	9802871e 	bne	r19,zero,41630 <___vfprintf_internal_r+0xd88>
   40c14:	00800174 	movhi	r2,5
   40c18:	10be8c04 	addi	r2,r2,-1488
   40c1c:	d8803915 	stw	r2,228(sp)
   40c20:	04401e04 	movi	r17,120
   40c24:	d8802917 	ldw	r2,164(sp)
   40c28:	0039883a 	mov	fp,zero
   40c2c:	1001e926 	beq	r2,zero,413d4 <___vfprintf_internal_r+0xb2c>
   40c30:	0027883a 	mov	r19,zero
   40c34:	002d883a 	mov	r22,zero
   40c38:	00020506 	br	41450 <___vfprintf_internal_r+0xba8>
   40c3c:	d9002c17 	ldw	r4,176(sp)
   40c40:	b80b883a 	mov	r5,r23
   40c44:	0042b780 	call	42b78 <__swsetup_r>
   40c48:	1005ac1e 	bne	r2,zero,422fc <___vfprintf_internal_r+0x1a54>
   40c4c:	b880030b 	ldhu	r2,12(r23)
   40c50:	00c00284 	movi	r3,10
   40c54:	1080068c 	andi	r2,r2,26
   40c58:	10ff3c1e 	bne	r2,r3,4094c <__alt_mem_onchip_memory2_1+0xfffbf94c>
   40c5c:	b880038f 	ldh	r2,14(r23)
   40c60:	103f3a16 	blt	r2,zero,4094c <__alt_mem_onchip_memory2_1+0xfffbf94c>
   40c64:	d9c02d17 	ldw	r7,180(sp)
   40c68:	d9002c17 	ldw	r4,176(sp)
   40c6c:	a80d883a 	mov	r6,r21
   40c70:	b80b883a 	mov	r5,r23
   40c74:	0042abc0 	call	42abc <__sbprintf>
   40c78:	00001106 	br	40cc0 <___vfprintf_internal_r+0x418>
   40c7c:	d9002c17 	ldw	r4,176(sp)
   40c80:	d9801e04 	addi	r6,sp,120
   40c84:	b80b883a 	mov	r5,r23
   40c88:	0047ea40 	call	47ea4 <__sprint_r>
   40c8c:	1000081e 	bne	r2,zero,40cb0 <___vfprintf_internal_r+0x408>
   40c90:	da000404 	addi	r8,sp,16
   40c94:	003f5306 	br	409e4 <__alt_mem_onchip_memory2_1+0xfffbf9e4>
   40c98:	d8802017 	ldw	r2,128(sp)
   40c9c:	10000426 	beq	r2,zero,40cb0 <___vfprintf_internal_r+0x408>
   40ca0:	d9002c17 	ldw	r4,176(sp)
   40ca4:	d9801e04 	addi	r6,sp,120
   40ca8:	b80b883a 	mov	r5,r23
   40cac:	0047ea40 	call	47ea4 <__sprint_r>
   40cb0:	b880030b 	ldhu	r2,12(r23)
   40cb4:	1080100c 	andi	r2,r2,64
   40cb8:	1005901e 	bne	r2,zero,422fc <___vfprintf_internal_r+0x1a54>
   40cbc:	d8802f17 	ldw	r2,188(sp)
   40cc0:	dfc04717 	ldw	ra,284(sp)
   40cc4:	df004617 	ldw	fp,280(sp)
   40cc8:	ddc04517 	ldw	r23,276(sp)
   40ccc:	dd804417 	ldw	r22,272(sp)
   40cd0:	dd404317 	ldw	r21,268(sp)
   40cd4:	dd004217 	ldw	r20,264(sp)
   40cd8:	dcc04117 	ldw	r19,260(sp)
   40cdc:	dc804017 	ldw	r18,256(sp)
   40ce0:	dc403f17 	ldw	r17,252(sp)
   40ce4:	dc003e17 	ldw	r16,248(sp)
   40ce8:	dec04804 	addi	sp,sp,288
   40cec:	f800283a 	ret
   40cf0:	d9002c17 	ldw	r4,176(sp)
   40cf4:	0044b4c0 	call	44b4c <__sinit>
   40cf8:	003f0406 	br	4090c <__alt_mem_onchip_memory2_1+0xfffbf90c>
   40cfc:	d8802d17 	ldw	r2,180(sp)
   40d00:	d9002d17 	ldw	r4,180(sp)
   40d04:	10800017 	ldw	r2,0(r2)
   40d08:	d8803115 	stw	r2,196(sp)
   40d0c:	20800104 	addi	r2,r4,4
   40d10:	d9003117 	ldw	r4,196(sp)
   40d14:	203fa716 	blt	r4,zero,40bb4 <__alt_mem_onchip_memory2_1+0xfffbfbb4>
   40d18:	d8802d15 	stw	r2,180(sp)
   40d1c:	ac400007 	ldb	r17,0(r21)
   40d20:	003f4206 	br	40a2c <__alt_mem_onchip_memory2_1+0xfffbfa2c>
   40d24:	ac400007 	ldb	r17,0(r21)
   40d28:	aac00044 	addi	r11,r21,1
   40d2c:	8a872826 	beq	r17,r10,429d0 <___vfprintf_internal_r+0x2128>
   40d30:	88bff404 	addi	r2,r17,-48
   40d34:	0009883a 	mov	r4,zero
   40d38:	30867d36 	bltu	r6,r2,42730 <___vfprintf_internal_r+0x1e88>
   40d3c:	5c400007 	ldb	r17,0(r11)
   40d40:	210002a4 	muli	r4,r4,10
   40d44:	5d400044 	addi	r21,r11,1
   40d48:	a817883a 	mov	r11,r21
   40d4c:	2089883a 	add	r4,r4,r2
   40d50:	88bff404 	addi	r2,r17,-48
   40d54:	30bff92e 	bgeu	r6,r2,40d3c <__alt_mem_onchip_memory2_1+0xfffbfd3c>
   40d58:	2005c916 	blt	r4,zero,42480 <___vfprintf_internal_r+0x1bd8>
   40d5c:	d9002915 	stw	r4,164(sp)
   40d60:	003f3306 	br	40a30 <__alt_mem_onchip_memory2_1+0xfffbfa30>
   40d64:	94802014 	ori	r18,r18,128
   40d68:	ac400007 	ldb	r17,0(r21)
   40d6c:	003f2f06 	br	40a2c <__alt_mem_onchip_memory2_1+0xfffbfa2c>
   40d70:	a809883a 	mov	r4,r21
   40d74:	d8003115 	stw	zero,196(sp)
   40d78:	88bff404 	addi	r2,r17,-48
   40d7c:	0017883a 	mov	r11,zero
   40d80:	24400007 	ldb	r17,0(r4)
   40d84:	5ac002a4 	muli	r11,r11,10
   40d88:	ad400044 	addi	r21,r21,1
   40d8c:	a809883a 	mov	r4,r21
   40d90:	12d7883a 	add	r11,r2,r11
   40d94:	88bff404 	addi	r2,r17,-48
   40d98:	30bff92e 	bgeu	r6,r2,40d80 <__alt_mem_onchip_memory2_1+0xfffbfd80>
   40d9c:	dac03115 	stw	r11,196(sp)
   40da0:	003f2306 	br	40a30 <__alt_mem_onchip_memory2_1+0xfffbfa30>
   40da4:	18c03fcc 	andi	r3,r3,255
   40da8:	18072b1e 	bne	r3,zero,42a58 <___vfprintf_internal_r+0x21b0>
   40dac:	94800414 	ori	r18,r18,16
   40db0:	9080080c 	andi	r2,r18,32
   40db4:	10037b26 	beq	r2,zero,41ba4 <___vfprintf_internal_r+0x12fc>
   40db8:	d9402d17 	ldw	r5,180(sp)
   40dbc:	28800117 	ldw	r2,4(r5)
   40dc0:	2cc00017 	ldw	r19,0(r5)
   40dc4:	29400204 	addi	r5,r5,8
   40dc8:	d9402d15 	stw	r5,180(sp)
   40dcc:	102d883a 	mov	r22,r2
   40dd0:	10044b16 	blt	r2,zero,41f00 <___vfprintf_internal_r+0x1658>
   40dd4:	d9402917 	ldw	r5,164(sp)
   40dd8:	df002783 	ldbu	fp,158(sp)
   40ddc:	2803bc16 	blt	r5,zero,41cd0 <___vfprintf_internal_r+0x1428>
   40de0:	00ffdfc4 	movi	r3,-129
   40de4:	9d84b03a 	or	r2,r19,r22
   40de8:	90e4703a 	and	r18,r18,r3
   40dec:	10017726 	beq	r2,zero,413cc <___vfprintf_internal_r+0xb24>
   40df0:	b0038326 	beq	r22,zero,41c00 <___vfprintf_internal_r+0x1358>
   40df4:	dc402a15 	stw	r17,168(sp)
   40df8:	dc001e04 	addi	r16,sp,120
   40dfc:	b023883a 	mov	r17,r22
   40e00:	402d883a 	mov	r22,r8
   40e04:	9809883a 	mov	r4,r19
   40e08:	880b883a 	mov	r5,r17
   40e0c:	01800284 	movi	r6,10
   40e10:	000f883a 	mov	r7,zero
   40e14:	004a29c0 	call	4a29c <__umoddi3>
   40e18:	10800c04 	addi	r2,r2,48
   40e1c:	843fffc4 	addi	r16,r16,-1
   40e20:	9809883a 	mov	r4,r19
   40e24:	880b883a 	mov	r5,r17
   40e28:	80800005 	stb	r2,0(r16)
   40e2c:	01800284 	movi	r6,10
   40e30:	000f883a 	mov	r7,zero
   40e34:	0049d240 	call	49d24 <__udivdi3>
   40e38:	1027883a 	mov	r19,r2
   40e3c:	10c4b03a 	or	r2,r2,r3
   40e40:	1823883a 	mov	r17,r3
   40e44:	103fef1e 	bne	r2,zero,40e04 <__alt_mem_onchip_memory2_1+0xfffbfe04>
   40e48:	d8c02817 	ldw	r3,160(sp)
   40e4c:	dc402a17 	ldw	r17,168(sp)
   40e50:	b011883a 	mov	r8,r22
   40e54:	1c07c83a 	sub	r3,r3,r16
   40e58:	d8c02e15 	stw	r3,184(sp)
   40e5c:	00005906 	br	40fc4 <___vfprintf_internal_r+0x71c>
   40e60:	18c03fcc 	andi	r3,r3,255
   40e64:	1806fa1e 	bne	r3,zero,42a50 <___vfprintf_internal_r+0x21a8>
   40e68:	9080020c 	andi	r2,r18,8
   40e6c:	10048a26 	beq	r2,zero,42098 <___vfprintf_internal_r+0x17f0>
   40e70:	d8c02d17 	ldw	r3,180(sp)
   40e74:	d9002d17 	ldw	r4,180(sp)
   40e78:	d9402d17 	ldw	r5,180(sp)
   40e7c:	18c00017 	ldw	r3,0(r3)
   40e80:	21000117 	ldw	r4,4(r4)
   40e84:	29400204 	addi	r5,r5,8
   40e88:	d8c03615 	stw	r3,216(sp)
   40e8c:	d9003815 	stw	r4,224(sp)
   40e90:	d9402d15 	stw	r5,180(sp)
   40e94:	d9003617 	ldw	r4,216(sp)
   40e98:	d9403817 	ldw	r5,224(sp)
   40e9c:	da003d15 	stw	r8,244(sp)
   40ea0:	04000044 	movi	r16,1
   40ea4:	0047ac80 	call	47ac8 <__fpclassifyd>
   40ea8:	da003d17 	ldw	r8,244(sp)
   40eac:	14041f1e 	bne	r2,r16,41f2c <___vfprintf_internal_r+0x1684>
   40eb0:	d9003617 	ldw	r4,216(sp)
   40eb4:	d9403817 	ldw	r5,224(sp)
   40eb8:	000d883a 	mov	r6,zero
   40ebc:	000f883a 	mov	r7,zero
   40ec0:	004bc800 	call	4bc80 <__ledf2>
   40ec4:	da003d17 	ldw	r8,244(sp)
   40ec8:	1005be16 	blt	r2,zero,425c4 <___vfprintf_internal_r+0x1d1c>
   40ecc:	df002783 	ldbu	fp,158(sp)
   40ed0:	008011c4 	movi	r2,71
   40ed4:	1445330e 	bge	r2,r17,423a4 <___vfprintf_internal_r+0x1afc>
   40ed8:	04000174 	movhi	r16,5
   40edc:	843e8404 	addi	r16,r16,-1520
   40ee0:	00c000c4 	movi	r3,3
   40ee4:	00bfdfc4 	movi	r2,-129
   40ee8:	d8c02a15 	stw	r3,168(sp)
   40eec:	90a4703a 	and	r18,r18,r2
   40ef0:	d8c02e15 	stw	r3,184(sp)
   40ef4:	d8002915 	stw	zero,164(sp)
   40ef8:	d8003215 	stw	zero,200(sp)
   40efc:	00003706 	br	40fdc <___vfprintf_internal_r+0x734>
   40f00:	94800214 	ori	r18,r18,8
   40f04:	ac400007 	ldb	r17,0(r21)
   40f08:	003ec806 	br	40a2c <__alt_mem_onchip_memory2_1+0xfffbfa2c>
   40f0c:	18c03fcc 	andi	r3,r3,255
   40f10:	1806db1e 	bne	r3,zero,42a80 <___vfprintf_internal_r+0x21d8>
   40f14:	94800414 	ori	r18,r18,16
   40f18:	9080080c 	andi	r2,r18,32
   40f1c:	1002d826 	beq	r2,zero,41a80 <___vfprintf_internal_r+0x11d8>
   40f20:	d9402d17 	ldw	r5,180(sp)
   40f24:	d8c02917 	ldw	r3,164(sp)
   40f28:	d8002785 	stb	zero,158(sp)
   40f2c:	28800204 	addi	r2,r5,8
   40f30:	2cc00017 	ldw	r19,0(r5)
   40f34:	2d800117 	ldw	r22,4(r5)
   40f38:	18048f16 	blt	r3,zero,42178 <___vfprintf_internal_r+0x18d0>
   40f3c:	013fdfc4 	movi	r4,-129
   40f40:	9d86b03a 	or	r3,r19,r22
   40f44:	d8802d15 	stw	r2,180(sp)
   40f48:	9124703a 	and	r18,r18,r4
   40f4c:	1802d91e 	bne	r3,zero,41ab4 <___vfprintf_internal_r+0x120c>
   40f50:	d8c02917 	ldw	r3,164(sp)
   40f54:	0039883a 	mov	fp,zero
   40f58:	1805c326 	beq	r3,zero,42668 <___vfprintf_internal_r+0x1dc0>
   40f5c:	0027883a 	mov	r19,zero
   40f60:	002d883a 	mov	r22,zero
   40f64:	dc001e04 	addi	r16,sp,120
   40f68:	9806d0fa 	srli	r3,r19,3
   40f6c:	b008977a 	slli	r4,r22,29
   40f70:	b02cd0fa 	srli	r22,r22,3
   40f74:	9cc001cc 	andi	r19,r19,7
   40f78:	98800c04 	addi	r2,r19,48
   40f7c:	843fffc4 	addi	r16,r16,-1
   40f80:	20e6b03a 	or	r19,r4,r3
   40f84:	80800005 	stb	r2,0(r16)
   40f88:	9d86b03a 	or	r3,r19,r22
   40f8c:	183ff61e 	bne	r3,zero,40f68 <__alt_mem_onchip_memory2_1+0xfffbff68>
   40f90:	90c0004c 	andi	r3,r18,1
   40f94:	18013b26 	beq	r3,zero,41484 <___vfprintf_internal_r+0xbdc>
   40f98:	10803fcc 	andi	r2,r2,255
   40f9c:	1080201c 	xori	r2,r2,128
   40fa0:	10bfe004 	addi	r2,r2,-128
   40fa4:	00c00c04 	movi	r3,48
   40fa8:	10c13626 	beq	r2,r3,41484 <___vfprintf_internal_r+0xbdc>
   40fac:	80ffffc5 	stb	r3,-1(r16)
   40fb0:	d8c02817 	ldw	r3,160(sp)
   40fb4:	80bfffc4 	addi	r2,r16,-1
   40fb8:	1021883a 	mov	r16,r2
   40fbc:	1887c83a 	sub	r3,r3,r2
   40fc0:	d8c02e15 	stw	r3,184(sp)
   40fc4:	d8802e17 	ldw	r2,184(sp)
   40fc8:	d9002917 	ldw	r4,164(sp)
   40fcc:	1100010e 	bge	r2,r4,40fd4 <___vfprintf_internal_r+0x72c>
   40fd0:	2005883a 	mov	r2,r4
   40fd4:	d8802a15 	stw	r2,168(sp)
   40fd8:	d8003215 	stw	zero,200(sp)
   40fdc:	e7003fcc 	andi	fp,fp,255
   40fe0:	e700201c 	xori	fp,fp,128
   40fe4:	e73fe004 	addi	fp,fp,-128
   40fe8:	e0000326 	beq	fp,zero,40ff8 <___vfprintf_internal_r+0x750>
   40fec:	d8c02a17 	ldw	r3,168(sp)
   40ff0:	18c00044 	addi	r3,r3,1
   40ff4:	d8c02a15 	stw	r3,168(sp)
   40ff8:	90c0008c 	andi	r3,r18,2
   40ffc:	d8c02b15 	stw	r3,172(sp)
   41000:	18000326 	beq	r3,zero,41010 <___vfprintf_internal_r+0x768>
   41004:	d8c02a17 	ldw	r3,168(sp)
   41008:	18c00084 	addi	r3,r3,2
   4100c:	d8c02a15 	stw	r3,168(sp)
   41010:	90c0210c 	andi	r3,r18,132
   41014:	d8c03015 	stw	r3,192(sp)
   41018:	1801a31e 	bne	r3,zero,416a8 <___vfprintf_internal_r+0xe00>
   4101c:	d9003117 	ldw	r4,196(sp)
   41020:	d8c02a17 	ldw	r3,168(sp)
   41024:	20e7c83a 	sub	r19,r4,r3
   41028:	04c19f0e 	bge	zero,r19,416a8 <___vfprintf_internal_r+0xe00>
   4102c:	02400404 	movi	r9,16
   41030:	d8c02017 	ldw	r3,128(sp)
   41034:	d8801f17 	ldw	r2,124(sp)
   41038:	4cc50d0e 	bge	r9,r19,42470 <___vfprintf_internal_r+0x1bc8>
   4103c:	01400174 	movhi	r5,5
   41040:	297e9784 	addi	r5,r5,-1442
   41044:	dc403b15 	stw	r17,236(sp)
   41048:	d9403515 	stw	r5,212(sp)
   4104c:	9823883a 	mov	r17,r19
   41050:	482d883a 	mov	r22,r9
   41054:	9027883a 	mov	r19,r18
   41058:	070001c4 	movi	fp,7
   4105c:	8025883a 	mov	r18,r16
   41060:	dc002c17 	ldw	r16,176(sp)
   41064:	00000306 	br	41074 <___vfprintf_internal_r+0x7cc>
   41068:	8c7ffc04 	addi	r17,r17,-16
   4106c:	42000204 	addi	r8,r8,8
   41070:	b440130e 	bge	r22,r17,410c0 <___vfprintf_internal_r+0x818>
   41074:	01000174 	movhi	r4,5
   41078:	18c00404 	addi	r3,r3,16
   4107c:	10800044 	addi	r2,r2,1
   41080:	213e9784 	addi	r4,r4,-1442
   41084:	41000015 	stw	r4,0(r8)
   41088:	45800115 	stw	r22,4(r8)
   4108c:	d8c02015 	stw	r3,128(sp)
   41090:	d8801f15 	stw	r2,124(sp)
   41094:	e0bff40e 	bge	fp,r2,41068 <__alt_mem_onchip_memory2_1+0xfffc0068>
   41098:	d9801e04 	addi	r6,sp,120
   4109c:	b80b883a 	mov	r5,r23
   410a0:	8009883a 	mov	r4,r16
   410a4:	0047ea40 	call	47ea4 <__sprint_r>
   410a8:	103f011e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   410ac:	8c7ffc04 	addi	r17,r17,-16
   410b0:	d8c02017 	ldw	r3,128(sp)
   410b4:	d8801f17 	ldw	r2,124(sp)
   410b8:	da000404 	addi	r8,sp,16
   410bc:	b47fed16 	blt	r22,r17,41074 <__alt_mem_onchip_memory2_1+0xfffc0074>
   410c0:	9021883a 	mov	r16,r18
   410c4:	9825883a 	mov	r18,r19
   410c8:	8827883a 	mov	r19,r17
   410cc:	dc403b17 	ldw	r17,236(sp)
   410d0:	d9403517 	ldw	r5,212(sp)
   410d4:	98c7883a 	add	r3,r19,r3
   410d8:	10800044 	addi	r2,r2,1
   410dc:	41400015 	stw	r5,0(r8)
   410e0:	44c00115 	stw	r19,4(r8)
   410e4:	d8c02015 	stw	r3,128(sp)
   410e8:	d8801f15 	stw	r2,124(sp)
   410ec:	010001c4 	movi	r4,7
   410f0:	2082a316 	blt	r4,r2,41b80 <___vfprintf_internal_r+0x12d8>
   410f4:	df002787 	ldb	fp,158(sp)
   410f8:	42000204 	addi	r8,r8,8
   410fc:	e0000c26 	beq	fp,zero,41130 <___vfprintf_internal_r+0x888>
   41100:	d8801f17 	ldw	r2,124(sp)
   41104:	d9002784 	addi	r4,sp,158
   41108:	18c00044 	addi	r3,r3,1
   4110c:	10800044 	addi	r2,r2,1
   41110:	41000015 	stw	r4,0(r8)
   41114:	01000044 	movi	r4,1
   41118:	41000115 	stw	r4,4(r8)
   4111c:	d8c02015 	stw	r3,128(sp)
   41120:	d8801f15 	stw	r2,124(sp)
   41124:	010001c4 	movi	r4,7
   41128:	20823c16 	blt	r4,r2,41a1c <___vfprintf_internal_r+0x1174>
   4112c:	42000204 	addi	r8,r8,8
   41130:	d8802b17 	ldw	r2,172(sp)
   41134:	10000c26 	beq	r2,zero,41168 <___vfprintf_internal_r+0x8c0>
   41138:	d8801f17 	ldw	r2,124(sp)
   4113c:	d9002704 	addi	r4,sp,156
   41140:	18c00084 	addi	r3,r3,2
   41144:	10800044 	addi	r2,r2,1
   41148:	41000015 	stw	r4,0(r8)
   4114c:	01000084 	movi	r4,2
   41150:	41000115 	stw	r4,4(r8)
   41154:	d8c02015 	stw	r3,128(sp)
   41158:	d8801f15 	stw	r2,124(sp)
   4115c:	010001c4 	movi	r4,7
   41160:	20823616 	blt	r4,r2,41a3c <___vfprintf_internal_r+0x1194>
   41164:	42000204 	addi	r8,r8,8
   41168:	d9003017 	ldw	r4,192(sp)
   4116c:	00802004 	movi	r2,128
   41170:	20819926 	beq	r4,r2,417d8 <___vfprintf_internal_r+0xf30>
   41174:	d9402917 	ldw	r5,164(sp)
   41178:	d8802e17 	ldw	r2,184(sp)
   4117c:	28adc83a 	sub	r22,r5,r2
   41180:	0580310e 	bge	zero,r22,41248 <___vfprintf_internal_r+0x9a0>
   41184:	07000404 	movi	fp,16
   41188:	d8801f17 	ldw	r2,124(sp)
   4118c:	e584140e 	bge	fp,r22,421e0 <___vfprintf_internal_r+0x1938>
   41190:	01400174 	movhi	r5,5
   41194:	297e9384 	addi	r5,r5,-1458
   41198:	dc402915 	stw	r17,164(sp)
   4119c:	d9402b15 	stw	r5,172(sp)
   411a0:	b023883a 	mov	r17,r22
   411a4:	04c001c4 	movi	r19,7
   411a8:	a82d883a 	mov	r22,r21
   411ac:	902b883a 	mov	r21,r18
   411b0:	8025883a 	mov	r18,r16
   411b4:	dc002c17 	ldw	r16,176(sp)
   411b8:	00000306 	br	411c8 <___vfprintf_internal_r+0x920>
   411bc:	8c7ffc04 	addi	r17,r17,-16
   411c0:	42000204 	addi	r8,r8,8
   411c4:	e440110e 	bge	fp,r17,4120c <___vfprintf_internal_r+0x964>
   411c8:	18c00404 	addi	r3,r3,16
   411cc:	10800044 	addi	r2,r2,1
   411d0:	45000015 	stw	r20,0(r8)
   411d4:	47000115 	stw	fp,4(r8)
   411d8:	d8c02015 	stw	r3,128(sp)
   411dc:	d8801f15 	stw	r2,124(sp)
   411e0:	98bff60e 	bge	r19,r2,411bc <__alt_mem_onchip_memory2_1+0xfffc01bc>
   411e4:	d9801e04 	addi	r6,sp,120
   411e8:	b80b883a 	mov	r5,r23
   411ec:	8009883a 	mov	r4,r16
   411f0:	0047ea40 	call	47ea4 <__sprint_r>
   411f4:	103eae1e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   411f8:	8c7ffc04 	addi	r17,r17,-16
   411fc:	d8c02017 	ldw	r3,128(sp)
   41200:	d8801f17 	ldw	r2,124(sp)
   41204:	da000404 	addi	r8,sp,16
   41208:	e47fef16 	blt	fp,r17,411c8 <__alt_mem_onchip_memory2_1+0xfffc01c8>
   4120c:	9021883a 	mov	r16,r18
   41210:	a825883a 	mov	r18,r21
   41214:	b02b883a 	mov	r21,r22
   41218:	882d883a 	mov	r22,r17
   4121c:	dc402917 	ldw	r17,164(sp)
   41220:	d9002b17 	ldw	r4,172(sp)
   41224:	1d87883a 	add	r3,r3,r22
   41228:	10800044 	addi	r2,r2,1
   4122c:	41000015 	stw	r4,0(r8)
   41230:	45800115 	stw	r22,4(r8)
   41234:	d8c02015 	stw	r3,128(sp)
   41238:	d8801f15 	stw	r2,124(sp)
   4123c:	010001c4 	movi	r4,7
   41240:	2081ee16 	blt	r4,r2,419fc <___vfprintf_internal_r+0x1154>
   41244:	42000204 	addi	r8,r8,8
   41248:	9080400c 	andi	r2,r18,256
   4124c:	1001181e 	bne	r2,zero,416b0 <___vfprintf_internal_r+0xe08>
   41250:	d9402e17 	ldw	r5,184(sp)
   41254:	d8801f17 	ldw	r2,124(sp)
   41258:	44000015 	stw	r16,0(r8)
   4125c:	1947883a 	add	r3,r3,r5
   41260:	10800044 	addi	r2,r2,1
   41264:	41400115 	stw	r5,4(r8)
   41268:	d8c02015 	stw	r3,128(sp)
   4126c:	d8801f15 	stw	r2,124(sp)
   41270:	010001c4 	movi	r4,7
   41274:	2081d316 	blt	r4,r2,419c4 <___vfprintf_internal_r+0x111c>
   41278:	42000204 	addi	r8,r8,8
   4127c:	9480010c 	andi	r18,r18,4
   41280:	90003226 	beq	r18,zero,4134c <___vfprintf_internal_r+0xaa4>
   41284:	d9403117 	ldw	r5,196(sp)
   41288:	d8802a17 	ldw	r2,168(sp)
   4128c:	28a1c83a 	sub	r16,r5,r2
   41290:	04002e0e 	bge	zero,r16,4134c <___vfprintf_internal_r+0xaa4>
   41294:	04400404 	movi	r17,16
   41298:	d8801f17 	ldw	r2,124(sp)
   4129c:	8c04a20e 	bge	r17,r16,42528 <___vfprintf_internal_r+0x1c80>
   412a0:	01400174 	movhi	r5,5
   412a4:	297e9784 	addi	r5,r5,-1442
   412a8:	d9403515 	stw	r5,212(sp)
   412ac:	048001c4 	movi	r18,7
   412b0:	dcc02c17 	ldw	r19,176(sp)
   412b4:	00000306 	br	412c4 <___vfprintf_internal_r+0xa1c>
   412b8:	843ffc04 	addi	r16,r16,-16
   412bc:	42000204 	addi	r8,r8,8
   412c0:	8c00130e 	bge	r17,r16,41310 <___vfprintf_internal_r+0xa68>
   412c4:	01000174 	movhi	r4,5
   412c8:	18c00404 	addi	r3,r3,16
   412cc:	10800044 	addi	r2,r2,1
   412d0:	213e9784 	addi	r4,r4,-1442
   412d4:	41000015 	stw	r4,0(r8)
   412d8:	44400115 	stw	r17,4(r8)
   412dc:	d8c02015 	stw	r3,128(sp)
   412e0:	d8801f15 	stw	r2,124(sp)
   412e4:	90bff40e 	bge	r18,r2,412b8 <__alt_mem_onchip_memory2_1+0xfffc02b8>
   412e8:	d9801e04 	addi	r6,sp,120
   412ec:	b80b883a 	mov	r5,r23
   412f0:	9809883a 	mov	r4,r19
   412f4:	0047ea40 	call	47ea4 <__sprint_r>
   412f8:	103e6d1e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   412fc:	843ffc04 	addi	r16,r16,-16
   41300:	d8c02017 	ldw	r3,128(sp)
   41304:	d8801f17 	ldw	r2,124(sp)
   41308:	da000404 	addi	r8,sp,16
   4130c:	8c3fed16 	blt	r17,r16,412c4 <__alt_mem_onchip_memory2_1+0xfffc02c4>
   41310:	d9403517 	ldw	r5,212(sp)
   41314:	1c07883a 	add	r3,r3,r16
   41318:	10800044 	addi	r2,r2,1
   4131c:	41400015 	stw	r5,0(r8)
   41320:	44000115 	stw	r16,4(r8)
   41324:	d8c02015 	stw	r3,128(sp)
   41328:	d8801f15 	stw	r2,124(sp)
   4132c:	010001c4 	movi	r4,7
   41330:	2080060e 	bge	r4,r2,4134c <___vfprintf_internal_r+0xaa4>
   41334:	d9002c17 	ldw	r4,176(sp)
   41338:	d9801e04 	addi	r6,sp,120
   4133c:	b80b883a 	mov	r5,r23
   41340:	0047ea40 	call	47ea4 <__sprint_r>
   41344:	103e5a1e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   41348:	d8c02017 	ldw	r3,128(sp)
   4134c:	d8803117 	ldw	r2,196(sp)
   41350:	d9002a17 	ldw	r4,168(sp)
   41354:	1100010e 	bge	r2,r4,4135c <___vfprintf_internal_r+0xab4>
   41358:	2005883a 	mov	r2,r4
   4135c:	d9402f17 	ldw	r5,188(sp)
   41360:	288b883a 	add	r5,r5,r2
   41364:	d9402f15 	stw	r5,188(sp)
   41368:	18019e1e 	bne	r3,zero,419e4 <___vfprintf_internal_r+0x113c>
   4136c:	a8800007 	ldb	r2,0(r21)
   41370:	d8001f15 	stw	zero,124(sp)
   41374:	da000404 	addi	r8,sp,16
   41378:	103d851e 	bne	r2,zero,40990 <__alt_mem_onchip_memory2_1+0xfffbf990>
   4137c:	a821883a 	mov	r16,r21
   41380:	003d9b06 	br	409f0 <__alt_mem_onchip_memory2_1+0xfffbf9f0>
   41384:	18c03fcc 	andi	r3,r3,255
   41388:	1805c11e 	bne	r3,zero,42a90 <___vfprintf_internal_r+0x21e8>
   4138c:	94800414 	ori	r18,r18,16
   41390:	9080080c 	andi	r2,r18,32
   41394:	10020c26 	beq	r2,zero,41bc8 <___vfprintf_internal_r+0x1320>
   41398:	d8802d17 	ldw	r2,180(sp)
   4139c:	d9002917 	ldw	r4,164(sp)
   413a0:	d8002785 	stb	zero,158(sp)
   413a4:	10c00204 	addi	r3,r2,8
   413a8:	14c00017 	ldw	r19,0(r2)
   413ac:	15800117 	ldw	r22,4(r2)
   413b0:	20040f16 	blt	r4,zero,423f0 <___vfprintf_internal_r+0x1b48>
   413b4:	013fdfc4 	movi	r4,-129
   413b8:	9d84b03a 	or	r2,r19,r22
   413bc:	d8c02d15 	stw	r3,180(sp)
   413c0:	9124703a 	and	r18,r18,r4
   413c4:	0039883a 	mov	fp,zero
   413c8:	103e891e 	bne	r2,zero,40df0 <__alt_mem_onchip_memory2_1+0xfffbfdf0>
   413cc:	d9002917 	ldw	r4,164(sp)
   413d0:	2002c11e 	bne	r4,zero,41ed8 <___vfprintf_internal_r+0x1630>
   413d4:	d8002915 	stw	zero,164(sp)
   413d8:	d8002e15 	stw	zero,184(sp)
   413dc:	dc001e04 	addi	r16,sp,120
   413e0:	003ef806 	br	40fc4 <__alt_mem_onchip_memory2_1+0xfffbffc4>
   413e4:	18c03fcc 	andi	r3,r3,255
   413e8:	18059d1e 	bne	r3,zero,42a60 <___vfprintf_internal_r+0x21b8>
   413ec:	01400174 	movhi	r5,5
   413f0:	297e8704 	addi	r5,r5,-1508
   413f4:	d9403915 	stw	r5,228(sp)
   413f8:	9080080c 	andi	r2,r18,32
   413fc:	10005226 	beq	r2,zero,41548 <___vfprintf_internal_r+0xca0>
   41400:	d8802d17 	ldw	r2,180(sp)
   41404:	14c00017 	ldw	r19,0(r2)
   41408:	15800117 	ldw	r22,4(r2)
   4140c:	10800204 	addi	r2,r2,8
   41410:	d8802d15 	stw	r2,180(sp)
   41414:	9080004c 	andi	r2,r18,1
   41418:	10019026 	beq	r2,zero,41a5c <___vfprintf_internal_r+0x11b4>
   4141c:	9d84b03a 	or	r2,r19,r22
   41420:	10036926 	beq	r2,zero,421c8 <___vfprintf_internal_r+0x1920>
   41424:	d8c02917 	ldw	r3,164(sp)
   41428:	00800c04 	movi	r2,48
   4142c:	d8802705 	stb	r2,156(sp)
   41430:	dc402745 	stb	r17,157(sp)
   41434:	d8002785 	stb	zero,158(sp)
   41438:	90800094 	ori	r2,r18,2
   4143c:	18045d16 	blt	r3,zero,425b4 <___vfprintf_internal_r+0x1d0c>
   41440:	00bfdfc4 	movi	r2,-129
   41444:	90a4703a 	and	r18,r18,r2
   41448:	94800094 	ori	r18,r18,2
   4144c:	0039883a 	mov	fp,zero
   41450:	d9003917 	ldw	r4,228(sp)
   41454:	dc001e04 	addi	r16,sp,120
   41458:	988003cc 	andi	r2,r19,15
   4145c:	b006973a 	slli	r3,r22,28
   41460:	2085883a 	add	r2,r4,r2
   41464:	9826d13a 	srli	r19,r19,4
   41468:	10800003 	ldbu	r2,0(r2)
   4146c:	b02cd13a 	srli	r22,r22,4
   41470:	843fffc4 	addi	r16,r16,-1
   41474:	1ce6b03a 	or	r19,r3,r19
   41478:	80800005 	stb	r2,0(r16)
   4147c:	9d84b03a 	or	r2,r19,r22
   41480:	103ff51e 	bne	r2,zero,41458 <__alt_mem_onchip_memory2_1+0xfffc0458>
   41484:	d8c02817 	ldw	r3,160(sp)
   41488:	1c07c83a 	sub	r3,r3,r16
   4148c:	d8c02e15 	stw	r3,184(sp)
   41490:	003ecc06 	br	40fc4 <__alt_mem_onchip_memory2_1+0xfffbffc4>
   41494:	18c03fcc 	andi	r3,r3,255
   41498:	183e9f26 	beq	r3,zero,40f18 <__alt_mem_onchip_memory2_1+0xfffbff18>
   4149c:	d9c02785 	stb	r7,158(sp)
   414a0:	003e9d06 	br	40f18 <__alt_mem_onchip_memory2_1+0xfffbff18>
   414a4:	00c00044 	movi	r3,1
   414a8:	01c00ac4 	movi	r7,43
   414ac:	ac400007 	ldb	r17,0(r21)
   414b0:	003d5e06 	br	40a2c <__alt_mem_onchip_memory2_1+0xfffbfa2c>
   414b4:	94800814 	ori	r18,r18,32
   414b8:	ac400007 	ldb	r17,0(r21)
   414bc:	003d5b06 	br	40a2c <__alt_mem_onchip_memory2_1+0xfffbfa2c>
   414c0:	d8c02d17 	ldw	r3,180(sp)
   414c4:	d8002785 	stb	zero,158(sp)
   414c8:	1c000017 	ldw	r16,0(r3)
   414cc:	1cc00104 	addi	r19,r3,4
   414d0:	80041926 	beq	r16,zero,42538 <___vfprintf_internal_r+0x1c90>
   414d4:	d9002917 	ldw	r4,164(sp)
   414d8:	2003d016 	blt	r4,zero,4241c <___vfprintf_internal_r+0x1b74>
   414dc:	200d883a 	mov	r6,r4
   414e0:	000b883a 	mov	r5,zero
   414e4:	8009883a 	mov	r4,r16
   414e8:	da003d15 	stw	r8,244(sp)
   414ec:	00460b80 	call	460b8 <memchr>
   414f0:	da003d17 	ldw	r8,244(sp)
   414f4:	10045426 	beq	r2,zero,42648 <___vfprintf_internal_r+0x1da0>
   414f8:	1405c83a 	sub	r2,r2,r16
   414fc:	d8802e15 	stw	r2,184(sp)
   41500:	1003cc16 	blt	r2,zero,42434 <___vfprintf_internal_r+0x1b8c>
   41504:	df002783 	ldbu	fp,158(sp)
   41508:	d8802a15 	stw	r2,168(sp)
   4150c:	dcc02d15 	stw	r19,180(sp)
   41510:	d8002915 	stw	zero,164(sp)
   41514:	d8003215 	stw	zero,200(sp)
   41518:	003eb006 	br	40fdc <__alt_mem_onchip_memory2_1+0xfffbffdc>
   4151c:	18c03fcc 	andi	r3,r3,255
   41520:	183f9b26 	beq	r3,zero,41390 <__alt_mem_onchip_memory2_1+0xfffc0390>
   41524:	d9c02785 	stb	r7,158(sp)
   41528:	003f9906 	br	41390 <__alt_mem_onchip_memory2_1+0xfffc0390>
   4152c:	18c03fcc 	andi	r3,r3,255
   41530:	1805551e 	bne	r3,zero,42a88 <___vfprintf_internal_r+0x21e0>
   41534:	01400174 	movhi	r5,5
   41538:	297e8c04 	addi	r5,r5,-1488
   4153c:	d9403915 	stw	r5,228(sp)
   41540:	9080080c 	andi	r2,r18,32
   41544:	103fae1e 	bne	r2,zero,41400 <__alt_mem_onchip_memory2_1+0xfffc0400>
   41548:	9080040c 	andi	r2,r18,16
   4154c:	1002de26 	beq	r2,zero,420c8 <___vfprintf_internal_r+0x1820>
   41550:	d8c02d17 	ldw	r3,180(sp)
   41554:	002d883a 	mov	r22,zero
   41558:	1cc00017 	ldw	r19,0(r3)
   4155c:	18c00104 	addi	r3,r3,4
   41560:	d8c02d15 	stw	r3,180(sp)
   41564:	003fab06 	br	41414 <__alt_mem_onchip_memory2_1+0xfffc0414>
   41568:	38803fcc 	andi	r2,r7,255
   4156c:	1080201c 	xori	r2,r2,128
   41570:	10bfe004 	addi	r2,r2,-128
   41574:	1002d21e 	bne	r2,zero,420c0 <___vfprintf_internal_r+0x1818>
   41578:	00c00044 	movi	r3,1
   4157c:	01c00804 	movi	r7,32
   41580:	ac400007 	ldb	r17,0(r21)
   41584:	003d2906 	br	40a2c <__alt_mem_onchip_memory2_1+0xfffbfa2c>
   41588:	94800054 	ori	r18,r18,1
   4158c:	ac400007 	ldb	r17,0(r21)
   41590:	003d2606 	br	40a2c <__alt_mem_onchip_memory2_1+0xfffbfa2c>
   41594:	18c03fcc 	andi	r3,r3,255
   41598:	183e0526 	beq	r3,zero,40db0 <__alt_mem_onchip_memory2_1+0xfffbfdb0>
   4159c:	d9c02785 	stb	r7,158(sp)
   415a0:	003e0306 	br	40db0 <__alt_mem_onchip_memory2_1+0xfffbfdb0>
   415a4:	94801014 	ori	r18,r18,64
   415a8:	ac400007 	ldb	r17,0(r21)
   415ac:	003d1f06 	br	40a2c <__alt_mem_onchip_memory2_1+0xfffbfa2c>
   415b0:	ac400007 	ldb	r17,0(r21)
   415b4:	8a438726 	beq	r17,r9,423d4 <___vfprintf_internal_r+0x1b2c>
   415b8:	94800414 	ori	r18,r18,16
   415bc:	003d1b06 	br	40a2c <__alt_mem_onchip_memory2_1+0xfffbfa2c>
   415c0:	18c03fcc 	andi	r3,r3,255
   415c4:	1805341e 	bne	r3,zero,42a98 <___vfprintf_internal_r+0x21f0>
   415c8:	9080080c 	andi	r2,r18,32
   415cc:	1002cd26 	beq	r2,zero,42104 <___vfprintf_internal_r+0x185c>
   415d0:	d9402d17 	ldw	r5,180(sp)
   415d4:	d9002f17 	ldw	r4,188(sp)
   415d8:	28800017 	ldw	r2,0(r5)
   415dc:	2007d7fa 	srai	r3,r4,31
   415e0:	29400104 	addi	r5,r5,4
   415e4:	d9402d15 	stw	r5,180(sp)
   415e8:	11000015 	stw	r4,0(r2)
   415ec:	10c00115 	stw	r3,4(r2)
   415f0:	003ce506 	br	40988 <__alt_mem_onchip_memory2_1+0xfffbf988>
   415f4:	d8c02d17 	ldw	r3,180(sp)
   415f8:	d9002d17 	ldw	r4,180(sp)
   415fc:	d8002785 	stb	zero,158(sp)
   41600:	18800017 	ldw	r2,0(r3)
   41604:	21000104 	addi	r4,r4,4
   41608:	00c00044 	movi	r3,1
   4160c:	d8c02a15 	stw	r3,168(sp)
   41610:	d8801405 	stb	r2,80(sp)
   41614:	d9002d15 	stw	r4,180(sp)
   41618:	d8c02e15 	stw	r3,184(sp)
   4161c:	d8002915 	stw	zero,164(sp)
   41620:	d8003215 	stw	zero,200(sp)
   41624:	dc001404 	addi	r16,sp,80
   41628:	0039883a 	mov	fp,zero
   4162c:	003e7206 	br	40ff8 <__alt_mem_onchip_memory2_1+0xfffbfff8>
   41630:	01000174 	movhi	r4,5
   41634:	213e8c04 	addi	r4,r4,-1488
   41638:	0039883a 	mov	fp,zero
   4163c:	d9003915 	stw	r4,228(sp)
   41640:	04401e04 	movi	r17,120
   41644:	003f8206 	br	41450 <__alt_mem_onchip_memory2_1+0xfffc0450>
   41648:	18c03fcc 	andi	r3,r3,255
   4164c:	1805061e 	bne	r3,zero,42a68 <___vfprintf_internal_r+0x21c0>
   41650:	883d9126 	beq	r17,zero,40c98 <__alt_mem_onchip_memory2_1+0xfffbfc98>
   41654:	00c00044 	movi	r3,1
   41658:	d8c02a15 	stw	r3,168(sp)
   4165c:	dc401405 	stb	r17,80(sp)
   41660:	d8002785 	stb	zero,158(sp)
   41664:	003fec06 	br	41618 <__alt_mem_onchip_memory2_1+0xfffc0618>
   41668:	01400174 	movhi	r5,5
   4166c:	297e8c04 	addi	r5,r5,-1488
   41670:	d9403915 	stw	r5,228(sp)
   41674:	d8c02d15 	stw	r3,180(sp)
   41678:	1025883a 	mov	r18,r2
   4167c:	04401e04 	movi	r17,120
   41680:	9d84b03a 	or	r2,r19,r22
   41684:	1000fc1e 	bne	r2,zero,41a78 <___vfprintf_internal_r+0x11d0>
   41688:	0039883a 	mov	fp,zero
   4168c:	00800084 	movi	r2,2
   41690:	10803fcc 	andi	r2,r2,255
   41694:	00c00044 	movi	r3,1
   41698:	10c20f26 	beq	r2,r3,41ed8 <___vfprintf_internal_r+0x1630>
   4169c:	00c00084 	movi	r3,2
   416a0:	10fd6326 	beq	r2,r3,40c30 <__alt_mem_onchip_memory2_1+0xfffbfc30>
   416a4:	003e2d06 	br	40f5c <__alt_mem_onchip_memory2_1+0xfffbff5c>
   416a8:	d8c02017 	ldw	r3,128(sp)
   416ac:	003e9306 	br	410fc <__alt_mem_onchip_memory2_1+0xfffc00fc>
   416b0:	00801944 	movi	r2,101
   416b4:	14407e0e 	bge	r2,r17,418b0 <___vfprintf_internal_r+0x1008>
   416b8:	d9003617 	ldw	r4,216(sp)
   416bc:	d9403817 	ldw	r5,224(sp)
   416c0:	000d883a 	mov	r6,zero
   416c4:	000f883a 	mov	r7,zero
   416c8:	d8c03c15 	stw	r3,240(sp)
   416cc:	da003d15 	stw	r8,244(sp)
   416d0:	004bb1c0 	call	4bb1c <__eqdf2>
   416d4:	d8c03c17 	ldw	r3,240(sp)
   416d8:	da003d17 	ldw	r8,244(sp)
   416dc:	1000f71e 	bne	r2,zero,41abc <___vfprintf_internal_r+0x1214>
   416e0:	d8801f17 	ldw	r2,124(sp)
   416e4:	01000174 	movhi	r4,5
   416e8:	213e9304 	addi	r4,r4,-1460
   416ec:	18c00044 	addi	r3,r3,1
   416f0:	10800044 	addi	r2,r2,1
   416f4:	41000015 	stw	r4,0(r8)
   416f8:	01000044 	movi	r4,1
   416fc:	41000115 	stw	r4,4(r8)
   41700:	d8c02015 	stw	r3,128(sp)
   41704:	d8801f15 	stw	r2,124(sp)
   41708:	010001c4 	movi	r4,7
   4170c:	2082b816 	blt	r4,r2,421f0 <___vfprintf_internal_r+0x1948>
   41710:	42000204 	addi	r8,r8,8
   41714:	d8802617 	ldw	r2,152(sp)
   41718:	d9403317 	ldw	r5,204(sp)
   4171c:	11400216 	blt	r2,r5,41728 <___vfprintf_internal_r+0xe80>
   41720:	9080004c 	andi	r2,r18,1
   41724:	103ed526 	beq	r2,zero,4127c <__alt_mem_onchip_memory2_1+0xfffc027c>
   41728:	d8803717 	ldw	r2,220(sp)
   4172c:	d9003417 	ldw	r4,208(sp)
   41730:	d9403717 	ldw	r5,220(sp)
   41734:	1887883a 	add	r3,r3,r2
   41738:	d8801f17 	ldw	r2,124(sp)
   4173c:	41000015 	stw	r4,0(r8)
   41740:	41400115 	stw	r5,4(r8)
   41744:	10800044 	addi	r2,r2,1
   41748:	d8c02015 	stw	r3,128(sp)
   4174c:	d8801f15 	stw	r2,124(sp)
   41750:	010001c4 	movi	r4,7
   41754:	20832916 	blt	r4,r2,423fc <___vfprintf_internal_r+0x1b54>
   41758:	42000204 	addi	r8,r8,8
   4175c:	d8803317 	ldw	r2,204(sp)
   41760:	143fffc4 	addi	r16,r2,-1
   41764:	043ec50e 	bge	zero,r16,4127c <__alt_mem_onchip_memory2_1+0xfffc027c>
   41768:	04400404 	movi	r17,16
   4176c:	d8801f17 	ldw	r2,124(sp)
   41770:	8c00880e 	bge	r17,r16,41994 <___vfprintf_internal_r+0x10ec>
   41774:	01400174 	movhi	r5,5
   41778:	297e9384 	addi	r5,r5,-1458
   4177c:	d9402b15 	stw	r5,172(sp)
   41780:	058001c4 	movi	r22,7
   41784:	dcc02c17 	ldw	r19,176(sp)
   41788:	00000306 	br	41798 <___vfprintf_internal_r+0xef0>
   4178c:	42000204 	addi	r8,r8,8
   41790:	843ffc04 	addi	r16,r16,-16
   41794:	8c00820e 	bge	r17,r16,419a0 <___vfprintf_internal_r+0x10f8>
   41798:	18c00404 	addi	r3,r3,16
   4179c:	10800044 	addi	r2,r2,1
   417a0:	45000015 	stw	r20,0(r8)
   417a4:	44400115 	stw	r17,4(r8)
   417a8:	d8c02015 	stw	r3,128(sp)
   417ac:	d8801f15 	stw	r2,124(sp)
   417b0:	b0bff60e 	bge	r22,r2,4178c <__alt_mem_onchip_memory2_1+0xfffc078c>
   417b4:	d9801e04 	addi	r6,sp,120
   417b8:	b80b883a 	mov	r5,r23
   417bc:	9809883a 	mov	r4,r19
   417c0:	0047ea40 	call	47ea4 <__sprint_r>
   417c4:	103d3a1e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   417c8:	d8c02017 	ldw	r3,128(sp)
   417cc:	d8801f17 	ldw	r2,124(sp)
   417d0:	da000404 	addi	r8,sp,16
   417d4:	003fee06 	br	41790 <__alt_mem_onchip_memory2_1+0xfffc0790>
   417d8:	d9403117 	ldw	r5,196(sp)
   417dc:	d8802a17 	ldw	r2,168(sp)
   417e0:	28adc83a 	sub	r22,r5,r2
   417e4:	05be630e 	bge	zero,r22,41174 <__alt_mem_onchip_memory2_1+0xfffc0174>
   417e8:	07000404 	movi	fp,16
   417ec:	d8801f17 	ldw	r2,124(sp)
   417f0:	e5838f0e 	bge	fp,r22,42630 <___vfprintf_internal_r+0x1d88>
   417f4:	01400174 	movhi	r5,5
   417f8:	297e9384 	addi	r5,r5,-1458
   417fc:	dc403015 	stw	r17,192(sp)
   41800:	d9402b15 	stw	r5,172(sp)
   41804:	b023883a 	mov	r17,r22
   41808:	04c001c4 	movi	r19,7
   4180c:	a82d883a 	mov	r22,r21
   41810:	902b883a 	mov	r21,r18
   41814:	8025883a 	mov	r18,r16
   41818:	dc002c17 	ldw	r16,176(sp)
   4181c:	00000306 	br	4182c <___vfprintf_internal_r+0xf84>
   41820:	8c7ffc04 	addi	r17,r17,-16
   41824:	42000204 	addi	r8,r8,8
   41828:	e440110e 	bge	fp,r17,41870 <___vfprintf_internal_r+0xfc8>
   4182c:	18c00404 	addi	r3,r3,16
   41830:	10800044 	addi	r2,r2,1
   41834:	45000015 	stw	r20,0(r8)
   41838:	47000115 	stw	fp,4(r8)
   4183c:	d8c02015 	stw	r3,128(sp)
   41840:	d8801f15 	stw	r2,124(sp)
   41844:	98bff60e 	bge	r19,r2,41820 <__alt_mem_onchip_memory2_1+0xfffc0820>
   41848:	d9801e04 	addi	r6,sp,120
   4184c:	b80b883a 	mov	r5,r23
   41850:	8009883a 	mov	r4,r16
   41854:	0047ea40 	call	47ea4 <__sprint_r>
   41858:	103d151e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   4185c:	8c7ffc04 	addi	r17,r17,-16
   41860:	d8c02017 	ldw	r3,128(sp)
   41864:	d8801f17 	ldw	r2,124(sp)
   41868:	da000404 	addi	r8,sp,16
   4186c:	e47fef16 	blt	fp,r17,4182c <__alt_mem_onchip_memory2_1+0xfffc082c>
   41870:	9021883a 	mov	r16,r18
   41874:	a825883a 	mov	r18,r21
   41878:	b02b883a 	mov	r21,r22
   4187c:	882d883a 	mov	r22,r17
   41880:	dc403017 	ldw	r17,192(sp)
   41884:	d9002b17 	ldw	r4,172(sp)
   41888:	1d87883a 	add	r3,r3,r22
   4188c:	10800044 	addi	r2,r2,1
   41890:	41000015 	stw	r4,0(r8)
   41894:	45800115 	stw	r22,4(r8)
   41898:	d8c02015 	stw	r3,128(sp)
   4189c:	d8801f15 	stw	r2,124(sp)
   418a0:	010001c4 	movi	r4,7
   418a4:	20818e16 	blt	r4,r2,41ee0 <___vfprintf_internal_r+0x1638>
   418a8:	42000204 	addi	r8,r8,8
   418ac:	003e3106 	br	41174 <__alt_mem_onchip_memory2_1+0xfffc0174>
   418b0:	d9403317 	ldw	r5,204(sp)
   418b4:	00800044 	movi	r2,1
   418b8:	18c00044 	addi	r3,r3,1
   418bc:	1141530e 	bge	r2,r5,41e0c <___vfprintf_internal_r+0x1564>
   418c0:	dc401f17 	ldw	r17,124(sp)
   418c4:	00800044 	movi	r2,1
   418c8:	40800115 	stw	r2,4(r8)
   418cc:	8c400044 	addi	r17,r17,1
   418d0:	44000015 	stw	r16,0(r8)
   418d4:	d8c02015 	stw	r3,128(sp)
   418d8:	dc401f15 	stw	r17,124(sp)
   418dc:	008001c4 	movi	r2,7
   418e0:	14416b16 	blt	r2,r17,41e90 <___vfprintf_internal_r+0x15e8>
   418e4:	42000204 	addi	r8,r8,8
   418e8:	d8803717 	ldw	r2,220(sp)
   418ec:	d9003417 	ldw	r4,208(sp)
   418f0:	8c400044 	addi	r17,r17,1
   418f4:	10c7883a 	add	r3,r2,r3
   418f8:	40800115 	stw	r2,4(r8)
   418fc:	41000015 	stw	r4,0(r8)
   41900:	d8c02015 	stw	r3,128(sp)
   41904:	dc401f15 	stw	r17,124(sp)
   41908:	008001c4 	movi	r2,7
   4190c:	14416916 	blt	r2,r17,41eb4 <___vfprintf_internal_r+0x160c>
   41910:	45800204 	addi	r22,r8,8
   41914:	d9003617 	ldw	r4,216(sp)
   41918:	d9403817 	ldw	r5,224(sp)
   4191c:	000d883a 	mov	r6,zero
   41920:	000f883a 	mov	r7,zero
   41924:	d8c03c15 	stw	r3,240(sp)
   41928:	004bb1c0 	call	4bb1c <__eqdf2>
   4192c:	d8c03c17 	ldw	r3,240(sp)
   41930:	1000bc26 	beq	r2,zero,41c24 <___vfprintf_internal_r+0x137c>
   41934:	d9403317 	ldw	r5,204(sp)
   41938:	84000044 	addi	r16,r16,1
   4193c:	8c400044 	addi	r17,r17,1
   41940:	28bfffc4 	addi	r2,r5,-1
   41944:	1887883a 	add	r3,r3,r2
   41948:	b0800115 	stw	r2,4(r22)
   4194c:	b4000015 	stw	r16,0(r22)
   41950:	d8c02015 	stw	r3,128(sp)
   41954:	dc401f15 	stw	r17,124(sp)
   41958:	008001c4 	movi	r2,7
   4195c:	14414316 	blt	r2,r17,41e6c <___vfprintf_internal_r+0x15c4>
   41960:	b5800204 	addi	r22,r22,8
   41964:	d9003a17 	ldw	r4,232(sp)
   41968:	df0022c4 	addi	fp,sp,139
   4196c:	8c400044 	addi	r17,r17,1
   41970:	20c7883a 	add	r3,r4,r3
   41974:	b7000015 	stw	fp,0(r22)
   41978:	b1000115 	stw	r4,4(r22)
   4197c:	d8c02015 	stw	r3,128(sp)
   41980:	dc401f15 	stw	r17,124(sp)
   41984:	008001c4 	movi	r2,7
   41988:	14400e16 	blt	r2,r17,419c4 <___vfprintf_internal_r+0x111c>
   4198c:	b2000204 	addi	r8,r22,8
   41990:	003e3a06 	br	4127c <__alt_mem_onchip_memory2_1+0xfffc027c>
   41994:	01000174 	movhi	r4,5
   41998:	213e9384 	addi	r4,r4,-1458
   4199c:	d9002b15 	stw	r4,172(sp)
   419a0:	d9002b17 	ldw	r4,172(sp)
   419a4:	1c07883a 	add	r3,r3,r16
   419a8:	44000115 	stw	r16,4(r8)
   419ac:	41000015 	stw	r4,0(r8)
   419b0:	10800044 	addi	r2,r2,1
   419b4:	d8c02015 	stw	r3,128(sp)
   419b8:	d8801f15 	stw	r2,124(sp)
   419bc:	010001c4 	movi	r4,7
   419c0:	20be2d0e 	bge	r4,r2,41278 <__alt_mem_onchip_memory2_1+0xfffc0278>
   419c4:	d9002c17 	ldw	r4,176(sp)
   419c8:	d9801e04 	addi	r6,sp,120
   419cc:	b80b883a 	mov	r5,r23
   419d0:	0047ea40 	call	47ea4 <__sprint_r>
   419d4:	103cb61e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   419d8:	d8c02017 	ldw	r3,128(sp)
   419dc:	da000404 	addi	r8,sp,16
   419e0:	003e2606 	br	4127c <__alt_mem_onchip_memory2_1+0xfffc027c>
   419e4:	d9002c17 	ldw	r4,176(sp)
   419e8:	d9801e04 	addi	r6,sp,120
   419ec:	b80b883a 	mov	r5,r23
   419f0:	0047ea40 	call	47ea4 <__sprint_r>
   419f4:	103e5d26 	beq	r2,zero,4136c <__alt_mem_onchip_memory2_1+0xfffc036c>
   419f8:	003cad06 	br	40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   419fc:	d9002c17 	ldw	r4,176(sp)
   41a00:	d9801e04 	addi	r6,sp,120
   41a04:	b80b883a 	mov	r5,r23
   41a08:	0047ea40 	call	47ea4 <__sprint_r>
   41a0c:	103ca81e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   41a10:	d8c02017 	ldw	r3,128(sp)
   41a14:	da000404 	addi	r8,sp,16
   41a18:	003e0b06 	br	41248 <__alt_mem_onchip_memory2_1+0xfffc0248>
   41a1c:	d9002c17 	ldw	r4,176(sp)
   41a20:	d9801e04 	addi	r6,sp,120
   41a24:	b80b883a 	mov	r5,r23
   41a28:	0047ea40 	call	47ea4 <__sprint_r>
   41a2c:	103ca01e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   41a30:	d8c02017 	ldw	r3,128(sp)
   41a34:	da000404 	addi	r8,sp,16
   41a38:	003dbd06 	br	41130 <__alt_mem_onchip_memory2_1+0xfffc0130>
   41a3c:	d9002c17 	ldw	r4,176(sp)
   41a40:	d9801e04 	addi	r6,sp,120
   41a44:	b80b883a 	mov	r5,r23
   41a48:	0047ea40 	call	47ea4 <__sprint_r>
   41a4c:	103c981e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   41a50:	d8c02017 	ldw	r3,128(sp)
   41a54:	da000404 	addi	r8,sp,16
   41a58:	003dc306 	br	41168 <__alt_mem_onchip_memory2_1+0xfffc0168>
   41a5c:	d8802917 	ldw	r2,164(sp)
   41a60:	d8002785 	stb	zero,158(sp)
   41a64:	103f0616 	blt	r2,zero,41680 <__alt_mem_onchip_memory2_1+0xfffc0680>
   41a68:	00ffdfc4 	movi	r3,-129
   41a6c:	9d84b03a 	or	r2,r19,r22
   41a70:	90e4703a 	and	r18,r18,r3
   41a74:	103c6b26 	beq	r2,zero,40c24 <__alt_mem_onchip_memory2_1+0xfffbfc24>
   41a78:	0039883a 	mov	fp,zero
   41a7c:	003e7406 	br	41450 <__alt_mem_onchip_memory2_1+0xfffc0450>
   41a80:	9080040c 	andi	r2,r18,16
   41a84:	1001b326 	beq	r2,zero,42154 <___vfprintf_internal_r+0x18ac>
   41a88:	d9002d17 	ldw	r4,180(sp)
   41a8c:	d9402917 	ldw	r5,164(sp)
   41a90:	d8002785 	stb	zero,158(sp)
   41a94:	20800104 	addi	r2,r4,4
   41a98:	24c00017 	ldw	r19,0(r4)
   41a9c:	002d883a 	mov	r22,zero
   41aa0:	2801b516 	blt	r5,zero,42178 <___vfprintf_internal_r+0x18d0>
   41aa4:	00ffdfc4 	movi	r3,-129
   41aa8:	d8802d15 	stw	r2,180(sp)
   41aac:	90e4703a 	and	r18,r18,r3
   41ab0:	983d2726 	beq	r19,zero,40f50 <__alt_mem_onchip_memory2_1+0xfffbff50>
   41ab4:	0039883a 	mov	fp,zero
   41ab8:	003d2a06 	br	40f64 <__alt_mem_onchip_memory2_1+0xfffbff64>
   41abc:	dc402617 	ldw	r17,152(sp)
   41ac0:	0441d30e 	bge	zero,r17,42210 <___vfprintf_internal_r+0x1968>
   41ac4:	dc403217 	ldw	r17,200(sp)
   41ac8:	d8803317 	ldw	r2,204(sp)
   41acc:	1440010e 	bge	r2,r17,41ad4 <___vfprintf_internal_r+0x122c>
   41ad0:	1023883a 	mov	r17,r2
   41ad4:	04400a0e 	bge	zero,r17,41b00 <___vfprintf_internal_r+0x1258>
   41ad8:	d8801f17 	ldw	r2,124(sp)
   41adc:	1c47883a 	add	r3,r3,r17
   41ae0:	44000015 	stw	r16,0(r8)
   41ae4:	10800044 	addi	r2,r2,1
   41ae8:	44400115 	stw	r17,4(r8)
   41aec:	d8c02015 	stw	r3,128(sp)
   41af0:	d8801f15 	stw	r2,124(sp)
   41af4:	010001c4 	movi	r4,7
   41af8:	20826516 	blt	r4,r2,42490 <___vfprintf_internal_r+0x1be8>
   41afc:	42000204 	addi	r8,r8,8
   41b00:	88026116 	blt	r17,zero,42488 <___vfprintf_internal_r+0x1be0>
   41b04:	d9003217 	ldw	r4,200(sp)
   41b08:	2463c83a 	sub	r17,r4,r17
   41b0c:	04407b0e 	bge	zero,r17,41cfc <___vfprintf_internal_r+0x1454>
   41b10:	05800404 	movi	r22,16
   41b14:	d8801f17 	ldw	r2,124(sp)
   41b18:	b4419d0e 	bge	r22,r17,42190 <___vfprintf_internal_r+0x18e8>
   41b1c:	01000174 	movhi	r4,5
   41b20:	213e9384 	addi	r4,r4,-1458
   41b24:	d9002b15 	stw	r4,172(sp)
   41b28:	070001c4 	movi	fp,7
   41b2c:	dcc02c17 	ldw	r19,176(sp)
   41b30:	00000306 	br	41b40 <___vfprintf_internal_r+0x1298>
   41b34:	42000204 	addi	r8,r8,8
   41b38:	8c7ffc04 	addi	r17,r17,-16
   41b3c:	b441970e 	bge	r22,r17,4219c <___vfprintf_internal_r+0x18f4>
   41b40:	18c00404 	addi	r3,r3,16
   41b44:	10800044 	addi	r2,r2,1
   41b48:	45000015 	stw	r20,0(r8)
   41b4c:	45800115 	stw	r22,4(r8)
   41b50:	d8c02015 	stw	r3,128(sp)
   41b54:	d8801f15 	stw	r2,124(sp)
   41b58:	e0bff60e 	bge	fp,r2,41b34 <__alt_mem_onchip_memory2_1+0xfffc0b34>
   41b5c:	d9801e04 	addi	r6,sp,120
   41b60:	b80b883a 	mov	r5,r23
   41b64:	9809883a 	mov	r4,r19
   41b68:	0047ea40 	call	47ea4 <__sprint_r>
   41b6c:	103c501e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   41b70:	d8c02017 	ldw	r3,128(sp)
   41b74:	d8801f17 	ldw	r2,124(sp)
   41b78:	da000404 	addi	r8,sp,16
   41b7c:	003fee06 	br	41b38 <__alt_mem_onchip_memory2_1+0xfffc0b38>
   41b80:	d9002c17 	ldw	r4,176(sp)
   41b84:	d9801e04 	addi	r6,sp,120
   41b88:	b80b883a 	mov	r5,r23
   41b8c:	0047ea40 	call	47ea4 <__sprint_r>
   41b90:	103c471e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   41b94:	d8c02017 	ldw	r3,128(sp)
   41b98:	df002787 	ldb	fp,158(sp)
   41b9c:	da000404 	addi	r8,sp,16
   41ba0:	003d5606 	br	410fc <__alt_mem_onchip_memory2_1+0xfffc00fc>
   41ba4:	9080040c 	andi	r2,r18,16
   41ba8:	10016126 	beq	r2,zero,42130 <___vfprintf_internal_r+0x1888>
   41bac:	d8802d17 	ldw	r2,180(sp)
   41bb0:	14c00017 	ldw	r19,0(r2)
   41bb4:	10800104 	addi	r2,r2,4
   41bb8:	d8802d15 	stw	r2,180(sp)
   41bbc:	982dd7fa 	srai	r22,r19,31
   41bc0:	b005883a 	mov	r2,r22
   41bc4:	003c8206 	br	40dd0 <__alt_mem_onchip_memory2_1+0xfffbfdd0>
   41bc8:	9080040c 	andi	r2,r18,16
   41bcc:	10003526 	beq	r2,zero,41ca4 <___vfprintf_internal_r+0x13fc>
   41bd0:	d9402d17 	ldw	r5,180(sp)
   41bd4:	d8c02917 	ldw	r3,164(sp)
   41bd8:	d8002785 	stb	zero,158(sp)
   41bdc:	28800104 	addi	r2,r5,4
   41be0:	2cc00017 	ldw	r19,0(r5)
   41be4:	002d883a 	mov	r22,zero
   41be8:	18003716 	blt	r3,zero,41cc8 <___vfprintf_internal_r+0x1420>
   41bec:	00ffdfc4 	movi	r3,-129
   41bf0:	d8802d15 	stw	r2,180(sp)
   41bf4:	90e4703a 	and	r18,r18,r3
   41bf8:	0039883a 	mov	fp,zero
   41bfc:	983df326 	beq	r19,zero,413cc <__alt_mem_onchip_memory2_1+0xfffc03cc>
   41c00:	00800244 	movi	r2,9
   41c04:	14fc7b36 	bltu	r2,r19,40df4 <__alt_mem_onchip_memory2_1+0xfffbfdf4>
   41c08:	d8c02817 	ldw	r3,160(sp)
   41c0c:	dc001dc4 	addi	r16,sp,119
   41c10:	9cc00c04 	addi	r19,r19,48
   41c14:	1c07c83a 	sub	r3,r3,r16
   41c18:	dcc01dc5 	stb	r19,119(sp)
   41c1c:	d8c02e15 	stw	r3,184(sp)
   41c20:	003ce806 	br	40fc4 <__alt_mem_onchip_memory2_1+0xfffbffc4>
   41c24:	d8803317 	ldw	r2,204(sp)
   41c28:	143fffc4 	addi	r16,r2,-1
   41c2c:	043f4d0e 	bge	zero,r16,41964 <__alt_mem_onchip_memory2_1+0xfffc0964>
   41c30:	07000404 	movi	fp,16
   41c34:	e400810e 	bge	fp,r16,41e3c <___vfprintf_internal_r+0x1594>
   41c38:	01400174 	movhi	r5,5
   41c3c:	297e9384 	addi	r5,r5,-1458
   41c40:	d9402b15 	stw	r5,172(sp)
   41c44:	01c001c4 	movi	r7,7
   41c48:	dcc02c17 	ldw	r19,176(sp)
   41c4c:	00000306 	br	41c5c <___vfprintf_internal_r+0x13b4>
   41c50:	b5800204 	addi	r22,r22,8
   41c54:	843ffc04 	addi	r16,r16,-16
   41c58:	e4007b0e 	bge	fp,r16,41e48 <___vfprintf_internal_r+0x15a0>
   41c5c:	18c00404 	addi	r3,r3,16
   41c60:	8c400044 	addi	r17,r17,1
   41c64:	b5000015 	stw	r20,0(r22)
   41c68:	b7000115 	stw	fp,4(r22)
   41c6c:	d8c02015 	stw	r3,128(sp)
   41c70:	dc401f15 	stw	r17,124(sp)
   41c74:	3c7ff60e 	bge	r7,r17,41c50 <__alt_mem_onchip_memory2_1+0xfffc0c50>
   41c78:	d9801e04 	addi	r6,sp,120
   41c7c:	b80b883a 	mov	r5,r23
   41c80:	9809883a 	mov	r4,r19
   41c84:	d9c03c15 	stw	r7,240(sp)
   41c88:	0047ea40 	call	47ea4 <__sprint_r>
   41c8c:	d9c03c17 	ldw	r7,240(sp)
   41c90:	103c071e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   41c94:	d8c02017 	ldw	r3,128(sp)
   41c98:	dc401f17 	ldw	r17,124(sp)
   41c9c:	dd800404 	addi	r22,sp,16
   41ca0:	003fec06 	br	41c54 <__alt_mem_onchip_memory2_1+0xfffc0c54>
   41ca4:	9080100c 	andi	r2,r18,64
   41ca8:	d8002785 	stb	zero,158(sp)
   41cac:	10010e26 	beq	r2,zero,420e8 <___vfprintf_internal_r+0x1840>
   41cb0:	d9002d17 	ldw	r4,180(sp)
   41cb4:	d9402917 	ldw	r5,164(sp)
   41cb8:	002d883a 	mov	r22,zero
   41cbc:	20800104 	addi	r2,r4,4
   41cc0:	24c0000b 	ldhu	r19,0(r4)
   41cc4:	283fc90e 	bge	r5,zero,41bec <__alt_mem_onchip_memory2_1+0xfffc0bec>
   41cc8:	d8802d15 	stw	r2,180(sp)
   41ccc:	0039883a 	mov	fp,zero
   41cd0:	9d84b03a 	or	r2,r19,r22
   41cd4:	103c461e 	bne	r2,zero,40df0 <__alt_mem_onchip_memory2_1+0xfffbfdf0>
   41cd8:	00800044 	movi	r2,1
   41cdc:	003e6c06 	br	41690 <__alt_mem_onchip_memory2_1+0xfffc0690>
   41ce0:	d9002c17 	ldw	r4,176(sp)
   41ce4:	d9801e04 	addi	r6,sp,120
   41ce8:	b80b883a 	mov	r5,r23
   41cec:	0047ea40 	call	47ea4 <__sprint_r>
   41cf0:	103bef1e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   41cf4:	d8c02017 	ldw	r3,128(sp)
   41cf8:	da000404 	addi	r8,sp,16
   41cfc:	d9003217 	ldw	r4,200(sp)
   41d00:	d8802617 	ldw	r2,152(sp)
   41d04:	d9403317 	ldw	r5,204(sp)
   41d08:	8123883a 	add	r17,r16,r4
   41d0c:	11400216 	blt	r2,r5,41d18 <___vfprintf_internal_r+0x1470>
   41d10:	9100004c 	andi	r4,r18,1
   41d14:	20000d26 	beq	r4,zero,41d4c <___vfprintf_internal_r+0x14a4>
   41d18:	d9003717 	ldw	r4,220(sp)
   41d1c:	d9403417 	ldw	r5,208(sp)
   41d20:	1907883a 	add	r3,r3,r4
   41d24:	d9001f17 	ldw	r4,124(sp)
   41d28:	41400015 	stw	r5,0(r8)
   41d2c:	d9403717 	ldw	r5,220(sp)
   41d30:	21000044 	addi	r4,r4,1
   41d34:	d8c02015 	stw	r3,128(sp)
   41d38:	41400115 	stw	r5,4(r8)
   41d3c:	d9001f15 	stw	r4,124(sp)
   41d40:	014001c4 	movi	r5,7
   41d44:	2901e816 	blt	r5,r4,424e8 <___vfprintf_internal_r+0x1c40>
   41d48:	42000204 	addi	r8,r8,8
   41d4c:	d9003317 	ldw	r4,204(sp)
   41d50:	8121883a 	add	r16,r16,r4
   41d54:	2085c83a 	sub	r2,r4,r2
   41d58:	8461c83a 	sub	r16,r16,r17
   41d5c:	1400010e 	bge	r2,r16,41d64 <___vfprintf_internal_r+0x14bc>
   41d60:	1021883a 	mov	r16,r2
   41d64:	04000a0e 	bge	zero,r16,41d90 <___vfprintf_internal_r+0x14e8>
   41d68:	d9001f17 	ldw	r4,124(sp)
   41d6c:	1c07883a 	add	r3,r3,r16
   41d70:	44400015 	stw	r17,0(r8)
   41d74:	21000044 	addi	r4,r4,1
   41d78:	44000115 	stw	r16,4(r8)
   41d7c:	d8c02015 	stw	r3,128(sp)
   41d80:	d9001f15 	stw	r4,124(sp)
   41d84:	014001c4 	movi	r5,7
   41d88:	2901fb16 	blt	r5,r4,42578 <___vfprintf_internal_r+0x1cd0>
   41d8c:	42000204 	addi	r8,r8,8
   41d90:	8001f716 	blt	r16,zero,42570 <___vfprintf_internal_r+0x1cc8>
   41d94:	1421c83a 	sub	r16,r2,r16
   41d98:	043d380e 	bge	zero,r16,4127c <__alt_mem_onchip_memory2_1+0xfffc027c>
   41d9c:	04400404 	movi	r17,16
   41da0:	d8801f17 	ldw	r2,124(sp)
   41da4:	8c3efb0e 	bge	r17,r16,41994 <__alt_mem_onchip_memory2_1+0xfffc0994>
   41da8:	01400174 	movhi	r5,5
   41dac:	297e9384 	addi	r5,r5,-1458
   41db0:	d9402b15 	stw	r5,172(sp)
   41db4:	058001c4 	movi	r22,7
   41db8:	dcc02c17 	ldw	r19,176(sp)
   41dbc:	00000306 	br	41dcc <___vfprintf_internal_r+0x1524>
   41dc0:	42000204 	addi	r8,r8,8
   41dc4:	843ffc04 	addi	r16,r16,-16
   41dc8:	8c3ef50e 	bge	r17,r16,419a0 <__alt_mem_onchip_memory2_1+0xfffc09a0>
   41dcc:	18c00404 	addi	r3,r3,16
   41dd0:	10800044 	addi	r2,r2,1
   41dd4:	45000015 	stw	r20,0(r8)
   41dd8:	44400115 	stw	r17,4(r8)
   41ddc:	d8c02015 	stw	r3,128(sp)
   41de0:	d8801f15 	stw	r2,124(sp)
   41de4:	b0bff60e 	bge	r22,r2,41dc0 <__alt_mem_onchip_memory2_1+0xfffc0dc0>
   41de8:	d9801e04 	addi	r6,sp,120
   41dec:	b80b883a 	mov	r5,r23
   41df0:	9809883a 	mov	r4,r19
   41df4:	0047ea40 	call	47ea4 <__sprint_r>
   41df8:	103bad1e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   41dfc:	d8c02017 	ldw	r3,128(sp)
   41e00:	d8801f17 	ldw	r2,124(sp)
   41e04:	da000404 	addi	r8,sp,16
   41e08:	003fee06 	br	41dc4 <__alt_mem_onchip_memory2_1+0xfffc0dc4>
   41e0c:	9088703a 	and	r4,r18,r2
   41e10:	203eab1e 	bne	r4,zero,418c0 <__alt_mem_onchip_memory2_1+0xfffc08c0>
   41e14:	dc401f17 	ldw	r17,124(sp)
   41e18:	40800115 	stw	r2,4(r8)
   41e1c:	44000015 	stw	r16,0(r8)
   41e20:	8c400044 	addi	r17,r17,1
   41e24:	d8c02015 	stw	r3,128(sp)
   41e28:	dc401f15 	stw	r17,124(sp)
   41e2c:	008001c4 	movi	r2,7
   41e30:	14400e16 	blt	r2,r17,41e6c <___vfprintf_internal_r+0x15c4>
   41e34:	45800204 	addi	r22,r8,8
   41e38:	003eca06 	br	41964 <__alt_mem_onchip_memory2_1+0xfffc0964>
   41e3c:	01000174 	movhi	r4,5
   41e40:	213e9384 	addi	r4,r4,-1458
   41e44:	d9002b15 	stw	r4,172(sp)
   41e48:	d8802b17 	ldw	r2,172(sp)
   41e4c:	1c07883a 	add	r3,r3,r16
   41e50:	8c400044 	addi	r17,r17,1
   41e54:	b0800015 	stw	r2,0(r22)
   41e58:	b4000115 	stw	r16,4(r22)
   41e5c:	d8c02015 	stw	r3,128(sp)
   41e60:	dc401f15 	stw	r17,124(sp)
   41e64:	008001c4 	movi	r2,7
   41e68:	147ebd0e 	bge	r2,r17,41960 <__alt_mem_onchip_memory2_1+0xfffc0960>
   41e6c:	d9002c17 	ldw	r4,176(sp)
   41e70:	d9801e04 	addi	r6,sp,120
   41e74:	b80b883a 	mov	r5,r23
   41e78:	0047ea40 	call	47ea4 <__sprint_r>
   41e7c:	103b8c1e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   41e80:	d8c02017 	ldw	r3,128(sp)
   41e84:	dc401f17 	ldw	r17,124(sp)
   41e88:	dd800404 	addi	r22,sp,16
   41e8c:	003eb506 	br	41964 <__alt_mem_onchip_memory2_1+0xfffc0964>
   41e90:	d9002c17 	ldw	r4,176(sp)
   41e94:	d9801e04 	addi	r6,sp,120
   41e98:	b80b883a 	mov	r5,r23
   41e9c:	0047ea40 	call	47ea4 <__sprint_r>
   41ea0:	103b831e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   41ea4:	d8c02017 	ldw	r3,128(sp)
   41ea8:	dc401f17 	ldw	r17,124(sp)
   41eac:	da000404 	addi	r8,sp,16
   41eb0:	003e8d06 	br	418e8 <__alt_mem_onchip_memory2_1+0xfffc08e8>
   41eb4:	d9002c17 	ldw	r4,176(sp)
   41eb8:	d9801e04 	addi	r6,sp,120
   41ebc:	b80b883a 	mov	r5,r23
   41ec0:	0047ea40 	call	47ea4 <__sprint_r>
   41ec4:	103b7a1e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   41ec8:	d8c02017 	ldw	r3,128(sp)
   41ecc:	dc401f17 	ldw	r17,124(sp)
   41ed0:	dd800404 	addi	r22,sp,16
   41ed4:	003e8f06 	br	41914 <__alt_mem_onchip_memory2_1+0xfffc0914>
   41ed8:	0027883a 	mov	r19,zero
   41edc:	003f4a06 	br	41c08 <__alt_mem_onchip_memory2_1+0xfffc0c08>
   41ee0:	d9002c17 	ldw	r4,176(sp)
   41ee4:	d9801e04 	addi	r6,sp,120
   41ee8:	b80b883a 	mov	r5,r23
   41eec:	0047ea40 	call	47ea4 <__sprint_r>
   41ef0:	103b6f1e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   41ef4:	d8c02017 	ldw	r3,128(sp)
   41ef8:	da000404 	addi	r8,sp,16
   41efc:	003c9d06 	br	41174 <__alt_mem_onchip_memory2_1+0xfffc0174>
   41f00:	04e7c83a 	sub	r19,zero,r19
   41f04:	9804c03a 	cmpne	r2,r19,zero
   41f08:	05adc83a 	sub	r22,zero,r22
   41f0c:	b0adc83a 	sub	r22,r22,r2
   41f10:	d8802917 	ldw	r2,164(sp)
   41f14:	07000b44 	movi	fp,45
   41f18:	df002785 	stb	fp,158(sp)
   41f1c:	10017b16 	blt	r2,zero,4250c <___vfprintf_internal_r+0x1c64>
   41f20:	00bfdfc4 	movi	r2,-129
   41f24:	90a4703a 	and	r18,r18,r2
   41f28:	003bb106 	br	40df0 <__alt_mem_onchip_memory2_1+0xfffbfdf0>
   41f2c:	d9003617 	ldw	r4,216(sp)
   41f30:	d9403817 	ldw	r5,224(sp)
   41f34:	da003d15 	stw	r8,244(sp)
   41f38:	0047ac80 	call	47ac8 <__fpclassifyd>
   41f3c:	da003d17 	ldw	r8,244(sp)
   41f40:	1000f026 	beq	r2,zero,42304 <___vfprintf_internal_r+0x1a5c>
   41f44:	d9002917 	ldw	r4,164(sp)
   41f48:	05bff7c4 	movi	r22,-33
   41f4c:	00bfffc4 	movi	r2,-1
   41f50:	8dac703a 	and	r22,r17,r22
   41f54:	20820026 	beq	r4,r2,42758 <___vfprintf_internal_r+0x1eb0>
   41f58:	008011c4 	movi	r2,71
   41f5c:	b081f726 	beq	r22,r2,4273c <___vfprintf_internal_r+0x1e94>
   41f60:	d9003817 	ldw	r4,224(sp)
   41f64:	90c04014 	ori	r3,r18,256
   41f68:	d8c02b15 	stw	r3,172(sp)
   41f6c:	20021516 	blt	r4,zero,427c4 <___vfprintf_internal_r+0x1f1c>
   41f70:	dcc03817 	ldw	r19,224(sp)
   41f74:	d8002a05 	stb	zero,168(sp)
   41f78:	00801984 	movi	r2,102
   41f7c:	8881f926 	beq	r17,r2,42764 <___vfprintf_internal_r+0x1ebc>
   41f80:	00801184 	movi	r2,70
   41f84:	88821c26 	beq	r17,r2,427f8 <___vfprintf_internal_r+0x1f50>
   41f88:	00801144 	movi	r2,69
   41f8c:	b081ef26 	beq	r22,r2,4274c <___vfprintf_internal_r+0x1ea4>
   41f90:	d8c02917 	ldw	r3,164(sp)
   41f94:	d8802104 	addi	r2,sp,132
   41f98:	d8800315 	stw	r2,12(sp)
   41f9c:	d9403617 	ldw	r5,216(sp)
   41fa0:	d8802504 	addi	r2,sp,148
   41fa4:	d9002c17 	ldw	r4,176(sp)
   41fa8:	d8800215 	stw	r2,8(sp)
   41fac:	d8802604 	addi	r2,sp,152
   41fb0:	d8c00015 	stw	r3,0(sp)
   41fb4:	d8800115 	stw	r2,4(sp)
   41fb8:	01c00084 	movi	r7,2
   41fbc:	980d883a 	mov	r6,r19
   41fc0:	d8c03c15 	stw	r3,240(sp)
   41fc4:	da003d15 	stw	r8,244(sp)
   41fc8:	0042ecc0 	call	42ecc <_dtoa_r>
   41fcc:	1021883a 	mov	r16,r2
   41fd0:	008019c4 	movi	r2,103
   41fd4:	d8c03c17 	ldw	r3,240(sp)
   41fd8:	da003d17 	ldw	r8,244(sp)
   41fdc:	88817126 	beq	r17,r2,425a4 <___vfprintf_internal_r+0x1cfc>
   41fe0:	008011c4 	movi	r2,71
   41fe4:	88829226 	beq	r17,r2,42a30 <___vfprintf_internal_r+0x2188>
   41fe8:	80f9883a 	add	fp,r16,r3
   41fec:	d9003617 	ldw	r4,216(sp)
   41ff0:	000d883a 	mov	r6,zero
   41ff4:	000f883a 	mov	r7,zero
   41ff8:	980b883a 	mov	r5,r19
   41ffc:	da003d15 	stw	r8,244(sp)
   42000:	004bb1c0 	call	4bb1c <__eqdf2>
   42004:	da003d17 	ldw	r8,244(sp)
   42008:	10018d26 	beq	r2,zero,42640 <___vfprintf_internal_r+0x1d98>
   4200c:	d8802117 	ldw	r2,132(sp)
   42010:	1700062e 	bgeu	r2,fp,4202c <___vfprintf_internal_r+0x1784>
   42014:	01000c04 	movi	r4,48
   42018:	10c00044 	addi	r3,r2,1
   4201c:	d8c02115 	stw	r3,132(sp)
   42020:	11000005 	stb	r4,0(r2)
   42024:	d8802117 	ldw	r2,132(sp)
   42028:	173ffb36 	bltu	r2,fp,42018 <__alt_mem_onchip_memory2_1+0xfffc1018>
   4202c:	1405c83a 	sub	r2,r2,r16
   42030:	d8803315 	stw	r2,204(sp)
   42034:	008011c4 	movi	r2,71
   42038:	b0817626 	beq	r22,r2,42614 <___vfprintf_internal_r+0x1d6c>
   4203c:	00801944 	movi	r2,101
   42040:	1442810e 	bge	r2,r17,42a48 <___vfprintf_internal_r+0x21a0>
   42044:	d8c02617 	ldw	r3,152(sp)
   42048:	00801984 	movi	r2,102
   4204c:	d8c03215 	stw	r3,200(sp)
   42050:	8881fe26 	beq	r17,r2,4284c <___vfprintf_internal_r+0x1fa4>
   42054:	d8c03217 	ldw	r3,200(sp)
   42058:	d9003317 	ldw	r4,204(sp)
   4205c:	1901dd16 	blt	r3,r4,427d4 <___vfprintf_internal_r+0x1f2c>
   42060:	9480004c 	andi	r18,r18,1
   42064:	90022b1e 	bne	r18,zero,42914 <___vfprintf_internal_r+0x206c>
   42068:	1805883a 	mov	r2,r3
   4206c:	18028016 	blt	r3,zero,42a70 <___vfprintf_internal_r+0x21c8>
   42070:	d8c03217 	ldw	r3,200(sp)
   42074:	044019c4 	movi	r17,103
   42078:	d8c02e15 	stw	r3,184(sp)
   4207c:	df002a07 	ldb	fp,168(sp)
   42080:	e001531e 	bne	fp,zero,425d0 <___vfprintf_internal_r+0x1d28>
   42084:	df002783 	ldbu	fp,158(sp)
   42088:	d8802a15 	stw	r2,168(sp)
   4208c:	dc802b17 	ldw	r18,172(sp)
   42090:	d8002915 	stw	zero,164(sp)
   42094:	003bd106 	br	40fdc <__alt_mem_onchip_memory2_1+0xfffbffdc>
   42098:	d8802d17 	ldw	r2,180(sp)
   4209c:	d8c02d17 	ldw	r3,180(sp)
   420a0:	d9002d17 	ldw	r4,180(sp)
   420a4:	10800017 	ldw	r2,0(r2)
   420a8:	18c00117 	ldw	r3,4(r3)
   420ac:	21000204 	addi	r4,r4,8
   420b0:	d8803615 	stw	r2,216(sp)
   420b4:	d8c03815 	stw	r3,224(sp)
   420b8:	d9002d15 	stw	r4,180(sp)
   420bc:	003b7506 	br	40e94 <__alt_mem_onchip_memory2_1+0xfffbfe94>
   420c0:	ac400007 	ldb	r17,0(r21)
   420c4:	003a5906 	br	40a2c <__alt_mem_onchip_memory2_1+0xfffbfa2c>
   420c8:	9080100c 	andi	r2,r18,64
   420cc:	1000a826 	beq	r2,zero,42370 <___vfprintf_internal_r+0x1ac8>
   420d0:	d9002d17 	ldw	r4,180(sp)
   420d4:	002d883a 	mov	r22,zero
   420d8:	24c0000b 	ldhu	r19,0(r4)
   420dc:	21000104 	addi	r4,r4,4
   420e0:	d9002d15 	stw	r4,180(sp)
   420e4:	003ccb06 	br	41414 <__alt_mem_onchip_memory2_1+0xfffc0414>
   420e8:	d8c02d17 	ldw	r3,180(sp)
   420ec:	d9002917 	ldw	r4,164(sp)
   420f0:	002d883a 	mov	r22,zero
   420f4:	18800104 	addi	r2,r3,4
   420f8:	1cc00017 	ldw	r19,0(r3)
   420fc:	203ebb0e 	bge	r4,zero,41bec <__alt_mem_onchip_memory2_1+0xfffc0bec>
   42100:	003ef106 	br	41cc8 <__alt_mem_onchip_memory2_1+0xfffc0cc8>
   42104:	9080040c 	andi	r2,r18,16
   42108:	1000921e 	bne	r2,zero,42354 <___vfprintf_internal_r+0x1aac>
   4210c:	9480100c 	andi	r18,r18,64
   42110:	90013926 	beq	r18,zero,425f8 <___vfprintf_internal_r+0x1d50>
   42114:	d9002d17 	ldw	r4,180(sp)
   42118:	d9402f17 	ldw	r5,188(sp)
   4211c:	20800017 	ldw	r2,0(r4)
   42120:	21000104 	addi	r4,r4,4
   42124:	d9002d15 	stw	r4,180(sp)
   42128:	1140000d 	sth	r5,0(r2)
   4212c:	003a1606 	br	40988 <__alt_mem_onchip_memory2_1+0xfffbf988>
   42130:	9080100c 	andi	r2,r18,64
   42134:	10008026 	beq	r2,zero,42338 <___vfprintf_internal_r+0x1a90>
   42138:	d8c02d17 	ldw	r3,180(sp)
   4213c:	1cc0000f 	ldh	r19,0(r3)
   42140:	18c00104 	addi	r3,r3,4
   42144:	d8c02d15 	stw	r3,180(sp)
   42148:	982dd7fa 	srai	r22,r19,31
   4214c:	b005883a 	mov	r2,r22
   42150:	003b1f06 	br	40dd0 <__alt_mem_onchip_memory2_1+0xfffbfdd0>
   42154:	9080100c 	andi	r2,r18,64
   42158:	d8002785 	stb	zero,158(sp)
   4215c:	10008a1e 	bne	r2,zero,42388 <___vfprintf_internal_r+0x1ae0>
   42160:	d9402d17 	ldw	r5,180(sp)
   42164:	d8c02917 	ldw	r3,164(sp)
   42168:	002d883a 	mov	r22,zero
   4216c:	28800104 	addi	r2,r5,4
   42170:	2cc00017 	ldw	r19,0(r5)
   42174:	183e4b0e 	bge	r3,zero,41aa4 <__alt_mem_onchip_memory2_1+0xfffc0aa4>
   42178:	9d86b03a 	or	r3,r19,r22
   4217c:	d8802d15 	stw	r2,180(sp)
   42180:	183e4c1e 	bne	r3,zero,41ab4 <__alt_mem_onchip_memory2_1+0xfffc0ab4>
   42184:	0039883a 	mov	fp,zero
   42188:	0005883a 	mov	r2,zero
   4218c:	003d4006 	br	41690 <__alt_mem_onchip_memory2_1+0xfffc0690>
   42190:	01400174 	movhi	r5,5
   42194:	297e9384 	addi	r5,r5,-1458
   42198:	d9402b15 	stw	r5,172(sp)
   4219c:	d9402b17 	ldw	r5,172(sp)
   421a0:	1c47883a 	add	r3,r3,r17
   421a4:	10800044 	addi	r2,r2,1
   421a8:	41400015 	stw	r5,0(r8)
   421ac:	44400115 	stw	r17,4(r8)
   421b0:	d8c02015 	stw	r3,128(sp)
   421b4:	d8801f15 	stw	r2,124(sp)
   421b8:	010001c4 	movi	r4,7
   421bc:	20bec816 	blt	r4,r2,41ce0 <__alt_mem_onchip_memory2_1+0xfffc0ce0>
   421c0:	42000204 	addi	r8,r8,8
   421c4:	003ecd06 	br	41cfc <__alt_mem_onchip_memory2_1+0xfffc0cfc>
   421c8:	d9002917 	ldw	r4,164(sp)
   421cc:	d8002785 	stb	zero,158(sp)
   421d0:	203d2d16 	blt	r4,zero,41688 <__alt_mem_onchip_memory2_1+0xfffc0688>
   421d4:	00bfdfc4 	movi	r2,-129
   421d8:	90a4703a 	and	r18,r18,r2
   421dc:	003a9106 	br	40c24 <__alt_mem_onchip_memory2_1+0xfffbfc24>
   421e0:	01000174 	movhi	r4,5
   421e4:	213e9384 	addi	r4,r4,-1458
   421e8:	d9002b15 	stw	r4,172(sp)
   421ec:	003c0c06 	br	41220 <__alt_mem_onchip_memory2_1+0xfffc0220>
   421f0:	d9002c17 	ldw	r4,176(sp)
   421f4:	d9801e04 	addi	r6,sp,120
   421f8:	b80b883a 	mov	r5,r23
   421fc:	0047ea40 	call	47ea4 <__sprint_r>
   42200:	103aab1e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   42204:	d8c02017 	ldw	r3,128(sp)
   42208:	da000404 	addi	r8,sp,16
   4220c:	003d4106 	br	41714 <__alt_mem_onchip_memory2_1+0xfffc0714>
   42210:	d8801f17 	ldw	r2,124(sp)
   42214:	01400174 	movhi	r5,5
   42218:	01000044 	movi	r4,1
   4221c:	18c00044 	addi	r3,r3,1
   42220:	10800044 	addi	r2,r2,1
   42224:	297e9304 	addi	r5,r5,-1460
   42228:	41000115 	stw	r4,4(r8)
   4222c:	41400015 	stw	r5,0(r8)
   42230:	d8c02015 	stw	r3,128(sp)
   42234:	d8801f15 	stw	r2,124(sp)
   42238:	010001c4 	movi	r4,7
   4223c:	20805c16 	blt	r4,r2,423b0 <___vfprintf_internal_r+0x1b08>
   42240:	42000204 	addi	r8,r8,8
   42244:	8800041e 	bne	r17,zero,42258 <___vfprintf_internal_r+0x19b0>
   42248:	d8803317 	ldw	r2,204(sp)
   4224c:	1000021e 	bne	r2,zero,42258 <___vfprintf_internal_r+0x19b0>
   42250:	9080004c 	andi	r2,r18,1
   42254:	103c0926 	beq	r2,zero,4127c <__alt_mem_onchip_memory2_1+0xfffc027c>
   42258:	d9003717 	ldw	r4,220(sp)
   4225c:	d8801f17 	ldw	r2,124(sp)
   42260:	d9403417 	ldw	r5,208(sp)
   42264:	20c7883a 	add	r3,r4,r3
   42268:	10800044 	addi	r2,r2,1
   4226c:	41000115 	stw	r4,4(r8)
   42270:	41400015 	stw	r5,0(r8)
   42274:	d8c02015 	stw	r3,128(sp)
   42278:	d8801f15 	stw	r2,124(sp)
   4227c:	010001c4 	movi	r4,7
   42280:	20812116 	blt	r4,r2,42708 <___vfprintf_internal_r+0x1e60>
   42284:	42000204 	addi	r8,r8,8
   42288:	0463c83a 	sub	r17,zero,r17
   4228c:	0440730e 	bge	zero,r17,4245c <___vfprintf_internal_r+0x1bb4>
   42290:	05800404 	movi	r22,16
   42294:	b440860e 	bge	r22,r17,424b0 <___vfprintf_internal_r+0x1c08>
   42298:	01400174 	movhi	r5,5
   4229c:	297e9384 	addi	r5,r5,-1458
   422a0:	d9402b15 	stw	r5,172(sp)
   422a4:	070001c4 	movi	fp,7
   422a8:	dcc02c17 	ldw	r19,176(sp)
   422ac:	00000306 	br	422bc <___vfprintf_internal_r+0x1a14>
   422b0:	42000204 	addi	r8,r8,8
   422b4:	8c7ffc04 	addi	r17,r17,-16
   422b8:	b440800e 	bge	r22,r17,424bc <___vfprintf_internal_r+0x1c14>
   422bc:	18c00404 	addi	r3,r3,16
   422c0:	10800044 	addi	r2,r2,1
   422c4:	45000015 	stw	r20,0(r8)
   422c8:	45800115 	stw	r22,4(r8)
   422cc:	d8c02015 	stw	r3,128(sp)
   422d0:	d8801f15 	stw	r2,124(sp)
   422d4:	e0bff60e 	bge	fp,r2,422b0 <__alt_mem_onchip_memory2_1+0xfffc12b0>
   422d8:	d9801e04 	addi	r6,sp,120
   422dc:	b80b883a 	mov	r5,r23
   422e0:	9809883a 	mov	r4,r19
   422e4:	0047ea40 	call	47ea4 <__sprint_r>
   422e8:	103a711e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   422ec:	d8c02017 	ldw	r3,128(sp)
   422f0:	d8801f17 	ldw	r2,124(sp)
   422f4:	da000404 	addi	r8,sp,16
   422f8:	003fee06 	br	422b4 <__alt_mem_onchip_memory2_1+0xfffc12b4>
   422fc:	00bfffc4 	movi	r2,-1
   42300:	003a6f06 	br	40cc0 <__alt_mem_onchip_memory2_1+0xfffbfcc0>
   42304:	008011c4 	movi	r2,71
   42308:	1440b816 	blt	r2,r17,425ec <___vfprintf_internal_r+0x1d44>
   4230c:	04000174 	movhi	r16,5
   42310:	843e8504 	addi	r16,r16,-1516
   42314:	00c000c4 	movi	r3,3
   42318:	00bfdfc4 	movi	r2,-129
   4231c:	d8c02a15 	stw	r3,168(sp)
   42320:	90a4703a 	and	r18,r18,r2
   42324:	df002783 	ldbu	fp,158(sp)
   42328:	d8c02e15 	stw	r3,184(sp)
   4232c:	d8002915 	stw	zero,164(sp)
   42330:	d8003215 	stw	zero,200(sp)
   42334:	003b2906 	br	40fdc <__alt_mem_onchip_memory2_1+0xfffbffdc>
   42338:	d9002d17 	ldw	r4,180(sp)
   4233c:	24c00017 	ldw	r19,0(r4)
   42340:	21000104 	addi	r4,r4,4
   42344:	d9002d15 	stw	r4,180(sp)
   42348:	982dd7fa 	srai	r22,r19,31
   4234c:	b005883a 	mov	r2,r22
   42350:	003a9f06 	br	40dd0 <__alt_mem_onchip_memory2_1+0xfffbfdd0>
   42354:	d9402d17 	ldw	r5,180(sp)
   42358:	d8c02f17 	ldw	r3,188(sp)
   4235c:	28800017 	ldw	r2,0(r5)
   42360:	29400104 	addi	r5,r5,4
   42364:	d9402d15 	stw	r5,180(sp)
   42368:	10c00015 	stw	r3,0(r2)
   4236c:	00398606 	br	40988 <__alt_mem_onchip_memory2_1+0xfffbf988>
   42370:	d9402d17 	ldw	r5,180(sp)
   42374:	002d883a 	mov	r22,zero
   42378:	2cc00017 	ldw	r19,0(r5)
   4237c:	29400104 	addi	r5,r5,4
   42380:	d9402d15 	stw	r5,180(sp)
   42384:	003c2306 	br	41414 <__alt_mem_onchip_memory2_1+0xfffc0414>
   42388:	d8c02d17 	ldw	r3,180(sp)
   4238c:	d9002917 	ldw	r4,164(sp)
   42390:	002d883a 	mov	r22,zero
   42394:	18800104 	addi	r2,r3,4
   42398:	1cc0000b 	ldhu	r19,0(r3)
   4239c:	203dc10e 	bge	r4,zero,41aa4 <__alt_mem_onchip_memory2_1+0xfffc0aa4>
   423a0:	003f7506 	br	42178 <__alt_mem_onchip_memory2_1+0xfffc1178>
   423a4:	04000174 	movhi	r16,5
   423a8:	843e8304 	addi	r16,r16,-1524
   423ac:	003acc06 	br	40ee0 <__alt_mem_onchip_memory2_1+0xfffbfee0>
   423b0:	d9002c17 	ldw	r4,176(sp)
   423b4:	d9801e04 	addi	r6,sp,120
   423b8:	b80b883a 	mov	r5,r23
   423bc:	0047ea40 	call	47ea4 <__sprint_r>
   423c0:	103a3b1e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   423c4:	dc402617 	ldw	r17,152(sp)
   423c8:	d8c02017 	ldw	r3,128(sp)
   423cc:	da000404 	addi	r8,sp,16
   423d0:	003f9c06 	br	42244 <__alt_mem_onchip_memory2_1+0xfffc1244>
   423d4:	ac400043 	ldbu	r17,1(r21)
   423d8:	94800814 	ori	r18,r18,32
   423dc:	ad400044 	addi	r21,r21,1
   423e0:	8c403fcc 	andi	r17,r17,255
   423e4:	8c40201c 	xori	r17,r17,128
   423e8:	8c7fe004 	addi	r17,r17,-128
   423ec:	00398f06 	br	40a2c <__alt_mem_onchip_memory2_1+0xfffbfa2c>
   423f0:	d8c02d15 	stw	r3,180(sp)
   423f4:	0039883a 	mov	fp,zero
   423f8:	003e3506 	br	41cd0 <__alt_mem_onchip_memory2_1+0xfffc0cd0>
   423fc:	d9002c17 	ldw	r4,176(sp)
   42400:	d9801e04 	addi	r6,sp,120
   42404:	b80b883a 	mov	r5,r23
   42408:	0047ea40 	call	47ea4 <__sprint_r>
   4240c:	103a281e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   42410:	d8c02017 	ldw	r3,128(sp)
   42414:	da000404 	addi	r8,sp,16
   42418:	003cd006 	br	4175c <__alt_mem_onchip_memory2_1+0xfffc075c>
   4241c:	8009883a 	mov	r4,r16
   42420:	da003d15 	stw	r8,244(sp)
   42424:	00408100 	call	40810 <strlen>
   42428:	d8802e15 	stw	r2,184(sp)
   4242c:	da003d17 	ldw	r8,244(sp)
   42430:	103c340e 	bge	r2,zero,41504 <__alt_mem_onchip_memory2_1+0xfffc0504>
   42434:	0005883a 	mov	r2,zero
   42438:	003c3206 	br	41504 <__alt_mem_onchip_memory2_1+0xfffc0504>
   4243c:	d9002c17 	ldw	r4,176(sp)
   42440:	d9801e04 	addi	r6,sp,120
   42444:	b80b883a 	mov	r5,r23
   42448:	0047ea40 	call	47ea4 <__sprint_r>
   4244c:	103a181e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   42450:	d8c02017 	ldw	r3,128(sp)
   42454:	d8801f17 	ldw	r2,124(sp)
   42458:	da000404 	addi	r8,sp,16
   4245c:	d9403317 	ldw	r5,204(sp)
   42460:	10800044 	addi	r2,r2,1
   42464:	44000015 	stw	r16,0(r8)
   42468:	28c7883a 	add	r3,r5,r3
   4246c:	003b7d06 	br	41264 <__alt_mem_onchip_memory2_1+0xfffc0264>
   42470:	01000174 	movhi	r4,5
   42474:	213e9784 	addi	r4,r4,-1442
   42478:	d9003515 	stw	r4,212(sp)
   4247c:	003b1406 	br	410d0 <__alt_mem_onchip_memory2_1+0xfffc00d0>
   42480:	013fffc4 	movi	r4,-1
   42484:	003a3506 	br	40d5c <__alt_mem_onchip_memory2_1+0xfffbfd5c>
   42488:	0023883a 	mov	r17,zero
   4248c:	003d9d06 	br	41b04 <__alt_mem_onchip_memory2_1+0xfffc0b04>
   42490:	d9002c17 	ldw	r4,176(sp)
   42494:	d9801e04 	addi	r6,sp,120
   42498:	b80b883a 	mov	r5,r23
   4249c:	0047ea40 	call	47ea4 <__sprint_r>
   424a0:	103a031e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   424a4:	d8c02017 	ldw	r3,128(sp)
   424a8:	da000404 	addi	r8,sp,16
   424ac:	003d9406 	br	41b00 <__alt_mem_onchip_memory2_1+0xfffc0b00>
   424b0:	01000174 	movhi	r4,5
   424b4:	213e9384 	addi	r4,r4,-1458
   424b8:	d9002b15 	stw	r4,172(sp)
   424bc:	d9002b17 	ldw	r4,172(sp)
   424c0:	1c47883a 	add	r3,r3,r17
   424c4:	10800044 	addi	r2,r2,1
   424c8:	41000015 	stw	r4,0(r8)
   424cc:	44400115 	stw	r17,4(r8)
   424d0:	d8c02015 	stw	r3,128(sp)
   424d4:	d8801f15 	stw	r2,124(sp)
   424d8:	010001c4 	movi	r4,7
   424dc:	20bfd716 	blt	r4,r2,4243c <__alt_mem_onchip_memory2_1+0xfffc143c>
   424e0:	42000204 	addi	r8,r8,8
   424e4:	003fdd06 	br	4245c <__alt_mem_onchip_memory2_1+0xfffc145c>
   424e8:	d9002c17 	ldw	r4,176(sp)
   424ec:	d9801e04 	addi	r6,sp,120
   424f0:	b80b883a 	mov	r5,r23
   424f4:	0047ea40 	call	47ea4 <__sprint_r>
   424f8:	1039ed1e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   424fc:	d8802617 	ldw	r2,152(sp)
   42500:	d8c02017 	ldw	r3,128(sp)
   42504:	da000404 	addi	r8,sp,16
   42508:	003e1006 	br	41d4c <__alt_mem_onchip_memory2_1+0xfffc0d4c>
   4250c:	00800044 	movi	r2,1
   42510:	10803fcc 	andi	r2,r2,255
   42514:	00c00044 	movi	r3,1
   42518:	10fa3526 	beq	r2,r3,40df0 <__alt_mem_onchip_memory2_1+0xfffbfdf0>
   4251c:	00c00084 	movi	r3,2
   42520:	10fbcb26 	beq	r2,r3,41450 <__alt_mem_onchip_memory2_1+0xfffc0450>
   42524:	003a8f06 	br	40f64 <__alt_mem_onchip_memory2_1+0xfffbff64>
   42528:	01000174 	movhi	r4,5
   4252c:	213e9784 	addi	r4,r4,-1442
   42530:	d9003515 	stw	r4,212(sp)
   42534:	003b7606 	br	41310 <__alt_mem_onchip_memory2_1+0xfffc0310>
   42538:	d8802917 	ldw	r2,164(sp)
   4253c:	00c00184 	movi	r3,6
   42540:	1880012e 	bgeu	r3,r2,42548 <___vfprintf_internal_r+0x1ca0>
   42544:	1805883a 	mov	r2,r3
   42548:	d8802e15 	stw	r2,184(sp)
   4254c:	1000ef16 	blt	r2,zero,4290c <___vfprintf_internal_r+0x2064>
   42550:	04000174 	movhi	r16,5
   42554:	d8802a15 	stw	r2,168(sp)
   42558:	dcc02d15 	stw	r19,180(sp)
   4255c:	d8002915 	stw	zero,164(sp)
   42560:	d8003215 	stw	zero,200(sp)
   42564:	843e9104 	addi	r16,r16,-1468
   42568:	0039883a 	mov	fp,zero
   4256c:	003aa206 	br	40ff8 <__alt_mem_onchip_memory2_1+0xfffbfff8>
   42570:	0021883a 	mov	r16,zero
   42574:	003e0706 	br	41d94 <__alt_mem_onchip_memory2_1+0xfffc0d94>
   42578:	d9002c17 	ldw	r4,176(sp)
   4257c:	d9801e04 	addi	r6,sp,120
   42580:	b80b883a 	mov	r5,r23
   42584:	0047ea40 	call	47ea4 <__sprint_r>
   42588:	1039c91e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   4258c:	d8802617 	ldw	r2,152(sp)
   42590:	d9403317 	ldw	r5,204(sp)
   42594:	d8c02017 	ldw	r3,128(sp)
   42598:	da000404 	addi	r8,sp,16
   4259c:	2885c83a 	sub	r2,r5,r2
   425a0:	003dfb06 	br	41d90 <__alt_mem_onchip_memory2_1+0xfffc0d90>
   425a4:	9080004c 	andi	r2,r18,1
   425a8:	103e8f1e 	bne	r2,zero,41fe8 <__alt_mem_onchip_memory2_1+0xfffc0fe8>
   425ac:	d8802117 	ldw	r2,132(sp)
   425b0:	003e9e06 	br	4202c <__alt_mem_onchip_memory2_1+0xfffc102c>
   425b4:	1025883a 	mov	r18,r2
   425b8:	0039883a 	mov	fp,zero
   425bc:	00800084 	movi	r2,2
   425c0:	003fd306 	br	42510 <__alt_mem_onchip_memory2_1+0xfffc1510>
   425c4:	07000b44 	movi	fp,45
   425c8:	df002785 	stb	fp,158(sp)
   425cc:	003a4006 	br	40ed0 <__alt_mem_onchip_memory2_1+0xfffbfed0>
   425d0:	00c00b44 	movi	r3,45
   425d4:	d8c02785 	stb	r3,158(sp)
   425d8:	d8802a15 	stw	r2,168(sp)
   425dc:	dc802b17 	ldw	r18,172(sp)
   425e0:	d8002915 	stw	zero,164(sp)
   425e4:	07000b44 	movi	fp,45
   425e8:	003a8006 	br	40fec <__alt_mem_onchip_memory2_1+0xfffbffec>
   425ec:	04000174 	movhi	r16,5
   425f0:	843e8604 	addi	r16,r16,-1512
   425f4:	003f4706 	br	42314 <__alt_mem_onchip_memory2_1+0xfffc1314>
   425f8:	d8c02d17 	ldw	r3,180(sp)
   425fc:	d9002f17 	ldw	r4,188(sp)
   42600:	18800017 	ldw	r2,0(r3)
   42604:	18c00104 	addi	r3,r3,4
   42608:	d8c02d15 	stw	r3,180(sp)
   4260c:	11000015 	stw	r4,0(r2)
   42610:	0038dd06 	br	40988 <__alt_mem_onchip_memory2_1+0xfffbf988>
   42614:	dd802617 	ldw	r22,152(sp)
   42618:	00bfff44 	movi	r2,-3
   4261c:	b0801c16 	blt	r22,r2,42690 <___vfprintf_internal_r+0x1de8>
   42620:	d9402917 	ldw	r5,164(sp)
   42624:	2d801a16 	blt	r5,r22,42690 <___vfprintf_internal_r+0x1de8>
   42628:	dd803215 	stw	r22,200(sp)
   4262c:	003e8906 	br	42054 <__alt_mem_onchip_memory2_1+0xfffc1054>
   42630:	01000174 	movhi	r4,5
   42634:	213e9384 	addi	r4,r4,-1458
   42638:	d9002b15 	stw	r4,172(sp)
   4263c:	003c9106 	br	41884 <__alt_mem_onchip_memory2_1+0xfffc0884>
   42640:	e005883a 	mov	r2,fp
   42644:	003e7906 	br	4202c <__alt_mem_onchip_memory2_1+0xfffc102c>
   42648:	d9402917 	ldw	r5,164(sp)
   4264c:	df002783 	ldbu	fp,158(sp)
   42650:	dcc02d15 	stw	r19,180(sp)
   42654:	d9402a15 	stw	r5,168(sp)
   42658:	d9402e15 	stw	r5,184(sp)
   4265c:	d8002915 	stw	zero,164(sp)
   42660:	d8003215 	stw	zero,200(sp)
   42664:	003a5d06 	br	40fdc <__alt_mem_onchip_memory2_1+0xfffbffdc>
   42668:	9080004c 	andi	r2,r18,1
   4266c:	0039883a 	mov	fp,zero
   42670:	10000426 	beq	r2,zero,42684 <___vfprintf_internal_r+0x1ddc>
   42674:	00800c04 	movi	r2,48
   42678:	dc001dc4 	addi	r16,sp,119
   4267c:	d8801dc5 	stb	r2,119(sp)
   42680:	003b8006 	br	41484 <__alt_mem_onchip_memory2_1+0xfffc0484>
   42684:	d8002e15 	stw	zero,184(sp)
   42688:	dc001e04 	addi	r16,sp,120
   4268c:	003a4d06 	br	40fc4 <__alt_mem_onchip_memory2_1+0xfffbffc4>
   42690:	8c7fff84 	addi	r17,r17,-2
   42694:	b5bfffc4 	addi	r22,r22,-1
   42698:	dd802615 	stw	r22,152(sp)
   4269c:	dc4022c5 	stb	r17,139(sp)
   426a0:	b000bf16 	blt	r22,zero,429a0 <___vfprintf_internal_r+0x20f8>
   426a4:	00800ac4 	movi	r2,43
   426a8:	d8802305 	stb	r2,140(sp)
   426ac:	00800244 	movi	r2,9
   426b0:	15807016 	blt	r2,r22,42874 <___vfprintf_internal_r+0x1fcc>
   426b4:	00800c04 	movi	r2,48
   426b8:	b5800c04 	addi	r22,r22,48
   426bc:	d8802345 	stb	r2,141(sp)
   426c0:	dd802385 	stb	r22,142(sp)
   426c4:	d88023c4 	addi	r2,sp,143
   426c8:	df0022c4 	addi	fp,sp,139
   426cc:	d8c03317 	ldw	r3,204(sp)
   426d0:	1739c83a 	sub	fp,r2,fp
   426d4:	d9003317 	ldw	r4,204(sp)
   426d8:	e0c7883a 	add	r3,fp,r3
   426dc:	df003a15 	stw	fp,232(sp)
   426e0:	d8c02e15 	stw	r3,184(sp)
   426e4:	00800044 	movi	r2,1
   426e8:	1100b30e 	bge	r2,r4,429b8 <___vfprintf_internal_r+0x2110>
   426ec:	d8c02e17 	ldw	r3,184(sp)
   426f0:	18c00044 	addi	r3,r3,1
   426f4:	d8c02e15 	stw	r3,184(sp)
   426f8:	1805883a 	mov	r2,r3
   426fc:	1800ac16 	blt	r3,zero,429b0 <___vfprintf_internal_r+0x2108>
   42700:	d8003215 	stw	zero,200(sp)
   42704:	003e5d06 	br	4207c <__alt_mem_onchip_memory2_1+0xfffc107c>
   42708:	d9002c17 	ldw	r4,176(sp)
   4270c:	d9801e04 	addi	r6,sp,120
   42710:	b80b883a 	mov	r5,r23
   42714:	0047ea40 	call	47ea4 <__sprint_r>
   42718:	1039651e 	bne	r2,zero,40cb0 <__alt_mem_onchip_memory2_1+0xfffbfcb0>
   4271c:	dc402617 	ldw	r17,152(sp)
   42720:	d8c02017 	ldw	r3,128(sp)
   42724:	d8801f17 	ldw	r2,124(sp)
   42728:	da000404 	addi	r8,sp,16
   4272c:	003ed606 	br	42288 <__alt_mem_onchip_memory2_1+0xfffc1288>
   42730:	582b883a 	mov	r21,r11
   42734:	d8002915 	stw	zero,164(sp)
   42738:	0038bd06 	br	40a30 <__alt_mem_onchip_memory2_1+0xfffbfa30>
   4273c:	d8802917 	ldw	r2,164(sp)
   42740:	103e071e 	bne	r2,zero,41f60 <__alt_mem_onchip_memory2_1+0xfffc0f60>
   42744:	dc002915 	stw	r16,164(sp)
   42748:	003e0506 	br	41f60 <__alt_mem_onchip_memory2_1+0xfffc0f60>
   4274c:	d9002917 	ldw	r4,164(sp)
   42750:	20c00044 	addi	r3,r4,1
   42754:	003e0f06 	br	41f94 <__alt_mem_onchip_memory2_1+0xfffc0f94>
   42758:	01400184 	movi	r5,6
   4275c:	d9402915 	stw	r5,164(sp)
   42760:	003dff06 	br	41f60 <__alt_mem_onchip_memory2_1+0xfffc0f60>
   42764:	d8802104 	addi	r2,sp,132
   42768:	d8800315 	stw	r2,12(sp)
   4276c:	d8802504 	addi	r2,sp,148
   42770:	d8800215 	stw	r2,8(sp)
   42774:	d8802604 	addi	r2,sp,152
   42778:	d8800115 	stw	r2,4(sp)
   4277c:	d8802917 	ldw	r2,164(sp)
   42780:	d9403617 	ldw	r5,216(sp)
   42784:	d9002c17 	ldw	r4,176(sp)
   42788:	d8800015 	stw	r2,0(sp)
   4278c:	01c000c4 	movi	r7,3
   42790:	980d883a 	mov	r6,r19
   42794:	da003d15 	stw	r8,244(sp)
   42798:	0042ecc0 	call	42ecc <_dtoa_r>
   4279c:	d8c02917 	ldw	r3,164(sp)
   427a0:	da003d17 	ldw	r8,244(sp)
   427a4:	1021883a 	mov	r16,r2
   427a8:	10f9883a 	add	fp,r2,r3
   427ac:	81000007 	ldb	r4,0(r16)
   427b0:	00800c04 	movi	r2,48
   427b4:	20805e26 	beq	r4,r2,42930 <___vfprintf_internal_r+0x2088>
   427b8:	d8c02617 	ldw	r3,152(sp)
   427bc:	e0f9883a 	add	fp,fp,r3
   427c0:	003e0a06 	br	41fec <__alt_mem_onchip_memory2_1+0xfffc0fec>
   427c4:	00c00b44 	movi	r3,45
   427c8:	24e0003c 	xorhi	r19,r4,32768
   427cc:	d8c02a05 	stb	r3,168(sp)
   427d0:	003de906 	br	41f78 <__alt_mem_onchip_memory2_1+0xfffc0f78>
   427d4:	d8c03217 	ldw	r3,200(sp)
   427d8:	00c07a0e 	bge	zero,r3,429c4 <___vfprintf_internal_r+0x211c>
   427dc:	00800044 	movi	r2,1
   427e0:	d9003317 	ldw	r4,204(sp)
   427e4:	1105883a 	add	r2,r2,r4
   427e8:	d8802e15 	stw	r2,184(sp)
   427ec:	10004e16 	blt	r2,zero,42928 <___vfprintf_internal_r+0x2080>
   427f0:	044019c4 	movi	r17,103
   427f4:	003e2106 	br	4207c <__alt_mem_onchip_memory2_1+0xfffc107c>
   427f8:	d9002917 	ldw	r4,164(sp)
   427fc:	d8802104 	addi	r2,sp,132
   42800:	d8800315 	stw	r2,12(sp)
   42804:	d9000015 	stw	r4,0(sp)
   42808:	d8802504 	addi	r2,sp,148
   4280c:	d9403617 	ldw	r5,216(sp)
   42810:	d9002c17 	ldw	r4,176(sp)
   42814:	d8800215 	stw	r2,8(sp)
   42818:	d8802604 	addi	r2,sp,152
   4281c:	d8800115 	stw	r2,4(sp)
   42820:	01c000c4 	movi	r7,3
   42824:	980d883a 	mov	r6,r19
   42828:	da003d15 	stw	r8,244(sp)
   4282c:	0042ecc0 	call	42ecc <_dtoa_r>
   42830:	d8c02917 	ldw	r3,164(sp)
   42834:	da003d17 	ldw	r8,244(sp)
   42838:	1021883a 	mov	r16,r2
   4283c:	00801184 	movi	r2,70
   42840:	80f9883a 	add	fp,r16,r3
   42844:	88bfd926 	beq	r17,r2,427ac <__alt_mem_onchip_memory2_1+0xfffc17ac>
   42848:	003de806 	br	41fec <__alt_mem_onchip_memory2_1+0xfffc0fec>
   4284c:	d9002917 	ldw	r4,164(sp)
   42850:	00c04d0e 	bge	zero,r3,42988 <___vfprintf_internal_r+0x20e0>
   42854:	2000441e 	bne	r4,zero,42968 <___vfprintf_internal_r+0x20c0>
   42858:	9480004c 	andi	r18,r18,1
   4285c:	9000421e 	bne	r18,zero,42968 <___vfprintf_internal_r+0x20c0>
   42860:	1805883a 	mov	r2,r3
   42864:	18007016 	blt	r3,zero,42a28 <___vfprintf_internal_r+0x2180>
   42868:	d8c03217 	ldw	r3,200(sp)
   4286c:	d8c02e15 	stw	r3,184(sp)
   42870:	003e0206 	br	4207c <__alt_mem_onchip_memory2_1+0xfffc107c>
   42874:	df0022c4 	addi	fp,sp,139
   42878:	dc002915 	stw	r16,164(sp)
   4287c:	4027883a 	mov	r19,r8
   42880:	e021883a 	mov	r16,fp
   42884:	b009883a 	mov	r4,r22
   42888:	01400284 	movi	r5,10
   4288c:	004a8580 	call	4a858 <__modsi3>
   42890:	10800c04 	addi	r2,r2,48
   42894:	843fffc4 	addi	r16,r16,-1
   42898:	b009883a 	mov	r4,r22
   4289c:	01400284 	movi	r5,10
   428a0:	80800005 	stb	r2,0(r16)
   428a4:	004a7d40 	call	4a7d4 <__divsi3>
   428a8:	102d883a 	mov	r22,r2
   428ac:	00800244 	movi	r2,9
   428b0:	15bff416 	blt	r2,r22,42884 <__alt_mem_onchip_memory2_1+0xfffc1884>
   428b4:	9811883a 	mov	r8,r19
   428b8:	b0800c04 	addi	r2,r22,48
   428bc:	8027883a 	mov	r19,r16
   428c0:	997fffc4 	addi	r5,r19,-1
   428c4:	98bfffc5 	stb	r2,-1(r19)
   428c8:	dc002917 	ldw	r16,164(sp)
   428cc:	2f006a2e 	bgeu	r5,fp,42a78 <___vfprintf_internal_r+0x21d0>
   428d0:	d9c02384 	addi	r7,sp,142
   428d4:	3ccfc83a 	sub	r7,r7,r19
   428d8:	d9002344 	addi	r4,sp,141
   428dc:	e1cf883a 	add	r7,fp,r7
   428e0:	00000106 	br	428e8 <___vfprintf_internal_r+0x2040>
   428e4:	28800003 	ldbu	r2,0(r5)
   428e8:	20800005 	stb	r2,0(r4)
   428ec:	21000044 	addi	r4,r4,1
   428f0:	29400044 	addi	r5,r5,1
   428f4:	393ffb1e 	bne	r7,r4,428e4 <__alt_mem_onchip_memory2_1+0xfffc18e4>
   428f8:	d8802304 	addi	r2,sp,140
   428fc:	14c5c83a 	sub	r2,r2,r19
   42900:	d8c02344 	addi	r3,sp,141
   42904:	1885883a 	add	r2,r3,r2
   42908:	003f7006 	br	426cc <__alt_mem_onchip_memory2_1+0xfffc16cc>
   4290c:	0005883a 	mov	r2,zero
   42910:	003f0f06 	br	42550 <__alt_mem_onchip_memory2_1+0xfffc1550>
   42914:	d8c03217 	ldw	r3,200(sp)
   42918:	18c00044 	addi	r3,r3,1
   4291c:	d8c02e15 	stw	r3,184(sp)
   42920:	1805883a 	mov	r2,r3
   42924:	183fb20e 	bge	r3,zero,427f0 <__alt_mem_onchip_memory2_1+0xfffc17f0>
   42928:	0005883a 	mov	r2,zero
   4292c:	003fb006 	br	427f0 <__alt_mem_onchip_memory2_1+0xfffc17f0>
   42930:	d9003617 	ldw	r4,216(sp)
   42934:	000d883a 	mov	r6,zero
   42938:	000f883a 	mov	r7,zero
   4293c:	980b883a 	mov	r5,r19
   42940:	d8c03c15 	stw	r3,240(sp)
   42944:	da003d15 	stw	r8,244(sp)
   42948:	004bb1c0 	call	4bb1c <__eqdf2>
   4294c:	d8c03c17 	ldw	r3,240(sp)
   42950:	da003d17 	ldw	r8,244(sp)
   42954:	103f9826 	beq	r2,zero,427b8 <__alt_mem_onchip_memory2_1+0xfffc17b8>
   42958:	00800044 	movi	r2,1
   4295c:	10c7c83a 	sub	r3,r2,r3
   42960:	d8c02615 	stw	r3,152(sp)
   42964:	003f9506 	br	427bc <__alt_mem_onchip_memory2_1+0xfffc17bc>
   42968:	d9002917 	ldw	r4,164(sp)
   4296c:	d8c03217 	ldw	r3,200(sp)
   42970:	20800044 	addi	r2,r4,1
   42974:	1885883a 	add	r2,r3,r2
   42978:	d8802e15 	stw	r2,184(sp)
   4297c:	103dbf0e 	bge	r2,zero,4207c <__alt_mem_onchip_memory2_1+0xfffc107c>
   42980:	0005883a 	mov	r2,zero
   42984:	003dbd06 	br	4207c <__alt_mem_onchip_memory2_1+0xfffc107c>
   42988:	2000211e 	bne	r4,zero,42a10 <___vfprintf_internal_r+0x2168>
   4298c:	9480004c 	andi	r18,r18,1
   42990:	90001f1e 	bne	r18,zero,42a10 <___vfprintf_internal_r+0x2168>
   42994:	00800044 	movi	r2,1
   42998:	d8802e15 	stw	r2,184(sp)
   4299c:	003db706 	br	4207c <__alt_mem_onchip_memory2_1+0xfffc107c>
   429a0:	00800b44 	movi	r2,45
   429a4:	05adc83a 	sub	r22,zero,r22
   429a8:	d8802305 	stb	r2,140(sp)
   429ac:	003f3f06 	br	426ac <__alt_mem_onchip_memory2_1+0xfffc16ac>
   429b0:	0005883a 	mov	r2,zero
   429b4:	003f5206 	br	42700 <__alt_mem_onchip_memory2_1+0xfffc1700>
   429b8:	90a4703a 	and	r18,r18,r2
   429bc:	903f4e26 	beq	r18,zero,426f8 <__alt_mem_onchip_memory2_1+0xfffc16f8>
   429c0:	003f4a06 	br	426ec <__alt_mem_onchip_memory2_1+0xfffc16ec>
   429c4:	00800084 	movi	r2,2
   429c8:	10c5c83a 	sub	r2,r2,r3
   429cc:	003f8406 	br	427e0 <__alt_mem_onchip_memory2_1+0xfffc17e0>
   429d0:	d8802d17 	ldw	r2,180(sp)
   429d4:	d9002d17 	ldw	r4,180(sp)
   429d8:	ac400043 	ldbu	r17,1(r21)
   429dc:	10800017 	ldw	r2,0(r2)
   429e0:	582b883a 	mov	r21,r11
   429e4:	d8802915 	stw	r2,164(sp)
   429e8:	20800104 	addi	r2,r4,4
   429ec:	d9002917 	ldw	r4,164(sp)
   429f0:	d8802d15 	stw	r2,180(sp)
   429f4:	203e7a0e 	bge	r4,zero,423e0 <__alt_mem_onchip_memory2_1+0xfffc13e0>
   429f8:	8c403fcc 	andi	r17,r17,255
   429fc:	00bfffc4 	movi	r2,-1
   42a00:	8c40201c 	xori	r17,r17,128
   42a04:	d8802915 	stw	r2,164(sp)
   42a08:	8c7fe004 	addi	r17,r17,-128
   42a0c:	00380706 	br	40a2c <__alt_mem_onchip_memory2_1+0xfffbfa2c>
   42a10:	d8c02917 	ldw	r3,164(sp)
   42a14:	18c00084 	addi	r3,r3,2
   42a18:	d8c02e15 	stw	r3,184(sp)
   42a1c:	1805883a 	mov	r2,r3
   42a20:	183d960e 	bge	r3,zero,4207c <__alt_mem_onchip_memory2_1+0xfffc107c>
   42a24:	003fd606 	br	42980 <__alt_mem_onchip_memory2_1+0xfffc1980>
   42a28:	0005883a 	mov	r2,zero
   42a2c:	003f8e06 	br	42868 <__alt_mem_onchip_memory2_1+0xfffc1868>
   42a30:	9080004c 	andi	r2,r18,1
   42a34:	103f811e 	bne	r2,zero,4283c <__alt_mem_onchip_memory2_1+0xfffc183c>
   42a38:	d8802117 	ldw	r2,132(sp)
   42a3c:	1405c83a 	sub	r2,r2,r16
   42a40:	d8803315 	stw	r2,204(sp)
   42a44:	b47ef326 	beq	r22,r17,42614 <__alt_mem_onchip_memory2_1+0xfffc1614>
   42a48:	dd802617 	ldw	r22,152(sp)
   42a4c:	003f1106 	br	42694 <__alt_mem_onchip_memory2_1+0xfffc1694>
   42a50:	d9c02785 	stb	r7,158(sp)
   42a54:	00390406 	br	40e68 <__alt_mem_onchip_memory2_1+0xfffbfe68>
   42a58:	d9c02785 	stb	r7,158(sp)
   42a5c:	0038d306 	br	40dac <__alt_mem_onchip_memory2_1+0xfffbfdac>
   42a60:	d9c02785 	stb	r7,158(sp)
   42a64:	003a6106 	br	413ec <__alt_mem_onchip_memory2_1+0xfffc03ec>
   42a68:	d9c02785 	stb	r7,158(sp)
   42a6c:	003af806 	br	41650 <__alt_mem_onchip_memory2_1+0xfffc0650>
   42a70:	0005883a 	mov	r2,zero
   42a74:	003d7e06 	br	42070 <__alt_mem_onchip_memory2_1+0xfffc1070>
   42a78:	d8802344 	addi	r2,sp,141
   42a7c:	003f1306 	br	426cc <__alt_mem_onchip_memory2_1+0xfffc16cc>
   42a80:	d9c02785 	stb	r7,158(sp)
   42a84:	00392306 	br	40f14 <__alt_mem_onchip_memory2_1+0xfffbff14>
   42a88:	d9c02785 	stb	r7,158(sp)
   42a8c:	003aa906 	br	41534 <__alt_mem_onchip_memory2_1+0xfffc0534>
   42a90:	d9c02785 	stb	r7,158(sp)
   42a94:	003a3d06 	br	4138c <__alt_mem_onchip_memory2_1+0xfffc038c>
   42a98:	d9c02785 	stb	r7,158(sp)
   42a9c:	003aca06 	br	415c8 <__alt_mem_onchip_memory2_1+0xfffc05c8>

00042aa0 <__vfprintf_internal>:
   42aa0:	00800174 	movhi	r2,5
   42aa4:	1085ee04 	addi	r2,r2,6072
   42aa8:	300f883a 	mov	r7,r6
   42aac:	280d883a 	mov	r6,r5
   42ab0:	200b883a 	mov	r5,r4
   42ab4:	11000017 	ldw	r4,0(r2)
   42ab8:	00408a81 	jmpi	408a8 <___vfprintf_internal_r>

00042abc <__sbprintf>:
   42abc:	2880030b 	ldhu	r2,12(r5)
   42ac0:	2ac01917 	ldw	r11,100(r5)
   42ac4:	2a80038b 	ldhu	r10,14(r5)
   42ac8:	2a400717 	ldw	r9,28(r5)
   42acc:	2a000917 	ldw	r8,36(r5)
   42ad0:	defee204 	addi	sp,sp,-1144
   42ad4:	00c10004 	movi	r3,1024
   42ad8:	dc011a15 	stw	r16,1128(sp)
   42adc:	10bfff4c 	andi	r2,r2,65533
   42ae0:	2821883a 	mov	r16,r5
   42ae4:	d8cb883a 	add	r5,sp,r3
   42ae8:	dc811c15 	stw	r18,1136(sp)
   42aec:	dc411b15 	stw	r17,1132(sp)
   42af0:	dfc11d15 	stw	ra,1140(sp)
   42af4:	2025883a 	mov	r18,r4
   42af8:	d881030d 	sth	r2,1036(sp)
   42afc:	dac11915 	stw	r11,1124(sp)
   42b00:	da81038d 	sth	r10,1038(sp)
   42b04:	da410715 	stw	r9,1052(sp)
   42b08:	da010915 	stw	r8,1060(sp)
   42b0c:	dec10015 	stw	sp,1024(sp)
   42b10:	dec10415 	stw	sp,1040(sp)
   42b14:	d8c10215 	stw	r3,1032(sp)
   42b18:	d8c10515 	stw	r3,1044(sp)
   42b1c:	d8010615 	stw	zero,1048(sp)
   42b20:	00408a80 	call	408a8 <___vfprintf_internal_r>
   42b24:	1023883a 	mov	r17,r2
   42b28:	10000416 	blt	r2,zero,42b3c <__sbprintf+0x80>
   42b2c:	d9410004 	addi	r5,sp,1024
   42b30:	9009883a 	mov	r4,r18
   42b34:	00447700 	call	44770 <_fflush_r>
   42b38:	10000d1e 	bne	r2,zero,42b70 <__sbprintf+0xb4>
   42b3c:	d881030b 	ldhu	r2,1036(sp)
   42b40:	1080100c 	andi	r2,r2,64
   42b44:	10000326 	beq	r2,zero,42b54 <__sbprintf+0x98>
   42b48:	8080030b 	ldhu	r2,12(r16)
   42b4c:	10801014 	ori	r2,r2,64
   42b50:	8080030d 	sth	r2,12(r16)
   42b54:	8805883a 	mov	r2,r17
   42b58:	dfc11d17 	ldw	ra,1140(sp)
   42b5c:	dc811c17 	ldw	r18,1136(sp)
   42b60:	dc411b17 	ldw	r17,1132(sp)
   42b64:	dc011a17 	ldw	r16,1128(sp)
   42b68:	dec11e04 	addi	sp,sp,1144
   42b6c:	f800283a 	ret
   42b70:	047fffc4 	movi	r17,-1
   42b74:	003ff106 	br	42b3c <__alt_mem_onchip_memory2_1+0xfffc1b3c>

00042b78 <__swsetup_r>:
   42b78:	00800174 	movhi	r2,5
   42b7c:	defffd04 	addi	sp,sp,-12
   42b80:	1085ee04 	addi	r2,r2,6072
   42b84:	dc400115 	stw	r17,4(sp)
   42b88:	2023883a 	mov	r17,r4
   42b8c:	11000017 	ldw	r4,0(r2)
   42b90:	dc000015 	stw	r16,0(sp)
   42b94:	dfc00215 	stw	ra,8(sp)
   42b98:	2821883a 	mov	r16,r5
   42b9c:	20000226 	beq	r4,zero,42ba8 <__swsetup_r+0x30>
   42ba0:	20800e17 	ldw	r2,56(r4)
   42ba4:	10003126 	beq	r2,zero,42c6c <__swsetup_r+0xf4>
   42ba8:	8080030b 	ldhu	r2,12(r16)
   42bac:	10c0020c 	andi	r3,r2,8
   42bb0:	1009883a 	mov	r4,r2
   42bb4:	18000f26 	beq	r3,zero,42bf4 <__swsetup_r+0x7c>
   42bb8:	80c00417 	ldw	r3,16(r16)
   42bbc:	18001526 	beq	r3,zero,42c14 <__swsetup_r+0x9c>
   42bc0:	1100004c 	andi	r4,r2,1
   42bc4:	20001c1e 	bne	r4,zero,42c38 <__swsetup_r+0xc0>
   42bc8:	1080008c 	andi	r2,r2,2
   42bcc:	1000291e 	bne	r2,zero,42c74 <__swsetup_r+0xfc>
   42bd0:	80800517 	ldw	r2,20(r16)
   42bd4:	80800215 	stw	r2,8(r16)
   42bd8:	18001c26 	beq	r3,zero,42c4c <__swsetup_r+0xd4>
   42bdc:	0005883a 	mov	r2,zero
   42be0:	dfc00217 	ldw	ra,8(sp)
   42be4:	dc400117 	ldw	r17,4(sp)
   42be8:	dc000017 	ldw	r16,0(sp)
   42bec:	dec00304 	addi	sp,sp,12
   42bf0:	f800283a 	ret
   42bf4:	2080040c 	andi	r2,r4,16
   42bf8:	10002e26 	beq	r2,zero,42cb4 <__swsetup_r+0x13c>
   42bfc:	2080010c 	andi	r2,r4,4
   42c00:	10001e1e 	bne	r2,zero,42c7c <__swsetup_r+0x104>
   42c04:	80c00417 	ldw	r3,16(r16)
   42c08:	20800214 	ori	r2,r4,8
   42c0c:	8080030d 	sth	r2,12(r16)
   42c10:	183feb1e 	bne	r3,zero,42bc0 <__alt_mem_onchip_memory2_1+0xfffc1bc0>
   42c14:	1100a00c 	andi	r4,r2,640
   42c18:	01408004 	movi	r5,512
   42c1c:	217fe826 	beq	r4,r5,42bc0 <__alt_mem_onchip_memory2_1+0xfffc1bc0>
   42c20:	800b883a 	mov	r5,r16
   42c24:	8809883a 	mov	r4,r17
   42c28:	00456f00 	call	456f0 <__smakebuf_r>
   42c2c:	8080030b 	ldhu	r2,12(r16)
   42c30:	80c00417 	ldw	r3,16(r16)
   42c34:	003fe206 	br	42bc0 <__alt_mem_onchip_memory2_1+0xfffc1bc0>
   42c38:	80800517 	ldw	r2,20(r16)
   42c3c:	80000215 	stw	zero,8(r16)
   42c40:	0085c83a 	sub	r2,zero,r2
   42c44:	80800615 	stw	r2,24(r16)
   42c48:	183fe41e 	bne	r3,zero,42bdc <__alt_mem_onchip_memory2_1+0xfffc1bdc>
   42c4c:	80c0030b 	ldhu	r3,12(r16)
   42c50:	0005883a 	mov	r2,zero
   42c54:	1900200c 	andi	r4,r3,128
   42c58:	203fe126 	beq	r4,zero,42be0 <__alt_mem_onchip_memory2_1+0xfffc1be0>
   42c5c:	18c01014 	ori	r3,r3,64
   42c60:	80c0030d 	sth	r3,12(r16)
   42c64:	00bfffc4 	movi	r2,-1
   42c68:	003fdd06 	br	42be0 <__alt_mem_onchip_memory2_1+0xfffc1be0>
   42c6c:	0044b4c0 	call	44b4c <__sinit>
   42c70:	003fcd06 	br	42ba8 <__alt_mem_onchip_memory2_1+0xfffc1ba8>
   42c74:	0005883a 	mov	r2,zero
   42c78:	003fd606 	br	42bd4 <__alt_mem_onchip_memory2_1+0xfffc1bd4>
   42c7c:	81400c17 	ldw	r5,48(r16)
   42c80:	28000626 	beq	r5,zero,42c9c <__swsetup_r+0x124>
   42c84:	80801004 	addi	r2,r16,64
   42c88:	28800326 	beq	r5,r2,42c98 <__swsetup_r+0x120>
   42c8c:	8809883a 	mov	r4,r17
   42c90:	0044cc00 	call	44cc0 <_free_r>
   42c94:	8100030b 	ldhu	r4,12(r16)
   42c98:	80000c15 	stw	zero,48(r16)
   42c9c:	80c00417 	ldw	r3,16(r16)
   42ca0:	00bff6c4 	movi	r2,-37
   42ca4:	1108703a 	and	r4,r2,r4
   42ca8:	80000115 	stw	zero,4(r16)
   42cac:	80c00015 	stw	r3,0(r16)
   42cb0:	003fd506 	br	42c08 <__alt_mem_onchip_memory2_1+0xfffc1c08>
   42cb4:	00800244 	movi	r2,9
   42cb8:	88800015 	stw	r2,0(r17)
   42cbc:	20801014 	ori	r2,r4,64
   42cc0:	8080030d 	sth	r2,12(r16)
   42cc4:	00bfffc4 	movi	r2,-1
   42cc8:	003fc506 	br	42be0 <__alt_mem_onchip_memory2_1+0xfffc1be0>

00042ccc <quorem>:
   42ccc:	defff704 	addi	sp,sp,-36
   42cd0:	dc800215 	stw	r18,8(sp)
   42cd4:	20800417 	ldw	r2,16(r4)
   42cd8:	2c800417 	ldw	r18,16(r5)
   42cdc:	dfc00815 	stw	ra,32(sp)
   42ce0:	ddc00715 	stw	r23,28(sp)
   42ce4:	dd800615 	stw	r22,24(sp)
   42ce8:	dd400515 	stw	r21,20(sp)
   42cec:	dd000415 	stw	r20,16(sp)
   42cf0:	dcc00315 	stw	r19,12(sp)
   42cf4:	dc400115 	stw	r17,4(sp)
   42cf8:	dc000015 	stw	r16,0(sp)
   42cfc:	14807116 	blt	r2,r18,42ec4 <quorem+0x1f8>
   42d00:	94bfffc4 	addi	r18,r18,-1
   42d04:	94ad883a 	add	r22,r18,r18
   42d08:	b5ad883a 	add	r22,r22,r22
   42d0c:	2c400504 	addi	r17,r5,20
   42d10:	8da9883a 	add	r20,r17,r22
   42d14:	25400504 	addi	r21,r4,20
   42d18:	282f883a 	mov	r23,r5
   42d1c:	adad883a 	add	r22,r21,r22
   42d20:	a1400017 	ldw	r5,0(r20)
   42d24:	2021883a 	mov	r16,r4
   42d28:	b1000017 	ldw	r4,0(r22)
   42d2c:	29400044 	addi	r5,r5,1
   42d30:	004a8cc0 	call	4a8cc <__udivsi3>
   42d34:	1027883a 	mov	r19,r2
   42d38:	10002c26 	beq	r2,zero,42dec <quorem+0x120>
   42d3c:	a813883a 	mov	r9,r21
   42d40:	880b883a 	mov	r5,r17
   42d44:	0009883a 	mov	r4,zero
   42d48:	000d883a 	mov	r6,zero
   42d4c:	2a000017 	ldw	r8,0(r5)
   42d50:	49c00017 	ldw	r7,0(r9)
   42d54:	29400104 	addi	r5,r5,4
   42d58:	40bfffcc 	andi	r2,r8,65535
   42d5c:	14c5383a 	mul	r2,r2,r19
   42d60:	4010d43a 	srli	r8,r8,16
   42d64:	38ffffcc 	andi	r3,r7,65535
   42d68:	1105883a 	add	r2,r2,r4
   42d6c:	1008d43a 	srli	r4,r2,16
   42d70:	44d1383a 	mul	r8,r8,r19
   42d74:	198d883a 	add	r6,r3,r6
   42d78:	10ffffcc 	andi	r3,r2,65535
   42d7c:	30c7c83a 	sub	r3,r6,r3
   42d80:	380ed43a 	srli	r7,r7,16
   42d84:	4105883a 	add	r2,r8,r4
   42d88:	180dd43a 	srai	r6,r3,16
   42d8c:	113fffcc 	andi	r4,r2,65535
   42d90:	390fc83a 	sub	r7,r7,r4
   42d94:	398d883a 	add	r6,r7,r6
   42d98:	300e943a 	slli	r7,r6,16
   42d9c:	18ffffcc 	andi	r3,r3,65535
   42da0:	1008d43a 	srli	r4,r2,16
   42da4:	38ceb03a 	or	r7,r7,r3
   42da8:	49c00015 	stw	r7,0(r9)
   42dac:	300dd43a 	srai	r6,r6,16
   42db0:	4a400104 	addi	r9,r9,4
   42db4:	a17fe52e 	bgeu	r20,r5,42d4c <__alt_mem_onchip_memory2_1+0xfffc1d4c>
   42db8:	b0800017 	ldw	r2,0(r22)
   42dbc:	10000b1e 	bne	r2,zero,42dec <quorem+0x120>
   42dc0:	b0bfff04 	addi	r2,r22,-4
   42dc4:	a880082e 	bgeu	r21,r2,42de8 <quorem+0x11c>
   42dc8:	b0ffff17 	ldw	r3,-4(r22)
   42dcc:	18000326 	beq	r3,zero,42ddc <quorem+0x110>
   42dd0:	00000506 	br	42de8 <quorem+0x11c>
   42dd4:	10c00017 	ldw	r3,0(r2)
   42dd8:	1800031e 	bne	r3,zero,42de8 <quorem+0x11c>
   42ddc:	10bfff04 	addi	r2,r2,-4
   42de0:	94bfffc4 	addi	r18,r18,-1
   42de4:	a8bffb36 	bltu	r21,r2,42dd4 <__alt_mem_onchip_memory2_1+0xfffc1dd4>
   42de8:	84800415 	stw	r18,16(r16)
   42dec:	b80b883a 	mov	r5,r23
   42df0:	8009883a 	mov	r4,r16
   42df4:	0046e300 	call	46e30 <__mcmp>
   42df8:	10002616 	blt	r2,zero,42e94 <quorem+0x1c8>
   42dfc:	9cc00044 	addi	r19,r19,1
   42e00:	a805883a 	mov	r2,r21
   42e04:	000b883a 	mov	r5,zero
   42e08:	11000017 	ldw	r4,0(r2)
   42e0c:	89800017 	ldw	r6,0(r17)
   42e10:	10800104 	addi	r2,r2,4
   42e14:	20ffffcc 	andi	r3,r4,65535
   42e18:	194b883a 	add	r5,r3,r5
   42e1c:	30ffffcc 	andi	r3,r6,65535
   42e20:	28c7c83a 	sub	r3,r5,r3
   42e24:	300cd43a 	srli	r6,r6,16
   42e28:	2008d43a 	srli	r4,r4,16
   42e2c:	180bd43a 	srai	r5,r3,16
   42e30:	18ffffcc 	andi	r3,r3,65535
   42e34:	2189c83a 	sub	r4,r4,r6
   42e38:	2149883a 	add	r4,r4,r5
   42e3c:	200c943a 	slli	r6,r4,16
   42e40:	8c400104 	addi	r17,r17,4
   42e44:	200bd43a 	srai	r5,r4,16
   42e48:	30c6b03a 	or	r3,r6,r3
   42e4c:	10ffff15 	stw	r3,-4(r2)
   42e50:	a47fed2e 	bgeu	r20,r17,42e08 <__alt_mem_onchip_memory2_1+0xfffc1e08>
   42e54:	9485883a 	add	r2,r18,r18
   42e58:	1085883a 	add	r2,r2,r2
   42e5c:	a887883a 	add	r3,r21,r2
   42e60:	18800017 	ldw	r2,0(r3)
   42e64:	10000b1e 	bne	r2,zero,42e94 <quorem+0x1c8>
   42e68:	18bfff04 	addi	r2,r3,-4
   42e6c:	a880082e 	bgeu	r21,r2,42e90 <quorem+0x1c4>
   42e70:	18ffff17 	ldw	r3,-4(r3)
   42e74:	18000326 	beq	r3,zero,42e84 <quorem+0x1b8>
   42e78:	00000506 	br	42e90 <quorem+0x1c4>
   42e7c:	10c00017 	ldw	r3,0(r2)
   42e80:	1800031e 	bne	r3,zero,42e90 <quorem+0x1c4>
   42e84:	10bfff04 	addi	r2,r2,-4
   42e88:	94bfffc4 	addi	r18,r18,-1
   42e8c:	a8bffb36 	bltu	r21,r2,42e7c <__alt_mem_onchip_memory2_1+0xfffc1e7c>
   42e90:	84800415 	stw	r18,16(r16)
   42e94:	9805883a 	mov	r2,r19
   42e98:	dfc00817 	ldw	ra,32(sp)
   42e9c:	ddc00717 	ldw	r23,28(sp)
   42ea0:	dd800617 	ldw	r22,24(sp)
   42ea4:	dd400517 	ldw	r21,20(sp)
   42ea8:	dd000417 	ldw	r20,16(sp)
   42eac:	dcc00317 	ldw	r19,12(sp)
   42eb0:	dc800217 	ldw	r18,8(sp)
   42eb4:	dc400117 	ldw	r17,4(sp)
   42eb8:	dc000017 	ldw	r16,0(sp)
   42ebc:	dec00904 	addi	sp,sp,36
   42ec0:	f800283a 	ret
   42ec4:	0005883a 	mov	r2,zero
   42ec8:	003ff306 	br	42e98 <__alt_mem_onchip_memory2_1+0xfffc1e98>

00042ecc <_dtoa_r>:
   42ecc:	20801017 	ldw	r2,64(r4)
   42ed0:	deffde04 	addi	sp,sp,-136
   42ed4:	df002015 	stw	fp,128(sp)
   42ed8:	dcc01b15 	stw	r19,108(sp)
   42edc:	dc801a15 	stw	r18,104(sp)
   42ee0:	dc401915 	stw	r17,100(sp)
   42ee4:	dc001815 	stw	r16,96(sp)
   42ee8:	dfc02115 	stw	ra,132(sp)
   42eec:	ddc01f15 	stw	r23,124(sp)
   42ef0:	dd801e15 	stw	r22,120(sp)
   42ef4:	dd401d15 	stw	r21,116(sp)
   42ef8:	dd001c15 	stw	r20,112(sp)
   42efc:	d9c00315 	stw	r7,12(sp)
   42f00:	2039883a 	mov	fp,r4
   42f04:	3023883a 	mov	r17,r6
   42f08:	2825883a 	mov	r18,r5
   42f0c:	dc002417 	ldw	r16,144(sp)
   42f10:	3027883a 	mov	r19,r6
   42f14:	10000826 	beq	r2,zero,42f38 <_dtoa_r+0x6c>
   42f18:	21801117 	ldw	r6,68(r4)
   42f1c:	00c00044 	movi	r3,1
   42f20:	100b883a 	mov	r5,r2
   42f24:	1986983a 	sll	r3,r3,r6
   42f28:	11800115 	stw	r6,4(r2)
   42f2c:	10c00215 	stw	r3,8(r2)
   42f30:	00466100 	call	46610 <_Bfree>
   42f34:	e0001015 	stw	zero,64(fp)
   42f38:	88002e16 	blt	r17,zero,42ff4 <_dtoa_r+0x128>
   42f3c:	80000015 	stw	zero,0(r16)
   42f40:	889ffc2c 	andhi	r2,r17,32752
   42f44:	00dffc34 	movhi	r3,32752
   42f48:	10c01c26 	beq	r2,r3,42fbc <_dtoa_r+0xf0>
   42f4c:	000d883a 	mov	r6,zero
   42f50:	000f883a 	mov	r7,zero
   42f54:	9009883a 	mov	r4,r18
   42f58:	980b883a 	mov	r5,r19
   42f5c:	004bb1c0 	call	4bb1c <__eqdf2>
   42f60:	10002b1e 	bne	r2,zero,43010 <_dtoa_r+0x144>
   42f64:	d9c02317 	ldw	r7,140(sp)
   42f68:	00800044 	movi	r2,1
   42f6c:	38800015 	stw	r2,0(r7)
   42f70:	d8802517 	ldw	r2,148(sp)
   42f74:	10019e26 	beq	r2,zero,435f0 <_dtoa_r+0x724>
   42f78:	d8c02517 	ldw	r3,148(sp)
   42f7c:	00800174 	movhi	r2,5
   42f80:	10be9344 	addi	r2,r2,-1459
   42f84:	18800015 	stw	r2,0(r3)
   42f88:	10bfffc4 	addi	r2,r2,-1
   42f8c:	dfc02117 	ldw	ra,132(sp)
   42f90:	df002017 	ldw	fp,128(sp)
   42f94:	ddc01f17 	ldw	r23,124(sp)
   42f98:	dd801e17 	ldw	r22,120(sp)
   42f9c:	dd401d17 	ldw	r21,116(sp)
   42fa0:	dd001c17 	ldw	r20,112(sp)
   42fa4:	dcc01b17 	ldw	r19,108(sp)
   42fa8:	dc801a17 	ldw	r18,104(sp)
   42fac:	dc401917 	ldw	r17,100(sp)
   42fb0:	dc001817 	ldw	r16,96(sp)
   42fb4:	dec02204 	addi	sp,sp,136
   42fb8:	f800283a 	ret
   42fbc:	d8c02317 	ldw	r3,140(sp)
   42fc0:	0089c3c4 	movi	r2,9999
   42fc4:	18800015 	stw	r2,0(r3)
   42fc8:	90017726 	beq	r18,zero,435a8 <_dtoa_r+0x6dc>
   42fcc:	00800174 	movhi	r2,5
   42fd0:	10be9f04 	addi	r2,r2,-1412
   42fd4:	d9002517 	ldw	r4,148(sp)
   42fd8:	203fec26 	beq	r4,zero,42f8c <__alt_mem_onchip_memory2_1+0xfffc1f8c>
   42fdc:	10c000c7 	ldb	r3,3(r2)
   42fe0:	1801781e 	bne	r3,zero,435c4 <_dtoa_r+0x6f8>
   42fe4:	10c000c4 	addi	r3,r2,3
   42fe8:	d9802517 	ldw	r6,148(sp)
   42fec:	30c00015 	stw	r3,0(r6)
   42ff0:	003fe606 	br	42f8c <__alt_mem_onchip_memory2_1+0xfffc1f8c>
   42ff4:	04e00034 	movhi	r19,32768
   42ff8:	9cffffc4 	addi	r19,r19,-1
   42ffc:	00800044 	movi	r2,1
   43000:	8ce6703a 	and	r19,r17,r19
   43004:	80800015 	stw	r2,0(r16)
   43008:	9823883a 	mov	r17,r19
   4300c:	003fcc06 	br	42f40 <__alt_mem_onchip_memory2_1+0xfffc1f40>
   43010:	d8800204 	addi	r2,sp,8
   43014:	d8800015 	stw	r2,0(sp)
   43018:	d9c00104 	addi	r7,sp,4
   4301c:	900b883a 	mov	r5,r18
   43020:	980d883a 	mov	r6,r19
   43024:	e009883a 	mov	r4,fp
   43028:	8820d53a 	srli	r16,r17,20
   4302c:	00471fc0 	call	471fc <__d2b>
   43030:	d8800915 	stw	r2,36(sp)
   43034:	8001651e 	bne	r16,zero,435cc <_dtoa_r+0x700>
   43038:	dd800217 	ldw	r22,8(sp)
   4303c:	dc000117 	ldw	r16,4(sp)
   43040:	00800804 	movi	r2,32
   43044:	b421883a 	add	r16,r22,r16
   43048:	80c10c84 	addi	r3,r16,1074
   4304c:	10c2d10e 	bge	r2,r3,43b94 <_dtoa_r+0xcc8>
   43050:	00801004 	movi	r2,64
   43054:	81010484 	addi	r4,r16,1042
   43058:	10c7c83a 	sub	r3,r2,r3
   4305c:	9108d83a 	srl	r4,r18,r4
   43060:	88e2983a 	sll	r17,r17,r3
   43064:	2448b03a 	or	r4,r4,r17
   43068:	004cee40 	call	4cee4 <__floatunsidf>
   4306c:	017f8434 	movhi	r5,65040
   43070:	01800044 	movi	r6,1
   43074:	1009883a 	mov	r4,r2
   43078:	194b883a 	add	r5,r3,r5
   4307c:	843fffc4 	addi	r16,r16,-1
   43080:	d9801115 	stw	r6,68(sp)
   43084:	000d883a 	mov	r6,zero
   43088:	01cffe34 	movhi	r7,16376
   4308c:	004c48c0 	call	4c48c <__subdf3>
   43090:	0198dbf4 	movhi	r6,25455
   43094:	01cff4f4 	movhi	r7,16339
   43098:	3190d844 	addi	r6,r6,17249
   4309c:	39e1e9c4 	addi	r7,r7,-30809
   430a0:	1009883a 	mov	r4,r2
   430a4:	180b883a 	mov	r5,r3
   430a8:	004bd740 	call	4bd74 <__muldf3>
   430ac:	01a2d874 	movhi	r6,35681
   430b0:	01cff1f4 	movhi	r7,16327
   430b4:	31b22cc4 	addi	r6,r6,-14157
   430b8:	39e28a04 	addi	r7,r7,-30168
   430bc:	180b883a 	mov	r5,r3
   430c0:	1009883a 	mov	r4,r2
   430c4:	004a9880 	call	4a988 <__adddf3>
   430c8:	8009883a 	mov	r4,r16
   430cc:	1029883a 	mov	r20,r2
   430d0:	1823883a 	mov	r17,r3
   430d4:	004ce080 	call	4ce08 <__floatsidf>
   430d8:	019427f4 	movhi	r6,20639
   430dc:	01cff4f4 	movhi	r7,16339
   430e0:	319e7ec4 	addi	r6,r6,31227
   430e4:	39d104c4 	addi	r7,r7,17427
   430e8:	1009883a 	mov	r4,r2
   430ec:	180b883a 	mov	r5,r3
   430f0:	004bd740 	call	4bd74 <__muldf3>
   430f4:	100d883a 	mov	r6,r2
   430f8:	180f883a 	mov	r7,r3
   430fc:	a009883a 	mov	r4,r20
   43100:	880b883a 	mov	r5,r17
   43104:	004a9880 	call	4a988 <__adddf3>
   43108:	1009883a 	mov	r4,r2
   4310c:	180b883a 	mov	r5,r3
   43110:	1029883a 	mov	r20,r2
   43114:	1823883a 	mov	r17,r3
   43118:	004cd880 	call	4cd88 <__fixdfsi>
   4311c:	000d883a 	mov	r6,zero
   43120:	000f883a 	mov	r7,zero
   43124:	a009883a 	mov	r4,r20
   43128:	880b883a 	mov	r5,r17
   4312c:	d8800515 	stw	r2,20(sp)
   43130:	004bc800 	call	4bc80 <__ledf2>
   43134:	10028716 	blt	r2,zero,43b54 <_dtoa_r+0xc88>
   43138:	d8c00517 	ldw	r3,20(sp)
   4313c:	00800584 	movi	r2,22
   43140:	10c27536 	bltu	r2,r3,43b18 <_dtoa_r+0xc4c>
   43144:	180490fa 	slli	r2,r3,3
   43148:	00c00174 	movhi	r3,5
   4314c:	18febb04 	addi	r3,r3,-1300
   43150:	1885883a 	add	r2,r3,r2
   43154:	11000017 	ldw	r4,0(r2)
   43158:	11400117 	ldw	r5,4(r2)
   4315c:	900d883a 	mov	r6,r18
   43160:	980f883a 	mov	r7,r19
   43164:	004bba40 	call	4bba4 <__gedf2>
   43168:	00828d0e 	bge	zero,r2,43ba0 <_dtoa_r+0xcd4>
   4316c:	d9000517 	ldw	r4,20(sp)
   43170:	d8000e15 	stw	zero,56(sp)
   43174:	213fffc4 	addi	r4,r4,-1
   43178:	d9000515 	stw	r4,20(sp)
   4317c:	b42dc83a 	sub	r22,r22,r16
   43180:	b5bfffc4 	addi	r22,r22,-1
   43184:	b0026f16 	blt	r22,zero,43b44 <_dtoa_r+0xc78>
   43188:	d8000815 	stw	zero,32(sp)
   4318c:	d9c00517 	ldw	r7,20(sp)
   43190:	38026416 	blt	r7,zero,43b24 <_dtoa_r+0xc58>
   43194:	b1ed883a 	add	r22,r22,r7
   43198:	d9c00d15 	stw	r7,52(sp)
   4319c:	d8000a15 	stw	zero,40(sp)
   431a0:	d9800317 	ldw	r6,12(sp)
   431a4:	00800244 	movi	r2,9
   431a8:	11811436 	bltu	r2,r6,435fc <_dtoa_r+0x730>
   431ac:	00800144 	movi	r2,5
   431b0:	1184e10e 	bge	r2,r6,44538 <_dtoa_r+0x166c>
   431b4:	31bfff04 	addi	r6,r6,-4
   431b8:	d9800315 	stw	r6,12(sp)
   431bc:	0023883a 	mov	r17,zero
   431c0:	d9800317 	ldw	r6,12(sp)
   431c4:	008000c4 	movi	r2,3
   431c8:	30836726 	beq	r6,r2,43f68 <_dtoa_r+0x109c>
   431cc:	1183410e 	bge	r2,r6,43ed4 <_dtoa_r+0x1008>
   431d0:	d9c00317 	ldw	r7,12(sp)
   431d4:	00800104 	movi	r2,4
   431d8:	38827c26 	beq	r7,r2,43bcc <_dtoa_r+0xd00>
   431dc:	00800144 	movi	r2,5
   431e0:	3884c41e 	bne	r7,r2,444f4 <_dtoa_r+0x1628>
   431e4:	00800044 	movi	r2,1
   431e8:	d8800b15 	stw	r2,44(sp)
   431ec:	d8c00517 	ldw	r3,20(sp)
   431f0:	d9002217 	ldw	r4,136(sp)
   431f4:	1907883a 	add	r3,r3,r4
   431f8:	19800044 	addi	r6,r3,1
   431fc:	d8c00c15 	stw	r3,48(sp)
   43200:	d9800615 	stw	r6,24(sp)
   43204:	0183a40e 	bge	zero,r6,44098 <_dtoa_r+0x11cc>
   43208:	d9800617 	ldw	r6,24(sp)
   4320c:	3021883a 	mov	r16,r6
   43210:	e0001115 	stw	zero,68(fp)
   43214:	008005c4 	movi	r2,23
   43218:	1184c92e 	bgeu	r2,r6,44540 <_dtoa_r+0x1674>
   4321c:	00c00044 	movi	r3,1
   43220:	00800104 	movi	r2,4
   43224:	1085883a 	add	r2,r2,r2
   43228:	11000504 	addi	r4,r2,20
   4322c:	180b883a 	mov	r5,r3
   43230:	18c00044 	addi	r3,r3,1
   43234:	313ffb2e 	bgeu	r6,r4,43224 <__alt_mem_onchip_memory2_1+0xfffc2224>
   43238:	e1401115 	stw	r5,68(fp)
   4323c:	e009883a 	mov	r4,fp
   43240:	00465680 	call	46568 <_Balloc>
   43244:	d8800715 	stw	r2,28(sp)
   43248:	e0801015 	stw	r2,64(fp)
   4324c:	00800384 	movi	r2,14
   43250:	1400f736 	bltu	r2,r16,43630 <_dtoa_r+0x764>
   43254:	8800f626 	beq	r17,zero,43630 <_dtoa_r+0x764>
   43258:	d9c00517 	ldw	r7,20(sp)
   4325c:	01c39a0e 	bge	zero,r7,440c8 <_dtoa_r+0x11fc>
   43260:	388003cc 	andi	r2,r7,15
   43264:	100490fa 	slli	r2,r2,3
   43268:	382bd13a 	srai	r21,r7,4
   4326c:	00c00174 	movhi	r3,5
   43270:	18febb04 	addi	r3,r3,-1300
   43274:	1885883a 	add	r2,r3,r2
   43278:	a8c0040c 	andi	r3,r21,16
   4327c:	12400017 	ldw	r9,0(r2)
   43280:	12000117 	ldw	r8,4(r2)
   43284:	18037926 	beq	r3,zero,4406c <_dtoa_r+0x11a0>
   43288:	00800174 	movhi	r2,5
   4328c:	10beb104 	addi	r2,r2,-1340
   43290:	11800817 	ldw	r6,32(r2)
   43294:	11c00917 	ldw	r7,36(r2)
   43298:	9009883a 	mov	r4,r18
   4329c:	980b883a 	mov	r5,r19
   432a0:	da001715 	stw	r8,92(sp)
   432a4:	da401615 	stw	r9,88(sp)
   432a8:	004b2340 	call	4b234 <__divdf3>
   432ac:	da001717 	ldw	r8,92(sp)
   432b0:	da401617 	ldw	r9,88(sp)
   432b4:	ad4003cc 	andi	r21,r21,15
   432b8:	040000c4 	movi	r16,3
   432bc:	1023883a 	mov	r17,r2
   432c0:	1829883a 	mov	r20,r3
   432c4:	a8001126 	beq	r21,zero,4330c <_dtoa_r+0x440>
   432c8:	05c00174 	movhi	r23,5
   432cc:	bdfeb104 	addi	r23,r23,-1340
   432d0:	4805883a 	mov	r2,r9
   432d4:	4007883a 	mov	r3,r8
   432d8:	a980004c 	andi	r6,r21,1
   432dc:	1009883a 	mov	r4,r2
   432e0:	a82bd07a 	srai	r21,r21,1
   432e4:	180b883a 	mov	r5,r3
   432e8:	30000426 	beq	r6,zero,432fc <_dtoa_r+0x430>
   432ec:	b9800017 	ldw	r6,0(r23)
   432f0:	b9c00117 	ldw	r7,4(r23)
   432f4:	84000044 	addi	r16,r16,1
   432f8:	004bd740 	call	4bd74 <__muldf3>
   432fc:	bdc00204 	addi	r23,r23,8
   43300:	a83ff51e 	bne	r21,zero,432d8 <__alt_mem_onchip_memory2_1+0xfffc22d8>
   43304:	1013883a 	mov	r9,r2
   43308:	1811883a 	mov	r8,r3
   4330c:	480d883a 	mov	r6,r9
   43310:	400f883a 	mov	r7,r8
   43314:	8809883a 	mov	r4,r17
   43318:	a00b883a 	mov	r5,r20
   4331c:	004b2340 	call	4b234 <__divdf3>
   43320:	d8800f15 	stw	r2,60(sp)
   43324:	d8c01015 	stw	r3,64(sp)
   43328:	d8c00e17 	ldw	r3,56(sp)
   4332c:	18000626 	beq	r3,zero,43348 <_dtoa_r+0x47c>
   43330:	d9000f17 	ldw	r4,60(sp)
   43334:	d9401017 	ldw	r5,64(sp)
   43338:	000d883a 	mov	r6,zero
   4333c:	01cffc34 	movhi	r7,16368
   43340:	004bc800 	call	4bc80 <__ledf2>
   43344:	10040b16 	blt	r2,zero,44374 <_dtoa_r+0x14a8>
   43348:	8009883a 	mov	r4,r16
   4334c:	004ce080 	call	4ce08 <__floatsidf>
   43350:	d9800f17 	ldw	r6,60(sp)
   43354:	d9c01017 	ldw	r7,64(sp)
   43358:	1009883a 	mov	r4,r2
   4335c:	180b883a 	mov	r5,r3
   43360:	004bd740 	call	4bd74 <__muldf3>
   43364:	000d883a 	mov	r6,zero
   43368:	01d00734 	movhi	r7,16412
   4336c:	1009883a 	mov	r4,r2
   43370:	180b883a 	mov	r5,r3
   43374:	004a9880 	call	4a988 <__adddf3>
   43378:	1021883a 	mov	r16,r2
   4337c:	d8800617 	ldw	r2,24(sp)
   43380:	047f3034 	movhi	r17,64704
   43384:	1c63883a 	add	r17,r3,r17
   43388:	10031826 	beq	r2,zero,43fec <_dtoa_r+0x1120>
   4338c:	d8c00517 	ldw	r3,20(sp)
   43390:	db000617 	ldw	r12,24(sp)
   43394:	d8c01315 	stw	r3,76(sp)
   43398:	d9000b17 	ldw	r4,44(sp)
   4339c:	20038f26 	beq	r4,zero,441dc <_dtoa_r+0x1310>
   433a0:	60bfffc4 	addi	r2,r12,-1
   433a4:	100490fa 	slli	r2,r2,3
   433a8:	00c00174 	movhi	r3,5
   433ac:	18febb04 	addi	r3,r3,-1300
   433b0:	1885883a 	add	r2,r3,r2
   433b4:	11800017 	ldw	r6,0(r2)
   433b8:	11c00117 	ldw	r7,4(r2)
   433bc:	d8800717 	ldw	r2,28(sp)
   433c0:	0009883a 	mov	r4,zero
   433c4:	014ff834 	movhi	r5,16352
   433c8:	db001615 	stw	r12,88(sp)
   433cc:	15c00044 	addi	r23,r2,1
   433d0:	004b2340 	call	4b234 <__divdf3>
   433d4:	800d883a 	mov	r6,r16
   433d8:	880f883a 	mov	r7,r17
   433dc:	1009883a 	mov	r4,r2
   433e0:	180b883a 	mov	r5,r3
   433e4:	004c48c0 	call	4c48c <__subdf3>
   433e8:	d9401017 	ldw	r5,64(sp)
   433ec:	d9000f17 	ldw	r4,60(sp)
   433f0:	102b883a 	mov	r21,r2
   433f4:	d8c01215 	stw	r3,72(sp)
   433f8:	004cd880 	call	4cd88 <__fixdfsi>
   433fc:	1009883a 	mov	r4,r2
   43400:	1029883a 	mov	r20,r2
   43404:	004ce080 	call	4ce08 <__floatsidf>
   43408:	d9000f17 	ldw	r4,60(sp)
   4340c:	d9401017 	ldw	r5,64(sp)
   43410:	100d883a 	mov	r6,r2
   43414:	180f883a 	mov	r7,r3
   43418:	004c48c0 	call	4c48c <__subdf3>
   4341c:	1823883a 	mov	r17,r3
   43420:	d8c00717 	ldw	r3,28(sp)
   43424:	d9401217 	ldw	r5,72(sp)
   43428:	a2000c04 	addi	r8,r20,48
   4342c:	1021883a 	mov	r16,r2
   43430:	1a000005 	stb	r8,0(r3)
   43434:	800d883a 	mov	r6,r16
   43438:	880f883a 	mov	r7,r17
   4343c:	a809883a 	mov	r4,r21
   43440:	4029883a 	mov	r20,r8
   43444:	004bba40 	call	4bba4 <__gedf2>
   43448:	00841d16 	blt	zero,r2,444c0 <_dtoa_r+0x15f4>
   4344c:	800d883a 	mov	r6,r16
   43450:	880f883a 	mov	r7,r17
   43454:	0009883a 	mov	r4,zero
   43458:	014ffc34 	movhi	r5,16368
   4345c:	004c48c0 	call	4c48c <__subdf3>
   43460:	d9401217 	ldw	r5,72(sp)
   43464:	100d883a 	mov	r6,r2
   43468:	180f883a 	mov	r7,r3
   4346c:	a809883a 	mov	r4,r21
   43470:	004bba40 	call	4bba4 <__gedf2>
   43474:	db001617 	ldw	r12,88(sp)
   43478:	00840e16 	blt	zero,r2,444b4 <_dtoa_r+0x15e8>
   4347c:	00800044 	movi	r2,1
   43480:	13006b0e 	bge	r2,r12,43630 <_dtoa_r+0x764>
   43484:	d9000717 	ldw	r4,28(sp)
   43488:	dd800f15 	stw	r22,60(sp)
   4348c:	dcc01015 	stw	r19,64(sp)
   43490:	2319883a 	add	r12,r4,r12
   43494:	dcc01217 	ldw	r19,72(sp)
   43498:	602d883a 	mov	r22,r12
   4349c:	dc801215 	stw	r18,72(sp)
   434a0:	b825883a 	mov	r18,r23
   434a4:	00000906 	br	434cc <_dtoa_r+0x600>
   434a8:	004c48c0 	call	4c48c <__subdf3>
   434ac:	a80d883a 	mov	r6,r21
   434b0:	980f883a 	mov	r7,r19
   434b4:	1009883a 	mov	r4,r2
   434b8:	180b883a 	mov	r5,r3
   434bc:	004bc800 	call	4bc80 <__ledf2>
   434c0:	1003e816 	blt	r2,zero,44464 <_dtoa_r+0x1598>
   434c4:	b825883a 	mov	r18,r23
   434c8:	bd83e926 	beq	r23,r22,44470 <_dtoa_r+0x15a4>
   434cc:	a809883a 	mov	r4,r21
   434d0:	980b883a 	mov	r5,r19
   434d4:	000d883a 	mov	r6,zero
   434d8:	01d00934 	movhi	r7,16420
   434dc:	004bd740 	call	4bd74 <__muldf3>
   434e0:	000d883a 	mov	r6,zero
   434e4:	01d00934 	movhi	r7,16420
   434e8:	8009883a 	mov	r4,r16
   434ec:	880b883a 	mov	r5,r17
   434f0:	102b883a 	mov	r21,r2
   434f4:	1827883a 	mov	r19,r3
   434f8:	004bd740 	call	4bd74 <__muldf3>
   434fc:	180b883a 	mov	r5,r3
   43500:	1009883a 	mov	r4,r2
   43504:	1821883a 	mov	r16,r3
   43508:	1023883a 	mov	r17,r2
   4350c:	004cd880 	call	4cd88 <__fixdfsi>
   43510:	1009883a 	mov	r4,r2
   43514:	1029883a 	mov	r20,r2
   43518:	004ce080 	call	4ce08 <__floatsidf>
   4351c:	8809883a 	mov	r4,r17
   43520:	800b883a 	mov	r5,r16
   43524:	100d883a 	mov	r6,r2
   43528:	180f883a 	mov	r7,r3
   4352c:	004c48c0 	call	4c48c <__subdf3>
   43530:	a5000c04 	addi	r20,r20,48
   43534:	a80d883a 	mov	r6,r21
   43538:	980f883a 	mov	r7,r19
   4353c:	1009883a 	mov	r4,r2
   43540:	180b883a 	mov	r5,r3
   43544:	95000005 	stb	r20,0(r18)
   43548:	1021883a 	mov	r16,r2
   4354c:	1823883a 	mov	r17,r3
   43550:	004bc800 	call	4bc80 <__ledf2>
   43554:	bdc00044 	addi	r23,r23,1
   43558:	800d883a 	mov	r6,r16
   4355c:	880f883a 	mov	r7,r17
   43560:	0009883a 	mov	r4,zero
   43564:	014ffc34 	movhi	r5,16368
   43568:	103fcf0e 	bge	r2,zero,434a8 <__alt_mem_onchip_memory2_1+0xfffc24a8>
   4356c:	d8c01317 	ldw	r3,76(sp)
   43570:	d8c00515 	stw	r3,20(sp)
   43574:	d9400917 	ldw	r5,36(sp)
   43578:	e009883a 	mov	r4,fp
   4357c:	00466100 	call	46610 <_Bfree>
   43580:	d9000517 	ldw	r4,20(sp)
   43584:	d9802317 	ldw	r6,140(sp)
   43588:	d9c02517 	ldw	r7,148(sp)
   4358c:	b8000005 	stb	zero,0(r23)
   43590:	20800044 	addi	r2,r4,1
   43594:	30800015 	stw	r2,0(r6)
   43598:	3802aa26 	beq	r7,zero,44044 <_dtoa_r+0x1178>
   4359c:	3dc00015 	stw	r23,0(r7)
   435a0:	d8800717 	ldw	r2,28(sp)
   435a4:	003e7906 	br	42f8c <__alt_mem_onchip_memory2_1+0xfffc1f8c>
   435a8:	00800434 	movhi	r2,16
   435ac:	10bfffc4 	addi	r2,r2,-1
   435b0:	88a2703a 	and	r17,r17,r2
   435b4:	883e851e 	bne	r17,zero,42fcc <__alt_mem_onchip_memory2_1+0xfffc1fcc>
   435b8:	00800174 	movhi	r2,5
   435bc:	10be9c04 	addi	r2,r2,-1424
   435c0:	003e8406 	br	42fd4 <__alt_mem_onchip_memory2_1+0xfffc1fd4>
   435c4:	10c00204 	addi	r3,r2,8
   435c8:	003e8706 	br	42fe8 <__alt_mem_onchip_memory2_1+0xfffc1fe8>
   435cc:	01400434 	movhi	r5,16
   435d0:	297fffc4 	addi	r5,r5,-1
   435d4:	994a703a 	and	r5,r19,r5
   435d8:	9009883a 	mov	r4,r18
   435dc:	843f0044 	addi	r16,r16,-1023
   435e0:	294ffc34 	orhi	r5,r5,16368
   435e4:	dd800217 	ldw	r22,8(sp)
   435e8:	d8001115 	stw	zero,68(sp)
   435ec:	003ea506 	br	43084 <__alt_mem_onchip_memory2_1+0xfffc2084>
   435f0:	00800174 	movhi	r2,5
   435f4:	10be9304 	addi	r2,r2,-1460
   435f8:	003e6406 	br	42f8c <__alt_mem_onchip_memory2_1+0xfffc1f8c>
   435fc:	e0001115 	stw	zero,68(fp)
   43600:	000b883a 	mov	r5,zero
   43604:	e009883a 	mov	r4,fp
   43608:	00465680 	call	46568 <_Balloc>
   4360c:	01bfffc4 	movi	r6,-1
   43610:	01c00044 	movi	r7,1
   43614:	d8800715 	stw	r2,28(sp)
   43618:	d9800c15 	stw	r6,48(sp)
   4361c:	e0801015 	stw	r2,64(fp)
   43620:	d8000315 	stw	zero,12(sp)
   43624:	d9c00b15 	stw	r7,44(sp)
   43628:	d9800615 	stw	r6,24(sp)
   4362c:	d8002215 	stw	zero,136(sp)
   43630:	d8800117 	ldw	r2,4(sp)
   43634:	10008916 	blt	r2,zero,4385c <_dtoa_r+0x990>
   43638:	d9000517 	ldw	r4,20(sp)
   4363c:	00c00384 	movi	r3,14
   43640:	19008616 	blt	r3,r4,4385c <_dtoa_r+0x990>
   43644:	200490fa 	slli	r2,r4,3
   43648:	00c00174 	movhi	r3,5
   4364c:	d9802217 	ldw	r6,136(sp)
   43650:	18febb04 	addi	r3,r3,-1300
   43654:	1885883a 	add	r2,r3,r2
   43658:	14000017 	ldw	r16,0(r2)
   4365c:	14400117 	ldw	r17,4(r2)
   43660:	30016316 	blt	r6,zero,43bf0 <_dtoa_r+0xd24>
   43664:	800d883a 	mov	r6,r16
   43668:	880f883a 	mov	r7,r17
   4366c:	9009883a 	mov	r4,r18
   43670:	980b883a 	mov	r5,r19
   43674:	004b2340 	call	4b234 <__divdf3>
   43678:	180b883a 	mov	r5,r3
   4367c:	1009883a 	mov	r4,r2
   43680:	004cd880 	call	4cd88 <__fixdfsi>
   43684:	1009883a 	mov	r4,r2
   43688:	102b883a 	mov	r21,r2
   4368c:	004ce080 	call	4ce08 <__floatsidf>
   43690:	800d883a 	mov	r6,r16
   43694:	880f883a 	mov	r7,r17
   43698:	1009883a 	mov	r4,r2
   4369c:	180b883a 	mov	r5,r3
   436a0:	004bd740 	call	4bd74 <__muldf3>
   436a4:	100d883a 	mov	r6,r2
   436a8:	180f883a 	mov	r7,r3
   436ac:	9009883a 	mov	r4,r18
   436b0:	980b883a 	mov	r5,r19
   436b4:	004c48c0 	call	4c48c <__subdf3>
   436b8:	d9c00717 	ldw	r7,28(sp)
   436bc:	1009883a 	mov	r4,r2
   436c0:	a8800c04 	addi	r2,r21,48
   436c4:	38800005 	stb	r2,0(r7)
   436c8:	3dc00044 	addi	r23,r7,1
   436cc:	d9c00617 	ldw	r7,24(sp)
   436d0:	01800044 	movi	r6,1
   436d4:	180b883a 	mov	r5,r3
   436d8:	2005883a 	mov	r2,r4
   436dc:	39803826 	beq	r7,r6,437c0 <_dtoa_r+0x8f4>
   436e0:	000d883a 	mov	r6,zero
   436e4:	01d00934 	movhi	r7,16420
   436e8:	004bd740 	call	4bd74 <__muldf3>
   436ec:	000d883a 	mov	r6,zero
   436f0:	000f883a 	mov	r7,zero
   436f4:	1009883a 	mov	r4,r2
   436f8:	180b883a 	mov	r5,r3
   436fc:	1025883a 	mov	r18,r2
   43700:	1827883a 	mov	r19,r3
   43704:	004bb1c0 	call	4bb1c <__eqdf2>
   43708:	103f9a26 	beq	r2,zero,43574 <__alt_mem_onchip_memory2_1+0xfffc2574>
   4370c:	d9c00617 	ldw	r7,24(sp)
   43710:	d8c00717 	ldw	r3,28(sp)
   43714:	b829883a 	mov	r20,r23
   43718:	38bfffc4 	addi	r2,r7,-1
   4371c:	18ad883a 	add	r22,r3,r2
   43720:	00000a06 	br	4374c <_dtoa_r+0x880>
   43724:	004bd740 	call	4bd74 <__muldf3>
   43728:	000d883a 	mov	r6,zero
   4372c:	000f883a 	mov	r7,zero
   43730:	1009883a 	mov	r4,r2
   43734:	180b883a 	mov	r5,r3
   43738:	1025883a 	mov	r18,r2
   4373c:	1827883a 	mov	r19,r3
   43740:	b829883a 	mov	r20,r23
   43744:	004bb1c0 	call	4bb1c <__eqdf2>
   43748:	103f8a26 	beq	r2,zero,43574 <__alt_mem_onchip_memory2_1+0xfffc2574>
   4374c:	800d883a 	mov	r6,r16
   43750:	880f883a 	mov	r7,r17
   43754:	9009883a 	mov	r4,r18
   43758:	980b883a 	mov	r5,r19
   4375c:	004b2340 	call	4b234 <__divdf3>
   43760:	180b883a 	mov	r5,r3
   43764:	1009883a 	mov	r4,r2
   43768:	004cd880 	call	4cd88 <__fixdfsi>
   4376c:	1009883a 	mov	r4,r2
   43770:	102b883a 	mov	r21,r2
   43774:	004ce080 	call	4ce08 <__floatsidf>
   43778:	800d883a 	mov	r6,r16
   4377c:	880f883a 	mov	r7,r17
   43780:	1009883a 	mov	r4,r2
   43784:	180b883a 	mov	r5,r3
   43788:	004bd740 	call	4bd74 <__muldf3>
   4378c:	100d883a 	mov	r6,r2
   43790:	180f883a 	mov	r7,r3
   43794:	9009883a 	mov	r4,r18
   43798:	980b883a 	mov	r5,r19
   4379c:	004c48c0 	call	4c48c <__subdf3>
   437a0:	aa000c04 	addi	r8,r21,48
   437a4:	a2000005 	stb	r8,0(r20)
   437a8:	000d883a 	mov	r6,zero
   437ac:	01d00934 	movhi	r7,16420
   437b0:	1009883a 	mov	r4,r2
   437b4:	180b883a 	mov	r5,r3
   437b8:	a5c00044 	addi	r23,r20,1
   437bc:	b53fd91e 	bne	r22,r20,43724 <__alt_mem_onchip_memory2_1+0xfffc2724>
   437c0:	100d883a 	mov	r6,r2
   437c4:	180f883a 	mov	r7,r3
   437c8:	1009883a 	mov	r4,r2
   437cc:	180b883a 	mov	r5,r3
   437d0:	004a9880 	call	4a988 <__adddf3>
   437d4:	100d883a 	mov	r6,r2
   437d8:	180f883a 	mov	r7,r3
   437dc:	8009883a 	mov	r4,r16
   437e0:	880b883a 	mov	r5,r17
   437e4:	1027883a 	mov	r19,r2
   437e8:	1825883a 	mov	r18,r3
   437ec:	004bc800 	call	4bc80 <__ledf2>
   437f0:	10000816 	blt	r2,zero,43814 <_dtoa_r+0x948>
   437f4:	980d883a 	mov	r6,r19
   437f8:	900f883a 	mov	r7,r18
   437fc:	8009883a 	mov	r4,r16
   43800:	880b883a 	mov	r5,r17
   43804:	004bb1c0 	call	4bb1c <__eqdf2>
   43808:	103f5a1e 	bne	r2,zero,43574 <__alt_mem_onchip_memory2_1+0xfffc2574>
   4380c:	ad40004c 	andi	r21,r21,1
   43810:	a83f5826 	beq	r21,zero,43574 <__alt_mem_onchip_memory2_1+0xfffc2574>
   43814:	bd3fffc3 	ldbu	r20,-1(r23)
   43818:	b8bfffc4 	addi	r2,r23,-1
   4381c:	1007883a 	mov	r3,r2
   43820:	01400e44 	movi	r5,57
   43824:	d9800717 	ldw	r6,28(sp)
   43828:	00000506 	br	43840 <_dtoa_r+0x974>
   4382c:	18ffffc4 	addi	r3,r3,-1
   43830:	11824726 	beq	r2,r6,44150 <_dtoa_r+0x1284>
   43834:	1d000003 	ldbu	r20,0(r3)
   43838:	102f883a 	mov	r23,r2
   4383c:	10bfffc4 	addi	r2,r2,-1
   43840:	a1003fcc 	andi	r4,r20,255
   43844:	2100201c 	xori	r4,r4,128
   43848:	213fe004 	addi	r4,r4,-128
   4384c:	217ff726 	beq	r4,r5,4382c <__alt_mem_onchip_memory2_1+0xfffc282c>
   43850:	a2000044 	addi	r8,r20,1
   43854:	12000005 	stb	r8,0(r2)
   43858:	003f4606 	br	43574 <__alt_mem_onchip_memory2_1+0xfffc2574>
   4385c:	d9000b17 	ldw	r4,44(sp)
   43860:	2000c826 	beq	r4,zero,43b84 <_dtoa_r+0xcb8>
   43864:	d9800317 	ldw	r6,12(sp)
   43868:	00c00044 	movi	r3,1
   4386c:	1980f90e 	bge	r3,r6,43c54 <_dtoa_r+0xd88>
   43870:	d8800617 	ldw	r2,24(sp)
   43874:	d8c00a17 	ldw	r3,40(sp)
   43878:	157fffc4 	addi	r21,r2,-1
   4387c:	1d41f316 	blt	r3,r21,4404c <_dtoa_r+0x1180>
   43880:	1d6bc83a 	sub	r21,r3,r21
   43884:	d9c00617 	ldw	r7,24(sp)
   43888:	3802aa16 	blt	r7,zero,44334 <_dtoa_r+0x1468>
   4388c:	dd000817 	ldw	r20,32(sp)
   43890:	d8800617 	ldw	r2,24(sp)
   43894:	d8c00817 	ldw	r3,32(sp)
   43898:	01400044 	movi	r5,1
   4389c:	e009883a 	mov	r4,fp
   438a0:	1887883a 	add	r3,r3,r2
   438a4:	d8c00815 	stw	r3,32(sp)
   438a8:	b0ad883a 	add	r22,r22,r2
   438ac:	00469740 	call	46974 <__i2b>
   438b0:	1023883a 	mov	r17,r2
   438b4:	a0000826 	beq	r20,zero,438d8 <_dtoa_r+0xa0c>
   438b8:	0580070e 	bge	zero,r22,438d8 <_dtoa_r+0xa0c>
   438bc:	a005883a 	mov	r2,r20
   438c0:	b500b916 	blt	r22,r20,43ba8 <_dtoa_r+0xcdc>
   438c4:	d9000817 	ldw	r4,32(sp)
   438c8:	a0a9c83a 	sub	r20,r20,r2
   438cc:	b0adc83a 	sub	r22,r22,r2
   438d0:	2089c83a 	sub	r4,r4,r2
   438d4:	d9000815 	stw	r4,32(sp)
   438d8:	d9800a17 	ldw	r6,40(sp)
   438dc:	0181810e 	bge	zero,r6,43ee4 <_dtoa_r+0x1018>
   438e0:	d9c00b17 	ldw	r7,44(sp)
   438e4:	3800b326 	beq	r7,zero,43bb4 <_dtoa_r+0xce8>
   438e8:	a800b226 	beq	r21,zero,43bb4 <_dtoa_r+0xce8>
   438ec:	880b883a 	mov	r5,r17
   438f0:	a80d883a 	mov	r6,r21
   438f4:	e009883a 	mov	r4,fp
   438f8:	0046ba80 	call	46ba8 <__pow5mult>
   438fc:	d9800917 	ldw	r6,36(sp)
   43900:	100b883a 	mov	r5,r2
   43904:	e009883a 	mov	r4,fp
   43908:	1023883a 	mov	r17,r2
   4390c:	00469b00 	call	469b0 <__multiply>
   43910:	1021883a 	mov	r16,r2
   43914:	d8800a17 	ldw	r2,40(sp)
   43918:	d9400917 	ldw	r5,36(sp)
   4391c:	e009883a 	mov	r4,fp
   43920:	1545c83a 	sub	r2,r2,r21
   43924:	d8800a15 	stw	r2,40(sp)
   43928:	00466100 	call	46610 <_Bfree>
   4392c:	d8c00a17 	ldw	r3,40(sp)
   43930:	18009f1e 	bne	r3,zero,43bb0 <_dtoa_r+0xce4>
   43934:	05c00044 	movi	r23,1
   43938:	e009883a 	mov	r4,fp
   4393c:	b80b883a 	mov	r5,r23
   43940:	00469740 	call	46974 <__i2b>
   43944:	d9000d17 	ldw	r4,52(sp)
   43948:	102b883a 	mov	r21,r2
   4394c:	2000ce26 	beq	r4,zero,43c88 <_dtoa_r+0xdbc>
   43950:	200d883a 	mov	r6,r4
   43954:	100b883a 	mov	r5,r2
   43958:	e009883a 	mov	r4,fp
   4395c:	0046ba80 	call	46ba8 <__pow5mult>
   43960:	d9800317 	ldw	r6,12(sp)
   43964:	102b883a 	mov	r21,r2
   43968:	b981810e 	bge	r23,r6,43f70 <_dtoa_r+0x10a4>
   4396c:	0027883a 	mov	r19,zero
   43970:	a8800417 	ldw	r2,16(r21)
   43974:	05c00804 	movi	r23,32
   43978:	10800104 	addi	r2,r2,4
   4397c:	1085883a 	add	r2,r2,r2
   43980:	1085883a 	add	r2,r2,r2
   43984:	a885883a 	add	r2,r21,r2
   43988:	11000017 	ldw	r4,0(r2)
   4398c:	004685c0 	call	4685c <__hi0bits>
   43990:	b885c83a 	sub	r2,r23,r2
   43994:	1585883a 	add	r2,r2,r22
   43998:	108007cc 	andi	r2,r2,31
   4399c:	1000b326 	beq	r2,zero,43c6c <_dtoa_r+0xda0>
   439a0:	00c00804 	movi	r3,32
   439a4:	1887c83a 	sub	r3,r3,r2
   439a8:	01000104 	movi	r4,4
   439ac:	20c2cd0e 	bge	r4,r3,444e4 <_dtoa_r+0x1618>
   439b0:	00c00704 	movi	r3,28
   439b4:	1885c83a 	sub	r2,r3,r2
   439b8:	d8c00817 	ldw	r3,32(sp)
   439bc:	a0a9883a 	add	r20,r20,r2
   439c0:	b0ad883a 	add	r22,r22,r2
   439c4:	1887883a 	add	r3,r3,r2
   439c8:	d8c00815 	stw	r3,32(sp)
   439cc:	d9800817 	ldw	r6,32(sp)
   439d0:	0180040e 	bge	zero,r6,439e4 <_dtoa_r+0xb18>
   439d4:	800b883a 	mov	r5,r16
   439d8:	e009883a 	mov	r4,fp
   439dc:	0046ce80 	call	46ce8 <__lshift>
   439e0:	1021883a 	mov	r16,r2
   439e4:	0580050e 	bge	zero,r22,439fc <_dtoa_r+0xb30>
   439e8:	a80b883a 	mov	r5,r21
   439ec:	b00d883a 	mov	r6,r22
   439f0:	e009883a 	mov	r4,fp
   439f4:	0046ce80 	call	46ce8 <__lshift>
   439f8:	102b883a 	mov	r21,r2
   439fc:	d9c00e17 	ldw	r7,56(sp)
   43a00:	3801211e 	bne	r7,zero,43e88 <_dtoa_r+0xfbc>
   43a04:	d9800617 	ldw	r6,24(sp)
   43a08:	0181380e 	bge	zero,r6,43eec <_dtoa_r+0x1020>
   43a0c:	d8c00b17 	ldw	r3,44(sp)
   43a10:	1800ab1e 	bne	r3,zero,43cc0 <_dtoa_r+0xdf4>
   43a14:	dc800717 	ldw	r18,28(sp)
   43a18:	dcc00617 	ldw	r19,24(sp)
   43a1c:	9029883a 	mov	r20,r18
   43a20:	00000206 	br	43a2c <_dtoa_r+0xb60>
   43a24:	00466380 	call	46638 <__multadd>
   43a28:	1021883a 	mov	r16,r2
   43a2c:	a80b883a 	mov	r5,r21
   43a30:	8009883a 	mov	r4,r16
   43a34:	0042ccc0 	call	42ccc <quorem>
   43a38:	10800c04 	addi	r2,r2,48
   43a3c:	90800005 	stb	r2,0(r18)
   43a40:	94800044 	addi	r18,r18,1
   43a44:	9507c83a 	sub	r3,r18,r20
   43a48:	000f883a 	mov	r7,zero
   43a4c:	01800284 	movi	r6,10
   43a50:	800b883a 	mov	r5,r16
   43a54:	e009883a 	mov	r4,fp
   43a58:	1cfff216 	blt	r3,r19,43a24 <__alt_mem_onchip_memory2_1+0xfffc2a24>
   43a5c:	1011883a 	mov	r8,r2
   43a60:	d8800617 	ldw	r2,24(sp)
   43a64:	0082370e 	bge	zero,r2,44344 <_dtoa_r+0x1478>
   43a68:	d9000717 	ldw	r4,28(sp)
   43a6c:	0025883a 	mov	r18,zero
   43a70:	20af883a 	add	r23,r4,r2
   43a74:	01800044 	movi	r6,1
   43a78:	800b883a 	mov	r5,r16
   43a7c:	e009883a 	mov	r4,fp
   43a80:	da001715 	stw	r8,92(sp)
   43a84:	0046ce80 	call	46ce8 <__lshift>
   43a88:	a80b883a 	mov	r5,r21
   43a8c:	1009883a 	mov	r4,r2
   43a90:	d8800915 	stw	r2,36(sp)
   43a94:	0046e300 	call	46e30 <__mcmp>
   43a98:	da001717 	ldw	r8,92(sp)
   43a9c:	0081800e 	bge	zero,r2,440a0 <_dtoa_r+0x11d4>
   43aa0:	b93fffc3 	ldbu	r4,-1(r23)
   43aa4:	b8bfffc4 	addi	r2,r23,-1
   43aa8:	1007883a 	mov	r3,r2
   43aac:	01800e44 	movi	r6,57
   43ab0:	d9c00717 	ldw	r7,28(sp)
   43ab4:	00000506 	br	43acc <_dtoa_r+0xc00>
   43ab8:	18ffffc4 	addi	r3,r3,-1
   43abc:	11c12326 	beq	r2,r7,43f4c <_dtoa_r+0x1080>
   43ac0:	19000003 	ldbu	r4,0(r3)
   43ac4:	102f883a 	mov	r23,r2
   43ac8:	10bfffc4 	addi	r2,r2,-1
   43acc:	21403fcc 	andi	r5,r4,255
   43ad0:	2940201c 	xori	r5,r5,128
   43ad4:	297fe004 	addi	r5,r5,-128
   43ad8:	29bff726 	beq	r5,r6,43ab8 <__alt_mem_onchip_memory2_1+0xfffc2ab8>
   43adc:	21000044 	addi	r4,r4,1
   43ae0:	11000005 	stb	r4,0(r2)
   43ae4:	a80b883a 	mov	r5,r21
   43ae8:	e009883a 	mov	r4,fp
   43aec:	00466100 	call	46610 <_Bfree>
   43af0:	883ea026 	beq	r17,zero,43574 <__alt_mem_onchip_memory2_1+0xfffc2574>
   43af4:	90000426 	beq	r18,zero,43b08 <_dtoa_r+0xc3c>
   43af8:	94400326 	beq	r18,r17,43b08 <_dtoa_r+0xc3c>
   43afc:	900b883a 	mov	r5,r18
   43b00:	e009883a 	mov	r4,fp
   43b04:	00466100 	call	46610 <_Bfree>
   43b08:	880b883a 	mov	r5,r17
   43b0c:	e009883a 	mov	r4,fp
   43b10:	00466100 	call	46610 <_Bfree>
   43b14:	003e9706 	br	43574 <__alt_mem_onchip_memory2_1+0xfffc2574>
   43b18:	01800044 	movi	r6,1
   43b1c:	d9800e15 	stw	r6,56(sp)
   43b20:	003d9606 	br	4317c <__alt_mem_onchip_memory2_1+0xfffc217c>
   43b24:	d8800817 	ldw	r2,32(sp)
   43b28:	d8c00517 	ldw	r3,20(sp)
   43b2c:	d8000d15 	stw	zero,52(sp)
   43b30:	10c5c83a 	sub	r2,r2,r3
   43b34:	00c9c83a 	sub	r4,zero,r3
   43b38:	d8800815 	stw	r2,32(sp)
   43b3c:	d9000a15 	stw	r4,40(sp)
   43b40:	003d9706 	br	431a0 <__alt_mem_onchip_memory2_1+0xfffc21a0>
   43b44:	05adc83a 	sub	r22,zero,r22
   43b48:	dd800815 	stw	r22,32(sp)
   43b4c:	002d883a 	mov	r22,zero
   43b50:	003d8e06 	br	4318c <__alt_mem_onchip_memory2_1+0xfffc218c>
   43b54:	d9000517 	ldw	r4,20(sp)
   43b58:	004ce080 	call	4ce08 <__floatsidf>
   43b5c:	100d883a 	mov	r6,r2
   43b60:	180f883a 	mov	r7,r3
   43b64:	a009883a 	mov	r4,r20
   43b68:	880b883a 	mov	r5,r17
   43b6c:	004bb1c0 	call	4bb1c <__eqdf2>
   43b70:	103d7126 	beq	r2,zero,43138 <__alt_mem_onchip_memory2_1+0xfffc2138>
   43b74:	d9c00517 	ldw	r7,20(sp)
   43b78:	39ffffc4 	addi	r7,r7,-1
   43b7c:	d9c00515 	stw	r7,20(sp)
   43b80:	003d6d06 	br	43138 <__alt_mem_onchip_memory2_1+0xfffc2138>
   43b84:	dd400a17 	ldw	r21,40(sp)
   43b88:	dd000817 	ldw	r20,32(sp)
   43b8c:	0023883a 	mov	r17,zero
   43b90:	003f4806 	br	438b4 <__alt_mem_onchip_memory2_1+0xfffc28b4>
   43b94:	10e3c83a 	sub	r17,r2,r3
   43b98:	9448983a 	sll	r4,r18,r17
   43b9c:	003d3206 	br	43068 <__alt_mem_onchip_memory2_1+0xfffc2068>
   43ba0:	d8000e15 	stw	zero,56(sp)
   43ba4:	003d7506 	br	4317c <__alt_mem_onchip_memory2_1+0xfffc217c>
   43ba8:	b005883a 	mov	r2,r22
   43bac:	003f4506 	br	438c4 <__alt_mem_onchip_memory2_1+0xfffc28c4>
   43bb0:	dc000915 	stw	r16,36(sp)
   43bb4:	d9800a17 	ldw	r6,40(sp)
   43bb8:	d9400917 	ldw	r5,36(sp)
   43bbc:	e009883a 	mov	r4,fp
   43bc0:	0046ba80 	call	46ba8 <__pow5mult>
   43bc4:	1021883a 	mov	r16,r2
   43bc8:	003f5a06 	br	43934 <__alt_mem_onchip_memory2_1+0xfffc2934>
   43bcc:	01c00044 	movi	r7,1
   43bd0:	d9c00b15 	stw	r7,44(sp)
   43bd4:	d8802217 	ldw	r2,136(sp)
   43bd8:	0081280e 	bge	zero,r2,4407c <_dtoa_r+0x11b0>
   43bdc:	100d883a 	mov	r6,r2
   43be0:	1021883a 	mov	r16,r2
   43be4:	d8800c15 	stw	r2,48(sp)
   43be8:	d8800615 	stw	r2,24(sp)
   43bec:	003d8806 	br	43210 <__alt_mem_onchip_memory2_1+0xfffc2210>
   43bf0:	d8800617 	ldw	r2,24(sp)
   43bf4:	00be9b16 	blt	zero,r2,43664 <__alt_mem_onchip_memory2_1+0xfffc2664>
   43bf8:	10010f1e 	bne	r2,zero,44038 <_dtoa_r+0x116c>
   43bfc:	880b883a 	mov	r5,r17
   43c00:	000d883a 	mov	r6,zero
   43c04:	01d00534 	movhi	r7,16404
   43c08:	8009883a 	mov	r4,r16
   43c0c:	004bd740 	call	4bd74 <__muldf3>
   43c10:	900d883a 	mov	r6,r18
   43c14:	980f883a 	mov	r7,r19
   43c18:	1009883a 	mov	r4,r2
   43c1c:	180b883a 	mov	r5,r3
   43c20:	004bba40 	call	4bba4 <__gedf2>
   43c24:	002b883a 	mov	r21,zero
   43c28:	0023883a 	mov	r17,zero
   43c2c:	1000bf16 	blt	r2,zero,43f2c <_dtoa_r+0x1060>
   43c30:	d9802217 	ldw	r6,136(sp)
   43c34:	ddc00717 	ldw	r23,28(sp)
   43c38:	018c303a 	nor	r6,zero,r6
   43c3c:	d9800515 	stw	r6,20(sp)
   43c40:	a80b883a 	mov	r5,r21
   43c44:	e009883a 	mov	r4,fp
   43c48:	00466100 	call	46610 <_Bfree>
   43c4c:	883e4926 	beq	r17,zero,43574 <__alt_mem_onchip_memory2_1+0xfffc2574>
   43c50:	003fad06 	br	43b08 <__alt_mem_onchip_memory2_1+0xfffc2b08>
   43c54:	d9c01117 	ldw	r7,68(sp)
   43c58:	3801bc26 	beq	r7,zero,4434c <_dtoa_r+0x1480>
   43c5c:	10810cc4 	addi	r2,r2,1075
   43c60:	dd400a17 	ldw	r21,40(sp)
   43c64:	dd000817 	ldw	r20,32(sp)
   43c68:	003f0a06 	br	43894 <__alt_mem_onchip_memory2_1+0xfffc2894>
   43c6c:	00800704 	movi	r2,28
   43c70:	d9000817 	ldw	r4,32(sp)
   43c74:	a0a9883a 	add	r20,r20,r2
   43c78:	b0ad883a 	add	r22,r22,r2
   43c7c:	2089883a 	add	r4,r4,r2
   43c80:	d9000815 	stw	r4,32(sp)
   43c84:	003f5106 	br	439cc <__alt_mem_onchip_memory2_1+0xfffc29cc>
   43c88:	d8c00317 	ldw	r3,12(sp)
   43c8c:	b8c1fc0e 	bge	r23,r3,44480 <_dtoa_r+0x15b4>
   43c90:	0027883a 	mov	r19,zero
   43c94:	b805883a 	mov	r2,r23
   43c98:	003f3e06 	br	43994 <__alt_mem_onchip_memory2_1+0xfffc2994>
   43c9c:	880b883a 	mov	r5,r17
   43ca0:	e009883a 	mov	r4,fp
   43ca4:	000f883a 	mov	r7,zero
   43ca8:	01800284 	movi	r6,10
   43cac:	00466380 	call	46638 <__multadd>
   43cb0:	d9000c17 	ldw	r4,48(sp)
   43cb4:	1023883a 	mov	r17,r2
   43cb8:	0102040e 	bge	zero,r4,444cc <_dtoa_r+0x1600>
   43cbc:	d9000615 	stw	r4,24(sp)
   43cc0:	0500050e 	bge	zero,r20,43cd8 <_dtoa_r+0xe0c>
   43cc4:	880b883a 	mov	r5,r17
   43cc8:	a00d883a 	mov	r6,r20
   43ccc:	e009883a 	mov	r4,fp
   43cd0:	0046ce80 	call	46ce8 <__lshift>
   43cd4:	1023883a 	mov	r17,r2
   43cd8:	9801241e 	bne	r19,zero,4416c <_dtoa_r+0x12a0>
   43cdc:	8829883a 	mov	r20,r17
   43ce0:	d9000617 	ldw	r4,24(sp)
   43ce4:	dcc00717 	ldw	r19,28(sp)
   43ce8:	9480004c 	andi	r18,r18,1
   43cec:	20bfffc4 	addi	r2,r4,-1
   43cf0:	9885883a 	add	r2,r19,r2
   43cf4:	d8800415 	stw	r2,16(sp)
   43cf8:	dc800615 	stw	r18,24(sp)
   43cfc:	a80b883a 	mov	r5,r21
   43d00:	8009883a 	mov	r4,r16
   43d04:	0042ccc0 	call	42ccc <quorem>
   43d08:	880b883a 	mov	r5,r17
   43d0c:	8009883a 	mov	r4,r16
   43d10:	102f883a 	mov	r23,r2
   43d14:	0046e300 	call	46e30 <__mcmp>
   43d18:	a80b883a 	mov	r5,r21
   43d1c:	a00d883a 	mov	r6,r20
   43d20:	e009883a 	mov	r4,fp
   43d24:	102d883a 	mov	r22,r2
   43d28:	0046e900 	call	46e90 <__mdiff>
   43d2c:	1007883a 	mov	r3,r2
   43d30:	10800317 	ldw	r2,12(r2)
   43d34:	bc800c04 	addi	r18,r23,48
   43d38:	180b883a 	mov	r5,r3
   43d3c:	10004e1e 	bne	r2,zero,43e78 <_dtoa_r+0xfac>
   43d40:	8009883a 	mov	r4,r16
   43d44:	d8c01615 	stw	r3,88(sp)
   43d48:	0046e300 	call	46e30 <__mcmp>
   43d4c:	d8c01617 	ldw	r3,88(sp)
   43d50:	e009883a 	mov	r4,fp
   43d54:	d8801615 	stw	r2,88(sp)
   43d58:	180b883a 	mov	r5,r3
   43d5c:	00466100 	call	46610 <_Bfree>
   43d60:	d8801617 	ldw	r2,88(sp)
   43d64:	1000041e 	bne	r2,zero,43d78 <_dtoa_r+0xeac>
   43d68:	d9800317 	ldw	r6,12(sp)
   43d6c:	3000021e 	bne	r6,zero,43d78 <_dtoa_r+0xeac>
   43d70:	d8c00617 	ldw	r3,24(sp)
   43d74:	18003726 	beq	r3,zero,43e54 <_dtoa_r+0xf88>
   43d78:	b0002016 	blt	r22,zero,43dfc <_dtoa_r+0xf30>
   43d7c:	b000041e 	bne	r22,zero,43d90 <_dtoa_r+0xec4>
   43d80:	d9000317 	ldw	r4,12(sp)
   43d84:	2000021e 	bne	r4,zero,43d90 <_dtoa_r+0xec4>
   43d88:	d8c00617 	ldw	r3,24(sp)
   43d8c:	18001b26 	beq	r3,zero,43dfc <_dtoa_r+0xf30>
   43d90:	00810716 	blt	zero,r2,441b0 <_dtoa_r+0x12e4>
   43d94:	d8c00417 	ldw	r3,16(sp)
   43d98:	9d800044 	addi	r22,r19,1
   43d9c:	9c800005 	stb	r18,0(r19)
   43da0:	b02f883a 	mov	r23,r22
   43da4:	98c10626 	beq	r19,r3,441c0 <_dtoa_r+0x12f4>
   43da8:	800b883a 	mov	r5,r16
   43dac:	000f883a 	mov	r7,zero
   43db0:	01800284 	movi	r6,10
   43db4:	e009883a 	mov	r4,fp
   43db8:	00466380 	call	46638 <__multadd>
   43dbc:	1021883a 	mov	r16,r2
   43dc0:	000f883a 	mov	r7,zero
   43dc4:	01800284 	movi	r6,10
   43dc8:	880b883a 	mov	r5,r17
   43dcc:	e009883a 	mov	r4,fp
   43dd0:	8d002526 	beq	r17,r20,43e68 <_dtoa_r+0xf9c>
   43dd4:	00466380 	call	46638 <__multadd>
   43dd8:	a00b883a 	mov	r5,r20
   43ddc:	000f883a 	mov	r7,zero
   43de0:	01800284 	movi	r6,10
   43de4:	e009883a 	mov	r4,fp
   43de8:	1023883a 	mov	r17,r2
   43dec:	00466380 	call	46638 <__multadd>
   43df0:	1029883a 	mov	r20,r2
   43df4:	b027883a 	mov	r19,r22
   43df8:	003fc006 	br	43cfc <__alt_mem_onchip_memory2_1+0xfffc2cfc>
   43dfc:	9011883a 	mov	r8,r18
   43e00:	00800e0e 	bge	zero,r2,43e3c <_dtoa_r+0xf70>
   43e04:	800b883a 	mov	r5,r16
   43e08:	01800044 	movi	r6,1
   43e0c:	e009883a 	mov	r4,fp
   43e10:	da001715 	stw	r8,92(sp)
   43e14:	0046ce80 	call	46ce8 <__lshift>
   43e18:	a80b883a 	mov	r5,r21
   43e1c:	1009883a 	mov	r4,r2
   43e20:	1021883a 	mov	r16,r2
   43e24:	0046e300 	call	46e30 <__mcmp>
   43e28:	da001717 	ldw	r8,92(sp)
   43e2c:	0081960e 	bge	zero,r2,44488 <_dtoa_r+0x15bc>
   43e30:	00800e44 	movi	r2,57
   43e34:	40817026 	beq	r8,r2,443f8 <_dtoa_r+0x152c>
   43e38:	ba000c44 	addi	r8,r23,49
   43e3c:	8825883a 	mov	r18,r17
   43e40:	9dc00044 	addi	r23,r19,1
   43e44:	9a000005 	stb	r8,0(r19)
   43e48:	a023883a 	mov	r17,r20
   43e4c:	dc000915 	stw	r16,36(sp)
   43e50:	003f2406 	br	43ae4 <__alt_mem_onchip_memory2_1+0xfffc2ae4>
   43e54:	00800e44 	movi	r2,57
   43e58:	9011883a 	mov	r8,r18
   43e5c:	90816626 	beq	r18,r2,443f8 <_dtoa_r+0x152c>
   43e60:	05bff516 	blt	zero,r22,43e38 <__alt_mem_onchip_memory2_1+0xfffc2e38>
   43e64:	003ff506 	br	43e3c <__alt_mem_onchip_memory2_1+0xfffc2e3c>
   43e68:	00466380 	call	46638 <__multadd>
   43e6c:	1023883a 	mov	r17,r2
   43e70:	1029883a 	mov	r20,r2
   43e74:	003fdf06 	br	43df4 <__alt_mem_onchip_memory2_1+0xfffc2df4>
   43e78:	e009883a 	mov	r4,fp
   43e7c:	00466100 	call	46610 <_Bfree>
   43e80:	00800044 	movi	r2,1
   43e84:	003fbc06 	br	43d78 <__alt_mem_onchip_memory2_1+0xfffc2d78>
   43e88:	a80b883a 	mov	r5,r21
   43e8c:	8009883a 	mov	r4,r16
   43e90:	0046e300 	call	46e30 <__mcmp>
   43e94:	103edb0e 	bge	r2,zero,43a04 <__alt_mem_onchip_memory2_1+0xfffc2a04>
   43e98:	800b883a 	mov	r5,r16
   43e9c:	000f883a 	mov	r7,zero
   43ea0:	01800284 	movi	r6,10
   43ea4:	e009883a 	mov	r4,fp
   43ea8:	00466380 	call	46638 <__multadd>
   43eac:	1021883a 	mov	r16,r2
   43eb0:	d8800517 	ldw	r2,20(sp)
   43eb4:	d8c00b17 	ldw	r3,44(sp)
   43eb8:	10bfffc4 	addi	r2,r2,-1
   43ebc:	d8800515 	stw	r2,20(sp)
   43ec0:	183f761e 	bne	r3,zero,43c9c <__alt_mem_onchip_memory2_1+0xfffc2c9c>
   43ec4:	d9000c17 	ldw	r4,48(sp)
   43ec8:	0101730e 	bge	zero,r4,44498 <_dtoa_r+0x15cc>
   43ecc:	d9000615 	stw	r4,24(sp)
   43ed0:	003ed006 	br	43a14 <__alt_mem_onchip_memory2_1+0xfffc2a14>
   43ed4:	00800084 	movi	r2,2
   43ed8:	3081861e 	bne	r6,r2,444f4 <_dtoa_r+0x1628>
   43edc:	d8000b15 	stw	zero,44(sp)
   43ee0:	003f3c06 	br	43bd4 <__alt_mem_onchip_memory2_1+0xfffc2bd4>
   43ee4:	dc000917 	ldw	r16,36(sp)
   43ee8:	003e9206 	br	43934 <__alt_mem_onchip_memory2_1+0xfffc2934>
   43eec:	d9c00317 	ldw	r7,12(sp)
   43ef0:	00800084 	movi	r2,2
   43ef4:	11fec50e 	bge	r2,r7,43a0c <__alt_mem_onchip_memory2_1+0xfffc2a0c>
   43ef8:	d9000617 	ldw	r4,24(sp)
   43efc:	20013c1e 	bne	r4,zero,443f0 <_dtoa_r+0x1524>
   43f00:	a80b883a 	mov	r5,r21
   43f04:	000f883a 	mov	r7,zero
   43f08:	01800144 	movi	r6,5
   43f0c:	e009883a 	mov	r4,fp
   43f10:	00466380 	call	46638 <__multadd>
   43f14:	100b883a 	mov	r5,r2
   43f18:	8009883a 	mov	r4,r16
   43f1c:	102b883a 	mov	r21,r2
   43f20:	0046e300 	call	46e30 <__mcmp>
   43f24:	dc000915 	stw	r16,36(sp)
   43f28:	00bf410e 	bge	zero,r2,43c30 <__alt_mem_onchip_memory2_1+0xfffc2c30>
   43f2c:	d9c00717 	ldw	r7,28(sp)
   43f30:	00800c44 	movi	r2,49
   43f34:	38800005 	stb	r2,0(r7)
   43f38:	d8800517 	ldw	r2,20(sp)
   43f3c:	3dc00044 	addi	r23,r7,1
   43f40:	10800044 	addi	r2,r2,1
   43f44:	d8800515 	stw	r2,20(sp)
   43f48:	003f3d06 	br	43c40 <__alt_mem_onchip_memory2_1+0xfffc2c40>
   43f4c:	d9800517 	ldw	r6,20(sp)
   43f50:	d9c00717 	ldw	r7,28(sp)
   43f54:	00800c44 	movi	r2,49
   43f58:	31800044 	addi	r6,r6,1
   43f5c:	d9800515 	stw	r6,20(sp)
   43f60:	38800005 	stb	r2,0(r7)
   43f64:	003edf06 	br	43ae4 <__alt_mem_onchip_memory2_1+0xfffc2ae4>
   43f68:	d8000b15 	stw	zero,44(sp)
   43f6c:	003c9f06 	br	431ec <__alt_mem_onchip_memory2_1+0xfffc21ec>
   43f70:	903e7e1e 	bne	r18,zero,4396c <__alt_mem_onchip_memory2_1+0xfffc296c>
   43f74:	00800434 	movhi	r2,16
   43f78:	10bfffc4 	addi	r2,r2,-1
   43f7c:	9884703a 	and	r2,r19,r2
   43f80:	1000ea1e 	bne	r2,zero,4432c <_dtoa_r+0x1460>
   43f84:	9cdffc2c 	andhi	r19,r19,32752
   43f88:	9800e826 	beq	r19,zero,4432c <_dtoa_r+0x1460>
   43f8c:	d9c00817 	ldw	r7,32(sp)
   43f90:	b5800044 	addi	r22,r22,1
   43f94:	04c00044 	movi	r19,1
   43f98:	39c00044 	addi	r7,r7,1
   43f9c:	d9c00815 	stw	r7,32(sp)
   43fa0:	d8800d17 	ldw	r2,52(sp)
   43fa4:	103e721e 	bne	r2,zero,43970 <__alt_mem_onchip_memory2_1+0xfffc2970>
   43fa8:	00800044 	movi	r2,1
   43fac:	003e7906 	br	43994 <__alt_mem_onchip_memory2_1+0xfffc2994>
   43fb0:	8009883a 	mov	r4,r16
   43fb4:	004ce080 	call	4ce08 <__floatsidf>
   43fb8:	d9800f17 	ldw	r6,60(sp)
   43fbc:	d9c01017 	ldw	r7,64(sp)
   43fc0:	1009883a 	mov	r4,r2
   43fc4:	180b883a 	mov	r5,r3
   43fc8:	004bd740 	call	4bd74 <__muldf3>
   43fcc:	000d883a 	mov	r6,zero
   43fd0:	01d00734 	movhi	r7,16412
   43fd4:	1009883a 	mov	r4,r2
   43fd8:	180b883a 	mov	r5,r3
   43fdc:	004a9880 	call	4a988 <__adddf3>
   43fe0:	047f3034 	movhi	r17,64704
   43fe4:	1021883a 	mov	r16,r2
   43fe8:	1c63883a 	add	r17,r3,r17
   43fec:	d9000f17 	ldw	r4,60(sp)
   43ff0:	d9401017 	ldw	r5,64(sp)
   43ff4:	000d883a 	mov	r6,zero
   43ff8:	01d00534 	movhi	r7,16404
   43ffc:	004c48c0 	call	4c48c <__subdf3>
   44000:	800d883a 	mov	r6,r16
   44004:	880f883a 	mov	r7,r17
   44008:	1009883a 	mov	r4,r2
   4400c:	180b883a 	mov	r5,r3
   44010:	102b883a 	mov	r21,r2
   44014:	1829883a 	mov	r20,r3
   44018:	004bba40 	call	4bba4 <__gedf2>
   4401c:	00806c16 	blt	zero,r2,441d0 <_dtoa_r+0x1304>
   44020:	89e0003c 	xorhi	r7,r17,32768
   44024:	800d883a 	mov	r6,r16
   44028:	a809883a 	mov	r4,r21
   4402c:	a00b883a 	mov	r5,r20
   44030:	004bc800 	call	4bc80 <__ledf2>
   44034:	103d7e0e 	bge	r2,zero,43630 <__alt_mem_onchip_memory2_1+0xfffc2630>
   44038:	002b883a 	mov	r21,zero
   4403c:	0023883a 	mov	r17,zero
   44040:	003efb06 	br	43c30 <__alt_mem_onchip_memory2_1+0xfffc2c30>
   44044:	d8800717 	ldw	r2,28(sp)
   44048:	003bd006 	br	42f8c <__alt_mem_onchip_memory2_1+0xfffc1f8c>
   4404c:	d9000a17 	ldw	r4,40(sp)
   44050:	d9800d17 	ldw	r6,52(sp)
   44054:	dd400a15 	stw	r21,40(sp)
   44058:	a905c83a 	sub	r2,r21,r4
   4405c:	308d883a 	add	r6,r6,r2
   44060:	d9800d15 	stw	r6,52(sp)
   44064:	002b883a 	mov	r21,zero
   44068:	003e0606 	br	43884 <__alt_mem_onchip_memory2_1+0xfffc2884>
   4406c:	9023883a 	mov	r17,r18
   44070:	9829883a 	mov	r20,r19
   44074:	04000084 	movi	r16,2
   44078:	003c9206 	br	432c4 <__alt_mem_onchip_memory2_1+0xfffc22c4>
   4407c:	04000044 	movi	r16,1
   44080:	dc000c15 	stw	r16,48(sp)
   44084:	dc000615 	stw	r16,24(sp)
   44088:	dc002215 	stw	r16,136(sp)
   4408c:	e0001115 	stw	zero,68(fp)
   44090:	000b883a 	mov	r5,zero
   44094:	003c6906 	br	4323c <__alt_mem_onchip_memory2_1+0xfffc223c>
   44098:	3021883a 	mov	r16,r6
   4409c:	003ffb06 	br	4408c <__alt_mem_onchip_memory2_1+0xfffc308c>
   440a0:	1000021e 	bne	r2,zero,440ac <_dtoa_r+0x11e0>
   440a4:	4200004c 	andi	r8,r8,1
   440a8:	403e7d1e 	bne	r8,zero,43aa0 <__alt_mem_onchip_memory2_1+0xfffc2aa0>
   440ac:	01000c04 	movi	r4,48
   440b0:	00000106 	br	440b8 <_dtoa_r+0x11ec>
   440b4:	102f883a 	mov	r23,r2
   440b8:	b8bfffc4 	addi	r2,r23,-1
   440bc:	10c00007 	ldb	r3,0(r2)
   440c0:	193ffc26 	beq	r3,r4,440b4 <__alt_mem_onchip_memory2_1+0xfffc30b4>
   440c4:	003e8706 	br	43ae4 <__alt_mem_onchip_memory2_1+0xfffc2ae4>
   440c8:	d8800517 	ldw	r2,20(sp)
   440cc:	00a3c83a 	sub	r17,zero,r2
   440d0:	8800a426 	beq	r17,zero,44364 <_dtoa_r+0x1498>
   440d4:	888003cc 	andi	r2,r17,15
   440d8:	100490fa 	slli	r2,r2,3
   440dc:	00c00174 	movhi	r3,5
   440e0:	18febb04 	addi	r3,r3,-1300
   440e4:	1885883a 	add	r2,r3,r2
   440e8:	11800017 	ldw	r6,0(r2)
   440ec:	11c00117 	ldw	r7,4(r2)
   440f0:	9009883a 	mov	r4,r18
   440f4:	980b883a 	mov	r5,r19
   440f8:	8823d13a 	srai	r17,r17,4
   440fc:	004bd740 	call	4bd74 <__muldf3>
   44100:	d8800f15 	stw	r2,60(sp)
   44104:	d8c01015 	stw	r3,64(sp)
   44108:	8800e826 	beq	r17,zero,444ac <_dtoa_r+0x15e0>
   4410c:	05000174 	movhi	r20,5
   44110:	a53eb104 	addi	r20,r20,-1340
   44114:	04000084 	movi	r16,2
   44118:	8980004c 	andi	r6,r17,1
   4411c:	1009883a 	mov	r4,r2
   44120:	8823d07a 	srai	r17,r17,1
   44124:	180b883a 	mov	r5,r3
   44128:	30000426 	beq	r6,zero,4413c <_dtoa_r+0x1270>
   4412c:	a1800017 	ldw	r6,0(r20)
   44130:	a1c00117 	ldw	r7,4(r20)
   44134:	84000044 	addi	r16,r16,1
   44138:	004bd740 	call	4bd74 <__muldf3>
   4413c:	a5000204 	addi	r20,r20,8
   44140:	883ff51e 	bne	r17,zero,44118 <__alt_mem_onchip_memory2_1+0xfffc3118>
   44144:	d8800f15 	stw	r2,60(sp)
   44148:	d8c01015 	stw	r3,64(sp)
   4414c:	003c7606 	br	43328 <__alt_mem_onchip_memory2_1+0xfffc2328>
   44150:	00c00c04 	movi	r3,48
   44154:	10c00005 	stb	r3,0(r2)
   44158:	d8c00517 	ldw	r3,20(sp)
   4415c:	bd3fffc3 	ldbu	r20,-1(r23)
   44160:	18c00044 	addi	r3,r3,1
   44164:	d8c00515 	stw	r3,20(sp)
   44168:	003db906 	br	43850 <__alt_mem_onchip_memory2_1+0xfffc2850>
   4416c:	89400117 	ldw	r5,4(r17)
   44170:	e009883a 	mov	r4,fp
   44174:	00465680 	call	46568 <_Balloc>
   44178:	89800417 	ldw	r6,16(r17)
   4417c:	89400304 	addi	r5,r17,12
   44180:	11000304 	addi	r4,r2,12
   44184:	31800084 	addi	r6,r6,2
   44188:	318d883a 	add	r6,r6,r6
   4418c:	318d883a 	add	r6,r6,r6
   44190:	1027883a 	mov	r19,r2
   44194:	004619c0 	call	4619c <memcpy>
   44198:	01800044 	movi	r6,1
   4419c:	980b883a 	mov	r5,r19
   441a0:	e009883a 	mov	r4,fp
   441a4:	0046ce80 	call	46ce8 <__lshift>
   441a8:	1029883a 	mov	r20,r2
   441ac:	003ecc06 	br	43ce0 <__alt_mem_onchip_memory2_1+0xfffc2ce0>
   441b0:	00800e44 	movi	r2,57
   441b4:	90809026 	beq	r18,r2,443f8 <_dtoa_r+0x152c>
   441b8:	92000044 	addi	r8,r18,1
   441bc:	003f1f06 	br	43e3c <__alt_mem_onchip_memory2_1+0xfffc2e3c>
   441c0:	9011883a 	mov	r8,r18
   441c4:	8825883a 	mov	r18,r17
   441c8:	a023883a 	mov	r17,r20
   441cc:	003e2906 	br	43a74 <__alt_mem_onchip_memory2_1+0xfffc2a74>
   441d0:	002b883a 	mov	r21,zero
   441d4:	0023883a 	mov	r17,zero
   441d8:	003f5406 	br	43f2c <__alt_mem_onchip_memory2_1+0xfffc2f2c>
   441dc:	61bfffc4 	addi	r6,r12,-1
   441e0:	300490fa 	slli	r2,r6,3
   441e4:	00c00174 	movhi	r3,5
   441e8:	18febb04 	addi	r3,r3,-1300
   441ec:	1885883a 	add	r2,r3,r2
   441f0:	11000017 	ldw	r4,0(r2)
   441f4:	11400117 	ldw	r5,4(r2)
   441f8:	d8800717 	ldw	r2,28(sp)
   441fc:	880f883a 	mov	r7,r17
   44200:	d9801215 	stw	r6,72(sp)
   44204:	800d883a 	mov	r6,r16
   44208:	db001615 	stw	r12,88(sp)
   4420c:	15c00044 	addi	r23,r2,1
   44210:	004bd740 	call	4bd74 <__muldf3>
   44214:	d9401017 	ldw	r5,64(sp)
   44218:	d9000f17 	ldw	r4,60(sp)
   4421c:	d8c01515 	stw	r3,84(sp)
   44220:	d8801415 	stw	r2,80(sp)
   44224:	004cd880 	call	4cd88 <__fixdfsi>
   44228:	1009883a 	mov	r4,r2
   4422c:	1021883a 	mov	r16,r2
   44230:	004ce080 	call	4ce08 <__floatsidf>
   44234:	d9000f17 	ldw	r4,60(sp)
   44238:	d9401017 	ldw	r5,64(sp)
   4423c:	100d883a 	mov	r6,r2
   44240:	180f883a 	mov	r7,r3
   44244:	004c48c0 	call	4c48c <__subdf3>
   44248:	1829883a 	mov	r20,r3
   4424c:	d8c00717 	ldw	r3,28(sp)
   44250:	84000c04 	addi	r16,r16,48
   44254:	1023883a 	mov	r17,r2
   44258:	1c000005 	stb	r16,0(r3)
   4425c:	db001617 	ldw	r12,88(sp)
   44260:	00800044 	movi	r2,1
   44264:	60802226 	beq	r12,r2,442f0 <_dtoa_r+0x1424>
   44268:	d9c00717 	ldw	r7,28(sp)
   4426c:	8805883a 	mov	r2,r17
   44270:	b82b883a 	mov	r21,r23
   44274:	3b19883a 	add	r12,r7,r12
   44278:	6023883a 	mov	r17,r12
   4427c:	a007883a 	mov	r3,r20
   44280:	dc800f15 	stw	r18,60(sp)
   44284:	000d883a 	mov	r6,zero
   44288:	01d00934 	movhi	r7,16420
   4428c:	1009883a 	mov	r4,r2
   44290:	180b883a 	mov	r5,r3
   44294:	004bd740 	call	4bd74 <__muldf3>
   44298:	180b883a 	mov	r5,r3
   4429c:	1009883a 	mov	r4,r2
   442a0:	1829883a 	mov	r20,r3
   442a4:	1025883a 	mov	r18,r2
   442a8:	004cd880 	call	4cd88 <__fixdfsi>
   442ac:	1009883a 	mov	r4,r2
   442b0:	1021883a 	mov	r16,r2
   442b4:	004ce080 	call	4ce08 <__floatsidf>
   442b8:	100d883a 	mov	r6,r2
   442bc:	180f883a 	mov	r7,r3
   442c0:	9009883a 	mov	r4,r18
   442c4:	a00b883a 	mov	r5,r20
   442c8:	84000c04 	addi	r16,r16,48
   442cc:	004c48c0 	call	4c48c <__subdf3>
   442d0:	ad400044 	addi	r21,r21,1
   442d4:	ac3fffc5 	stb	r16,-1(r21)
   442d8:	ac7fea1e 	bne	r21,r17,44284 <__alt_mem_onchip_memory2_1+0xfffc3284>
   442dc:	1023883a 	mov	r17,r2
   442e0:	d8801217 	ldw	r2,72(sp)
   442e4:	dc800f17 	ldw	r18,60(sp)
   442e8:	1829883a 	mov	r20,r3
   442ec:	b8af883a 	add	r23,r23,r2
   442f0:	d9001417 	ldw	r4,80(sp)
   442f4:	d9401517 	ldw	r5,84(sp)
   442f8:	000d883a 	mov	r6,zero
   442fc:	01cff834 	movhi	r7,16352
   44300:	004a9880 	call	4a988 <__adddf3>
   44304:	880d883a 	mov	r6,r17
   44308:	a00f883a 	mov	r7,r20
   4430c:	1009883a 	mov	r4,r2
   44310:	180b883a 	mov	r5,r3
   44314:	004bc800 	call	4bc80 <__ledf2>
   44318:	10003e0e 	bge	r2,zero,44414 <_dtoa_r+0x1548>
   4431c:	d9001317 	ldw	r4,76(sp)
   44320:	bd3fffc3 	ldbu	r20,-1(r23)
   44324:	d9000515 	stw	r4,20(sp)
   44328:	003d3b06 	br	43818 <__alt_mem_onchip_memory2_1+0xfffc2818>
   4432c:	0027883a 	mov	r19,zero
   44330:	003f1b06 	br	43fa0 <__alt_mem_onchip_memory2_1+0xfffc2fa0>
   44334:	d8800817 	ldw	r2,32(sp)
   44338:	11e9c83a 	sub	r20,r2,r7
   4433c:	0005883a 	mov	r2,zero
   44340:	003d5406 	br	43894 <__alt_mem_onchip_memory2_1+0xfffc2894>
   44344:	00800044 	movi	r2,1
   44348:	003dc706 	br	43a68 <__alt_mem_onchip_memory2_1+0xfffc2a68>
   4434c:	d8c00217 	ldw	r3,8(sp)
   44350:	00800d84 	movi	r2,54
   44354:	dd400a17 	ldw	r21,40(sp)
   44358:	10c5c83a 	sub	r2,r2,r3
   4435c:	dd000817 	ldw	r20,32(sp)
   44360:	003d4c06 	br	43894 <__alt_mem_onchip_memory2_1+0xfffc2894>
   44364:	dc800f15 	stw	r18,60(sp)
   44368:	dcc01015 	stw	r19,64(sp)
   4436c:	04000084 	movi	r16,2
   44370:	003bed06 	br	43328 <__alt_mem_onchip_memory2_1+0xfffc2328>
   44374:	d9000617 	ldw	r4,24(sp)
   44378:	203f0d26 	beq	r4,zero,43fb0 <__alt_mem_onchip_memory2_1+0xfffc2fb0>
   4437c:	d9800c17 	ldw	r6,48(sp)
   44380:	01bcab0e 	bge	zero,r6,43630 <__alt_mem_onchip_memory2_1+0xfffc2630>
   44384:	d9401017 	ldw	r5,64(sp)
   44388:	d9000f17 	ldw	r4,60(sp)
   4438c:	000d883a 	mov	r6,zero
   44390:	01d00934 	movhi	r7,16420
   44394:	004bd740 	call	4bd74 <__muldf3>
   44398:	81000044 	addi	r4,r16,1
   4439c:	d8800f15 	stw	r2,60(sp)
   443a0:	d8c01015 	stw	r3,64(sp)
   443a4:	004ce080 	call	4ce08 <__floatsidf>
   443a8:	d9800f17 	ldw	r6,60(sp)
   443ac:	d9c01017 	ldw	r7,64(sp)
   443b0:	1009883a 	mov	r4,r2
   443b4:	180b883a 	mov	r5,r3
   443b8:	004bd740 	call	4bd74 <__muldf3>
   443bc:	01d00734 	movhi	r7,16412
   443c0:	000d883a 	mov	r6,zero
   443c4:	1009883a 	mov	r4,r2
   443c8:	180b883a 	mov	r5,r3
   443cc:	004a9880 	call	4a988 <__adddf3>
   443d0:	d9c00517 	ldw	r7,20(sp)
   443d4:	047f3034 	movhi	r17,64704
   443d8:	1021883a 	mov	r16,r2
   443dc:	39ffffc4 	addi	r7,r7,-1
   443e0:	d9c01315 	stw	r7,76(sp)
   443e4:	1c63883a 	add	r17,r3,r17
   443e8:	db000c17 	ldw	r12,48(sp)
   443ec:	003bea06 	br	43398 <__alt_mem_onchip_memory2_1+0xfffc2398>
   443f0:	dc000915 	stw	r16,36(sp)
   443f4:	003e0e06 	br	43c30 <__alt_mem_onchip_memory2_1+0xfffc2c30>
   443f8:	01000e44 	movi	r4,57
   443fc:	8825883a 	mov	r18,r17
   44400:	9dc00044 	addi	r23,r19,1
   44404:	99000005 	stb	r4,0(r19)
   44408:	a023883a 	mov	r17,r20
   4440c:	dc000915 	stw	r16,36(sp)
   44410:	003da406 	br	43aa4 <__alt_mem_onchip_memory2_1+0xfffc2aa4>
   44414:	d9801417 	ldw	r6,80(sp)
   44418:	d9c01517 	ldw	r7,84(sp)
   4441c:	0009883a 	mov	r4,zero
   44420:	014ff834 	movhi	r5,16352
   44424:	004c48c0 	call	4c48c <__subdf3>
   44428:	880d883a 	mov	r6,r17
   4442c:	a00f883a 	mov	r7,r20
   44430:	1009883a 	mov	r4,r2
   44434:	180b883a 	mov	r5,r3
   44438:	004bba40 	call	4bba4 <__gedf2>
   4443c:	00bc7c0e 	bge	zero,r2,43630 <__alt_mem_onchip_memory2_1+0xfffc2630>
   44440:	01000c04 	movi	r4,48
   44444:	00000106 	br	4444c <_dtoa_r+0x1580>
   44448:	102f883a 	mov	r23,r2
   4444c:	b8bfffc4 	addi	r2,r23,-1
   44450:	10c00007 	ldb	r3,0(r2)
   44454:	193ffc26 	beq	r3,r4,44448 <__alt_mem_onchip_memory2_1+0xfffc3448>
   44458:	d9801317 	ldw	r6,76(sp)
   4445c:	d9800515 	stw	r6,20(sp)
   44460:	003c4406 	br	43574 <__alt_mem_onchip_memory2_1+0xfffc2574>
   44464:	d9801317 	ldw	r6,76(sp)
   44468:	d9800515 	stw	r6,20(sp)
   4446c:	003cea06 	br	43818 <__alt_mem_onchip_memory2_1+0xfffc2818>
   44470:	dd800f17 	ldw	r22,60(sp)
   44474:	dcc01017 	ldw	r19,64(sp)
   44478:	dc801217 	ldw	r18,72(sp)
   4447c:	003c6c06 	br	43630 <__alt_mem_onchip_memory2_1+0xfffc2630>
   44480:	903e031e 	bne	r18,zero,43c90 <__alt_mem_onchip_memory2_1+0xfffc2c90>
   44484:	003ebb06 	br	43f74 <__alt_mem_onchip_memory2_1+0xfffc2f74>
   44488:	103e6c1e 	bne	r2,zero,43e3c <__alt_mem_onchip_memory2_1+0xfffc2e3c>
   4448c:	4080004c 	andi	r2,r8,1
   44490:	103e6a26 	beq	r2,zero,43e3c <__alt_mem_onchip_memory2_1+0xfffc2e3c>
   44494:	003e6606 	br	43e30 <__alt_mem_onchip_memory2_1+0xfffc2e30>
   44498:	d8c00317 	ldw	r3,12(sp)
   4449c:	00800084 	movi	r2,2
   444a0:	10c02916 	blt	r2,r3,44548 <_dtoa_r+0x167c>
   444a4:	d9000c17 	ldw	r4,48(sp)
   444a8:	003e8806 	br	43ecc <__alt_mem_onchip_memory2_1+0xfffc2ecc>
   444ac:	04000084 	movi	r16,2
   444b0:	003b9d06 	br	43328 <__alt_mem_onchip_memory2_1+0xfffc2328>
   444b4:	d9001317 	ldw	r4,76(sp)
   444b8:	d9000515 	stw	r4,20(sp)
   444bc:	003cd606 	br	43818 <__alt_mem_onchip_memory2_1+0xfffc2818>
   444c0:	d8801317 	ldw	r2,76(sp)
   444c4:	d8800515 	stw	r2,20(sp)
   444c8:	003c2a06 	br	43574 <__alt_mem_onchip_memory2_1+0xfffc2574>
   444cc:	d9800317 	ldw	r6,12(sp)
   444d0:	00800084 	movi	r2,2
   444d4:	11801516 	blt	r2,r6,4452c <_dtoa_r+0x1660>
   444d8:	d9c00c17 	ldw	r7,48(sp)
   444dc:	d9c00615 	stw	r7,24(sp)
   444e0:	003df706 	br	43cc0 <__alt_mem_onchip_memory2_1+0xfffc2cc0>
   444e4:	193d3926 	beq	r3,r4,439cc <__alt_mem_onchip_memory2_1+0xfffc29cc>
   444e8:	00c00f04 	movi	r3,60
   444ec:	1885c83a 	sub	r2,r3,r2
   444f0:	003ddf06 	br	43c70 <__alt_mem_onchip_memory2_1+0xfffc2c70>
   444f4:	e009883a 	mov	r4,fp
   444f8:	e0001115 	stw	zero,68(fp)
   444fc:	000b883a 	mov	r5,zero
   44500:	00465680 	call	46568 <_Balloc>
   44504:	d8800715 	stw	r2,28(sp)
   44508:	d8c00717 	ldw	r3,28(sp)
   4450c:	00bfffc4 	movi	r2,-1
   44510:	01000044 	movi	r4,1
   44514:	d8800c15 	stw	r2,48(sp)
   44518:	e0c01015 	stw	r3,64(fp)
   4451c:	d9000b15 	stw	r4,44(sp)
   44520:	d8800615 	stw	r2,24(sp)
   44524:	d8002215 	stw	zero,136(sp)
   44528:	003c4106 	br	43630 <__alt_mem_onchip_memory2_1+0xfffc2630>
   4452c:	d8c00c17 	ldw	r3,48(sp)
   44530:	d8c00615 	stw	r3,24(sp)
   44534:	003e7006 	br	43ef8 <__alt_mem_onchip_memory2_1+0xfffc2ef8>
   44538:	04400044 	movi	r17,1
   4453c:	003b2006 	br	431c0 <__alt_mem_onchip_memory2_1+0xfffc21c0>
   44540:	000b883a 	mov	r5,zero
   44544:	003b3d06 	br	4323c <__alt_mem_onchip_memory2_1+0xfffc223c>
   44548:	d8800c17 	ldw	r2,48(sp)
   4454c:	d8800615 	stw	r2,24(sp)
   44550:	003e6906 	br	43ef8 <__alt_mem_onchip_memory2_1+0xfffc2ef8>

00044554 <__sflush_r>:
   44554:	2880030b 	ldhu	r2,12(r5)
   44558:	defffb04 	addi	sp,sp,-20
   4455c:	dcc00315 	stw	r19,12(sp)
   44560:	dc400115 	stw	r17,4(sp)
   44564:	dfc00415 	stw	ra,16(sp)
   44568:	dc800215 	stw	r18,8(sp)
   4456c:	dc000015 	stw	r16,0(sp)
   44570:	10c0020c 	andi	r3,r2,8
   44574:	2823883a 	mov	r17,r5
   44578:	2027883a 	mov	r19,r4
   4457c:	1800311e 	bne	r3,zero,44644 <__sflush_r+0xf0>
   44580:	28c00117 	ldw	r3,4(r5)
   44584:	10820014 	ori	r2,r2,2048
   44588:	2880030d 	sth	r2,12(r5)
   4458c:	00c04b0e 	bge	zero,r3,446bc <__sflush_r+0x168>
   44590:	8a000a17 	ldw	r8,40(r17)
   44594:	40002326 	beq	r8,zero,44624 <__sflush_r+0xd0>
   44598:	9c000017 	ldw	r16,0(r19)
   4459c:	10c4000c 	andi	r3,r2,4096
   445a0:	98000015 	stw	zero,0(r19)
   445a4:	18004826 	beq	r3,zero,446c8 <__sflush_r+0x174>
   445a8:	89801417 	ldw	r6,80(r17)
   445ac:	10c0010c 	andi	r3,r2,4
   445b0:	18000626 	beq	r3,zero,445cc <__sflush_r+0x78>
   445b4:	88c00117 	ldw	r3,4(r17)
   445b8:	88800c17 	ldw	r2,48(r17)
   445bc:	30cdc83a 	sub	r6,r6,r3
   445c0:	10000226 	beq	r2,zero,445cc <__sflush_r+0x78>
   445c4:	88800f17 	ldw	r2,60(r17)
   445c8:	308dc83a 	sub	r6,r6,r2
   445cc:	89400717 	ldw	r5,28(r17)
   445d0:	000f883a 	mov	r7,zero
   445d4:	9809883a 	mov	r4,r19
   445d8:	403ee83a 	callr	r8
   445dc:	00ffffc4 	movi	r3,-1
   445e0:	10c04426 	beq	r2,r3,446f4 <__sflush_r+0x1a0>
   445e4:	88c0030b 	ldhu	r3,12(r17)
   445e8:	89000417 	ldw	r4,16(r17)
   445ec:	88000115 	stw	zero,4(r17)
   445f0:	197dffcc 	andi	r5,r3,63487
   445f4:	8940030d 	sth	r5,12(r17)
   445f8:	89000015 	stw	r4,0(r17)
   445fc:	18c4000c 	andi	r3,r3,4096
   44600:	18002c1e 	bne	r3,zero,446b4 <__sflush_r+0x160>
   44604:	89400c17 	ldw	r5,48(r17)
   44608:	9c000015 	stw	r16,0(r19)
   4460c:	28000526 	beq	r5,zero,44624 <__sflush_r+0xd0>
   44610:	88801004 	addi	r2,r17,64
   44614:	28800226 	beq	r5,r2,44620 <__sflush_r+0xcc>
   44618:	9809883a 	mov	r4,r19
   4461c:	0044cc00 	call	44cc0 <_free_r>
   44620:	88000c15 	stw	zero,48(r17)
   44624:	0005883a 	mov	r2,zero
   44628:	dfc00417 	ldw	ra,16(sp)
   4462c:	dcc00317 	ldw	r19,12(sp)
   44630:	dc800217 	ldw	r18,8(sp)
   44634:	dc400117 	ldw	r17,4(sp)
   44638:	dc000017 	ldw	r16,0(sp)
   4463c:	dec00504 	addi	sp,sp,20
   44640:	f800283a 	ret
   44644:	2c800417 	ldw	r18,16(r5)
   44648:	903ff626 	beq	r18,zero,44624 <__alt_mem_onchip_memory2_1+0xfffc3624>
   4464c:	2c000017 	ldw	r16,0(r5)
   44650:	108000cc 	andi	r2,r2,3
   44654:	2c800015 	stw	r18,0(r5)
   44658:	84a1c83a 	sub	r16,r16,r18
   4465c:	1000131e 	bne	r2,zero,446ac <__sflush_r+0x158>
   44660:	28800517 	ldw	r2,20(r5)
   44664:	88800215 	stw	r2,8(r17)
   44668:	04000316 	blt	zero,r16,44678 <__sflush_r+0x124>
   4466c:	003fed06 	br	44624 <__alt_mem_onchip_memory2_1+0xfffc3624>
   44670:	90a5883a 	add	r18,r18,r2
   44674:	043feb0e 	bge	zero,r16,44624 <__alt_mem_onchip_memory2_1+0xfffc3624>
   44678:	88800917 	ldw	r2,36(r17)
   4467c:	89400717 	ldw	r5,28(r17)
   44680:	800f883a 	mov	r7,r16
   44684:	900d883a 	mov	r6,r18
   44688:	9809883a 	mov	r4,r19
   4468c:	103ee83a 	callr	r2
   44690:	80a1c83a 	sub	r16,r16,r2
   44694:	00bff616 	blt	zero,r2,44670 <__alt_mem_onchip_memory2_1+0xfffc3670>
   44698:	88c0030b 	ldhu	r3,12(r17)
   4469c:	00bfffc4 	movi	r2,-1
   446a0:	18c01014 	ori	r3,r3,64
   446a4:	88c0030d 	sth	r3,12(r17)
   446a8:	003fdf06 	br	44628 <__alt_mem_onchip_memory2_1+0xfffc3628>
   446ac:	0005883a 	mov	r2,zero
   446b0:	003fec06 	br	44664 <__alt_mem_onchip_memory2_1+0xfffc3664>
   446b4:	88801415 	stw	r2,80(r17)
   446b8:	003fd206 	br	44604 <__alt_mem_onchip_memory2_1+0xfffc3604>
   446bc:	28c00f17 	ldw	r3,60(r5)
   446c0:	00ffb316 	blt	zero,r3,44590 <__alt_mem_onchip_memory2_1+0xfffc3590>
   446c4:	003fd706 	br	44624 <__alt_mem_onchip_memory2_1+0xfffc3624>
   446c8:	89400717 	ldw	r5,28(r17)
   446cc:	000d883a 	mov	r6,zero
   446d0:	01c00044 	movi	r7,1
   446d4:	9809883a 	mov	r4,r19
   446d8:	403ee83a 	callr	r8
   446dc:	100d883a 	mov	r6,r2
   446e0:	00bfffc4 	movi	r2,-1
   446e4:	30801426 	beq	r6,r2,44738 <__sflush_r+0x1e4>
   446e8:	8880030b 	ldhu	r2,12(r17)
   446ec:	8a000a17 	ldw	r8,40(r17)
   446f0:	003fae06 	br	445ac <__alt_mem_onchip_memory2_1+0xfffc35ac>
   446f4:	98c00017 	ldw	r3,0(r19)
   446f8:	183fba26 	beq	r3,zero,445e4 <__alt_mem_onchip_memory2_1+0xfffc35e4>
   446fc:	01000744 	movi	r4,29
   44700:	19000626 	beq	r3,r4,4471c <__sflush_r+0x1c8>
   44704:	01000584 	movi	r4,22
   44708:	19000426 	beq	r3,r4,4471c <__sflush_r+0x1c8>
   4470c:	88c0030b 	ldhu	r3,12(r17)
   44710:	18c01014 	ori	r3,r3,64
   44714:	88c0030d 	sth	r3,12(r17)
   44718:	003fc306 	br	44628 <__alt_mem_onchip_memory2_1+0xfffc3628>
   4471c:	8880030b 	ldhu	r2,12(r17)
   44720:	88c00417 	ldw	r3,16(r17)
   44724:	88000115 	stw	zero,4(r17)
   44728:	10bdffcc 	andi	r2,r2,63487
   4472c:	8880030d 	sth	r2,12(r17)
   44730:	88c00015 	stw	r3,0(r17)
   44734:	003fb306 	br	44604 <__alt_mem_onchip_memory2_1+0xfffc3604>
   44738:	98800017 	ldw	r2,0(r19)
   4473c:	103fea26 	beq	r2,zero,446e8 <__alt_mem_onchip_memory2_1+0xfffc36e8>
   44740:	00c00744 	movi	r3,29
   44744:	10c00226 	beq	r2,r3,44750 <__sflush_r+0x1fc>
   44748:	00c00584 	movi	r3,22
   4474c:	10c0031e 	bne	r2,r3,4475c <__sflush_r+0x208>
   44750:	9c000015 	stw	r16,0(r19)
   44754:	0005883a 	mov	r2,zero
   44758:	003fb306 	br	44628 <__alt_mem_onchip_memory2_1+0xfffc3628>
   4475c:	88c0030b 	ldhu	r3,12(r17)
   44760:	3005883a 	mov	r2,r6
   44764:	18c01014 	ori	r3,r3,64
   44768:	88c0030d 	sth	r3,12(r17)
   4476c:	003fae06 	br	44628 <__alt_mem_onchip_memory2_1+0xfffc3628>

00044770 <_fflush_r>:
   44770:	defffd04 	addi	sp,sp,-12
   44774:	dc000115 	stw	r16,4(sp)
   44778:	dfc00215 	stw	ra,8(sp)
   4477c:	2021883a 	mov	r16,r4
   44780:	20000226 	beq	r4,zero,4478c <_fflush_r+0x1c>
   44784:	20800e17 	ldw	r2,56(r4)
   44788:	10000c26 	beq	r2,zero,447bc <_fflush_r+0x4c>
   4478c:	2880030f 	ldh	r2,12(r5)
   44790:	1000051e 	bne	r2,zero,447a8 <_fflush_r+0x38>
   44794:	0005883a 	mov	r2,zero
   44798:	dfc00217 	ldw	ra,8(sp)
   4479c:	dc000117 	ldw	r16,4(sp)
   447a0:	dec00304 	addi	sp,sp,12
   447a4:	f800283a 	ret
   447a8:	8009883a 	mov	r4,r16
   447ac:	dfc00217 	ldw	ra,8(sp)
   447b0:	dc000117 	ldw	r16,4(sp)
   447b4:	dec00304 	addi	sp,sp,12
   447b8:	00445541 	jmpi	44554 <__sflush_r>
   447bc:	d9400015 	stw	r5,0(sp)
   447c0:	0044b4c0 	call	44b4c <__sinit>
   447c4:	d9400017 	ldw	r5,0(sp)
   447c8:	003ff006 	br	4478c <__alt_mem_onchip_memory2_1+0xfffc378c>

000447cc <fflush>:
   447cc:	20000526 	beq	r4,zero,447e4 <fflush+0x18>
   447d0:	00800174 	movhi	r2,5
   447d4:	1085ee04 	addi	r2,r2,6072
   447d8:	200b883a 	mov	r5,r4
   447dc:	11000017 	ldw	r4,0(r2)
   447e0:	00447701 	jmpi	44770 <_fflush_r>
   447e4:	00800174 	movhi	r2,5
   447e8:	1085ed04 	addi	r2,r2,6068
   447ec:	11000017 	ldw	r4,0(r2)
   447f0:	01400134 	movhi	r5,4
   447f4:	2951dc04 	addi	r5,r5,18288
   447f8:	00455501 	jmpi	45550 <_fwalk_reent>

000447fc <__fp_unlock>:
   447fc:	0005883a 	mov	r2,zero
   44800:	f800283a 	ret

00044804 <_cleanup_r>:
   44804:	01400174 	movhi	r5,5
   44808:	29655a04 	addi	r5,r5,-27288
   4480c:	00455501 	jmpi	45550 <_fwalk_reent>

00044810 <__sinit.part.1>:
   44810:	defff704 	addi	sp,sp,-36
   44814:	00c00134 	movhi	r3,4
   44818:	dfc00815 	stw	ra,32(sp)
   4481c:	ddc00715 	stw	r23,28(sp)
   44820:	dd800615 	stw	r22,24(sp)
   44824:	dd400515 	stw	r21,20(sp)
   44828:	dd000415 	stw	r20,16(sp)
   4482c:	dcc00315 	stw	r19,12(sp)
   44830:	dc800215 	stw	r18,8(sp)
   44834:	dc400115 	stw	r17,4(sp)
   44838:	dc000015 	stw	r16,0(sp)
   4483c:	18d20104 	addi	r3,r3,18436
   44840:	24000117 	ldw	r16,4(r4)
   44844:	20c00f15 	stw	r3,60(r4)
   44848:	2080bb04 	addi	r2,r4,748
   4484c:	00c000c4 	movi	r3,3
   44850:	20c0b915 	stw	r3,740(r4)
   44854:	2080ba15 	stw	r2,744(r4)
   44858:	2000b815 	stw	zero,736(r4)
   4485c:	05c00204 	movi	r23,8
   44860:	00800104 	movi	r2,4
   44864:	2025883a 	mov	r18,r4
   44868:	b80d883a 	mov	r6,r23
   4486c:	81001704 	addi	r4,r16,92
   44870:	000b883a 	mov	r5,zero
   44874:	80000015 	stw	zero,0(r16)
   44878:	80000115 	stw	zero,4(r16)
   4487c:	80000215 	stw	zero,8(r16)
   44880:	8080030d 	sth	r2,12(r16)
   44884:	80001915 	stw	zero,100(r16)
   44888:	8000038d 	sth	zero,14(r16)
   4488c:	80000415 	stw	zero,16(r16)
   44890:	80000515 	stw	zero,20(r16)
   44894:	80000615 	stw	zero,24(r16)
   44898:	00464400 	call	46440 <memset>
   4489c:	05800134 	movhi	r22,4
   448a0:	94400217 	ldw	r17,8(r18)
   448a4:	05400134 	movhi	r21,4
   448a8:	05000134 	movhi	r20,4
   448ac:	04c00134 	movhi	r19,4
   448b0:	b59ee404 	addi	r22,r22,31632
   448b4:	ad5efb04 	addi	r21,r21,31724
   448b8:	a51f1a04 	addi	r20,r20,31848
   448bc:	9cdf3104 	addi	r19,r19,31940
   448c0:	85800815 	stw	r22,32(r16)
   448c4:	85400915 	stw	r21,36(r16)
   448c8:	85000a15 	stw	r20,40(r16)
   448cc:	84c00b15 	stw	r19,44(r16)
   448d0:	84000715 	stw	r16,28(r16)
   448d4:	00800284 	movi	r2,10
   448d8:	8880030d 	sth	r2,12(r17)
   448dc:	00800044 	movi	r2,1
   448e0:	b80d883a 	mov	r6,r23
   448e4:	89001704 	addi	r4,r17,92
   448e8:	000b883a 	mov	r5,zero
   448ec:	88000015 	stw	zero,0(r17)
   448f0:	88000115 	stw	zero,4(r17)
   448f4:	88000215 	stw	zero,8(r17)
   448f8:	88001915 	stw	zero,100(r17)
   448fc:	8880038d 	sth	r2,14(r17)
   44900:	88000415 	stw	zero,16(r17)
   44904:	88000515 	stw	zero,20(r17)
   44908:	88000615 	stw	zero,24(r17)
   4490c:	00464400 	call	46440 <memset>
   44910:	94000317 	ldw	r16,12(r18)
   44914:	00800484 	movi	r2,18
   44918:	8c400715 	stw	r17,28(r17)
   4491c:	8d800815 	stw	r22,32(r17)
   44920:	8d400915 	stw	r21,36(r17)
   44924:	8d000a15 	stw	r20,40(r17)
   44928:	8cc00b15 	stw	r19,44(r17)
   4492c:	8080030d 	sth	r2,12(r16)
   44930:	00800084 	movi	r2,2
   44934:	80000015 	stw	zero,0(r16)
   44938:	80000115 	stw	zero,4(r16)
   4493c:	80000215 	stw	zero,8(r16)
   44940:	80001915 	stw	zero,100(r16)
   44944:	8080038d 	sth	r2,14(r16)
   44948:	80000415 	stw	zero,16(r16)
   4494c:	80000515 	stw	zero,20(r16)
   44950:	80000615 	stw	zero,24(r16)
   44954:	b80d883a 	mov	r6,r23
   44958:	000b883a 	mov	r5,zero
   4495c:	81001704 	addi	r4,r16,92
   44960:	00464400 	call	46440 <memset>
   44964:	00800044 	movi	r2,1
   44968:	84000715 	stw	r16,28(r16)
   4496c:	85800815 	stw	r22,32(r16)
   44970:	85400915 	stw	r21,36(r16)
   44974:	85000a15 	stw	r20,40(r16)
   44978:	84c00b15 	stw	r19,44(r16)
   4497c:	90800e15 	stw	r2,56(r18)
   44980:	dfc00817 	ldw	ra,32(sp)
   44984:	ddc00717 	ldw	r23,28(sp)
   44988:	dd800617 	ldw	r22,24(sp)
   4498c:	dd400517 	ldw	r21,20(sp)
   44990:	dd000417 	ldw	r20,16(sp)
   44994:	dcc00317 	ldw	r19,12(sp)
   44998:	dc800217 	ldw	r18,8(sp)
   4499c:	dc400117 	ldw	r17,4(sp)
   449a0:	dc000017 	ldw	r16,0(sp)
   449a4:	dec00904 	addi	sp,sp,36
   449a8:	f800283a 	ret

000449ac <__fp_lock>:
   449ac:	0005883a 	mov	r2,zero
   449b0:	f800283a 	ret

000449b4 <__sfmoreglue>:
   449b4:	defffc04 	addi	sp,sp,-16
   449b8:	dc400115 	stw	r17,4(sp)
   449bc:	2c7fffc4 	addi	r17,r5,-1
   449c0:	8c401a24 	muli	r17,r17,104
   449c4:	dc800215 	stw	r18,8(sp)
   449c8:	2825883a 	mov	r18,r5
   449cc:	89401d04 	addi	r5,r17,116
   449d0:	dc000015 	stw	r16,0(sp)
   449d4:	dfc00315 	stw	ra,12(sp)
   449d8:	00458ac0 	call	458ac <_malloc_r>
   449dc:	1021883a 	mov	r16,r2
   449e0:	10000726 	beq	r2,zero,44a00 <__sfmoreglue+0x4c>
   449e4:	11000304 	addi	r4,r2,12
   449e8:	10000015 	stw	zero,0(r2)
   449ec:	14800115 	stw	r18,4(r2)
   449f0:	11000215 	stw	r4,8(r2)
   449f4:	89801a04 	addi	r6,r17,104
   449f8:	000b883a 	mov	r5,zero
   449fc:	00464400 	call	46440 <memset>
   44a00:	8005883a 	mov	r2,r16
   44a04:	dfc00317 	ldw	ra,12(sp)
   44a08:	dc800217 	ldw	r18,8(sp)
   44a0c:	dc400117 	ldw	r17,4(sp)
   44a10:	dc000017 	ldw	r16,0(sp)
   44a14:	dec00404 	addi	sp,sp,16
   44a18:	f800283a 	ret

00044a1c <__sfp>:
   44a1c:	defffb04 	addi	sp,sp,-20
   44a20:	dc000015 	stw	r16,0(sp)
   44a24:	04000174 	movhi	r16,5
   44a28:	8405ed04 	addi	r16,r16,6068
   44a2c:	dcc00315 	stw	r19,12(sp)
   44a30:	2027883a 	mov	r19,r4
   44a34:	81000017 	ldw	r4,0(r16)
   44a38:	dfc00415 	stw	ra,16(sp)
   44a3c:	dc800215 	stw	r18,8(sp)
   44a40:	20800e17 	ldw	r2,56(r4)
   44a44:	dc400115 	stw	r17,4(sp)
   44a48:	1000021e 	bne	r2,zero,44a54 <__sfp+0x38>
   44a4c:	00448100 	call	44810 <__sinit.part.1>
   44a50:	81000017 	ldw	r4,0(r16)
   44a54:	2480b804 	addi	r18,r4,736
   44a58:	047fffc4 	movi	r17,-1
   44a5c:	91000117 	ldw	r4,4(r18)
   44a60:	94000217 	ldw	r16,8(r18)
   44a64:	213fffc4 	addi	r4,r4,-1
   44a68:	20000a16 	blt	r4,zero,44a94 <__sfp+0x78>
   44a6c:	8080030f 	ldh	r2,12(r16)
   44a70:	10000c26 	beq	r2,zero,44aa4 <__sfp+0x88>
   44a74:	80c01d04 	addi	r3,r16,116
   44a78:	00000206 	br	44a84 <__sfp+0x68>
   44a7c:	18bfe60f 	ldh	r2,-104(r3)
   44a80:	10000826 	beq	r2,zero,44aa4 <__sfp+0x88>
   44a84:	213fffc4 	addi	r4,r4,-1
   44a88:	1c3ffd04 	addi	r16,r3,-12
   44a8c:	18c01a04 	addi	r3,r3,104
   44a90:	247ffa1e 	bne	r4,r17,44a7c <__alt_mem_onchip_memory2_1+0xfffc3a7c>
   44a94:	90800017 	ldw	r2,0(r18)
   44a98:	10001d26 	beq	r2,zero,44b10 <__sfp+0xf4>
   44a9c:	1025883a 	mov	r18,r2
   44aa0:	003fee06 	br	44a5c <__alt_mem_onchip_memory2_1+0xfffc3a5c>
   44aa4:	00bfffc4 	movi	r2,-1
   44aa8:	8080038d 	sth	r2,14(r16)
   44aac:	00800044 	movi	r2,1
   44ab0:	8080030d 	sth	r2,12(r16)
   44ab4:	80001915 	stw	zero,100(r16)
   44ab8:	80000015 	stw	zero,0(r16)
   44abc:	80000215 	stw	zero,8(r16)
   44ac0:	80000115 	stw	zero,4(r16)
   44ac4:	80000415 	stw	zero,16(r16)
   44ac8:	80000515 	stw	zero,20(r16)
   44acc:	80000615 	stw	zero,24(r16)
   44ad0:	01800204 	movi	r6,8
   44ad4:	000b883a 	mov	r5,zero
   44ad8:	81001704 	addi	r4,r16,92
   44adc:	00464400 	call	46440 <memset>
   44ae0:	8005883a 	mov	r2,r16
   44ae4:	80000c15 	stw	zero,48(r16)
   44ae8:	80000d15 	stw	zero,52(r16)
   44aec:	80001115 	stw	zero,68(r16)
   44af0:	80001215 	stw	zero,72(r16)
   44af4:	dfc00417 	ldw	ra,16(sp)
   44af8:	dcc00317 	ldw	r19,12(sp)
   44afc:	dc800217 	ldw	r18,8(sp)
   44b00:	dc400117 	ldw	r17,4(sp)
   44b04:	dc000017 	ldw	r16,0(sp)
   44b08:	dec00504 	addi	sp,sp,20
   44b0c:	f800283a 	ret
   44b10:	01400104 	movi	r5,4
   44b14:	9809883a 	mov	r4,r19
   44b18:	00449b40 	call	449b4 <__sfmoreglue>
   44b1c:	90800015 	stw	r2,0(r18)
   44b20:	103fde1e 	bne	r2,zero,44a9c <__alt_mem_onchip_memory2_1+0xfffc3a9c>
   44b24:	00800304 	movi	r2,12
   44b28:	98800015 	stw	r2,0(r19)
   44b2c:	0005883a 	mov	r2,zero
   44b30:	003ff006 	br	44af4 <__alt_mem_onchip_memory2_1+0xfffc3af4>

00044b34 <_cleanup>:
   44b34:	00800174 	movhi	r2,5
   44b38:	1085ed04 	addi	r2,r2,6068
   44b3c:	11000017 	ldw	r4,0(r2)
   44b40:	01400174 	movhi	r5,5
   44b44:	29655a04 	addi	r5,r5,-27288
   44b48:	00455501 	jmpi	45550 <_fwalk_reent>

00044b4c <__sinit>:
   44b4c:	20800e17 	ldw	r2,56(r4)
   44b50:	10000126 	beq	r2,zero,44b58 <__sinit+0xc>
   44b54:	f800283a 	ret
   44b58:	00448101 	jmpi	44810 <__sinit.part.1>

00044b5c <__sfp_lock_acquire>:
   44b5c:	f800283a 	ret

00044b60 <__sfp_lock_release>:
   44b60:	f800283a 	ret

00044b64 <__sinit_lock_acquire>:
   44b64:	f800283a 	ret

00044b68 <__sinit_lock_release>:
   44b68:	f800283a 	ret

00044b6c <__fp_lock_all>:
   44b6c:	00800174 	movhi	r2,5
   44b70:	1085ee04 	addi	r2,r2,6072
   44b74:	11000017 	ldw	r4,0(r2)
   44b78:	01400134 	movhi	r5,4
   44b7c:	29526b04 	addi	r5,r5,18860
   44b80:	004548c1 	jmpi	4548c <_fwalk>

00044b84 <__fp_unlock_all>:
   44b84:	00800174 	movhi	r2,5
   44b88:	1085ee04 	addi	r2,r2,6072
   44b8c:	11000017 	ldw	r4,0(r2)
   44b90:	01400134 	movhi	r5,4
   44b94:	2951ff04 	addi	r5,r5,18428
   44b98:	004548c1 	jmpi	4548c <_fwalk>

00044b9c <_malloc_trim_r>:
   44b9c:	defffb04 	addi	sp,sp,-20
   44ba0:	dcc00315 	stw	r19,12(sp)
   44ba4:	04c00174 	movhi	r19,5
   44ba8:	dc800215 	stw	r18,8(sp)
   44bac:	dc400115 	stw	r17,4(sp)
   44bb0:	dc000015 	stw	r16,0(sp)
   44bb4:	dfc00415 	stw	ra,16(sp)
   44bb8:	2821883a 	mov	r16,r5
   44bbc:	9cc06904 	addi	r19,r19,420
   44bc0:	2025883a 	mov	r18,r4
   44bc4:	004d80c0 	call	4d80c <__malloc_lock>
   44bc8:	98800217 	ldw	r2,8(r19)
   44bcc:	14400117 	ldw	r17,4(r2)
   44bd0:	00bfff04 	movi	r2,-4
   44bd4:	88a2703a 	and	r17,r17,r2
   44bd8:	8c21c83a 	sub	r16,r17,r16
   44bdc:	8403fbc4 	addi	r16,r16,4079
   44be0:	8020d33a 	srli	r16,r16,12
   44be4:	0083ffc4 	movi	r2,4095
   44be8:	843fffc4 	addi	r16,r16,-1
   44bec:	8020933a 	slli	r16,r16,12
   44bf0:	1400060e 	bge	r2,r16,44c0c <_malloc_trim_r+0x70>
   44bf4:	000b883a 	mov	r5,zero
   44bf8:	9009883a 	mov	r4,r18
   44bfc:	0047b3c0 	call	47b3c <_sbrk_r>
   44c00:	98c00217 	ldw	r3,8(r19)
   44c04:	1c47883a 	add	r3,r3,r17
   44c08:	10c00a26 	beq	r2,r3,44c34 <_malloc_trim_r+0x98>
   44c0c:	9009883a 	mov	r4,r18
   44c10:	004d8300 	call	4d830 <__malloc_unlock>
   44c14:	0005883a 	mov	r2,zero
   44c18:	dfc00417 	ldw	ra,16(sp)
   44c1c:	dcc00317 	ldw	r19,12(sp)
   44c20:	dc800217 	ldw	r18,8(sp)
   44c24:	dc400117 	ldw	r17,4(sp)
   44c28:	dc000017 	ldw	r16,0(sp)
   44c2c:	dec00504 	addi	sp,sp,20
   44c30:	f800283a 	ret
   44c34:	040bc83a 	sub	r5,zero,r16
   44c38:	9009883a 	mov	r4,r18
   44c3c:	0047b3c0 	call	47b3c <_sbrk_r>
   44c40:	00ffffc4 	movi	r3,-1
   44c44:	10c00d26 	beq	r2,r3,44c7c <_malloc_trim_r+0xe0>
   44c48:	00c00174 	movhi	r3,5
   44c4c:	18ccc904 	addi	r3,r3,13092
   44c50:	18800017 	ldw	r2,0(r3)
   44c54:	99000217 	ldw	r4,8(r19)
   44c58:	8c23c83a 	sub	r17,r17,r16
   44c5c:	8c400054 	ori	r17,r17,1
   44c60:	1421c83a 	sub	r16,r2,r16
   44c64:	24400115 	stw	r17,4(r4)
   44c68:	9009883a 	mov	r4,r18
   44c6c:	1c000015 	stw	r16,0(r3)
   44c70:	004d8300 	call	4d830 <__malloc_unlock>
   44c74:	00800044 	movi	r2,1
   44c78:	003fe706 	br	44c18 <__alt_mem_onchip_memory2_1+0xfffc3c18>
   44c7c:	000b883a 	mov	r5,zero
   44c80:	9009883a 	mov	r4,r18
   44c84:	0047b3c0 	call	47b3c <_sbrk_r>
   44c88:	99000217 	ldw	r4,8(r19)
   44c8c:	014003c4 	movi	r5,15
   44c90:	1107c83a 	sub	r3,r2,r4
   44c94:	28ffdd0e 	bge	r5,r3,44c0c <__alt_mem_onchip_memory2_1+0xfffc3c0c>
   44c98:	01400174 	movhi	r5,5
   44c9c:	2945f004 	addi	r5,r5,6080
   44ca0:	29400017 	ldw	r5,0(r5)
   44ca4:	18c00054 	ori	r3,r3,1
   44ca8:	20c00115 	stw	r3,4(r4)
   44cac:	00c00174 	movhi	r3,5
   44cb0:	1145c83a 	sub	r2,r2,r5
   44cb4:	18ccc904 	addi	r3,r3,13092
   44cb8:	18800015 	stw	r2,0(r3)
   44cbc:	003fd306 	br	44c0c <__alt_mem_onchip_memory2_1+0xfffc3c0c>

00044cc0 <_free_r>:
   44cc0:	28004126 	beq	r5,zero,44dc8 <_free_r+0x108>
   44cc4:	defffd04 	addi	sp,sp,-12
   44cc8:	dc400115 	stw	r17,4(sp)
   44ccc:	dc000015 	stw	r16,0(sp)
   44cd0:	2023883a 	mov	r17,r4
   44cd4:	2821883a 	mov	r16,r5
   44cd8:	dfc00215 	stw	ra,8(sp)
   44cdc:	004d80c0 	call	4d80c <__malloc_lock>
   44ce0:	81ffff17 	ldw	r7,-4(r16)
   44ce4:	00bfff84 	movi	r2,-2
   44ce8:	01000174 	movhi	r4,5
   44cec:	81bffe04 	addi	r6,r16,-8
   44cf0:	3884703a 	and	r2,r7,r2
   44cf4:	21006904 	addi	r4,r4,420
   44cf8:	308b883a 	add	r5,r6,r2
   44cfc:	2a400117 	ldw	r9,4(r5)
   44d00:	22000217 	ldw	r8,8(r4)
   44d04:	00ffff04 	movi	r3,-4
   44d08:	48c6703a 	and	r3,r9,r3
   44d0c:	2a005726 	beq	r5,r8,44e6c <_free_r+0x1ac>
   44d10:	28c00115 	stw	r3,4(r5)
   44d14:	39c0004c 	andi	r7,r7,1
   44d18:	3800091e 	bne	r7,zero,44d40 <_free_r+0x80>
   44d1c:	823ffe17 	ldw	r8,-8(r16)
   44d20:	22400204 	addi	r9,r4,8
   44d24:	320dc83a 	sub	r6,r6,r8
   44d28:	31c00217 	ldw	r7,8(r6)
   44d2c:	1205883a 	add	r2,r2,r8
   44d30:	3a406526 	beq	r7,r9,44ec8 <_free_r+0x208>
   44d34:	32000317 	ldw	r8,12(r6)
   44d38:	3a000315 	stw	r8,12(r7)
   44d3c:	41c00215 	stw	r7,8(r8)
   44d40:	28cf883a 	add	r7,r5,r3
   44d44:	39c00117 	ldw	r7,4(r7)
   44d48:	39c0004c 	andi	r7,r7,1
   44d4c:	38003a26 	beq	r7,zero,44e38 <_free_r+0x178>
   44d50:	10c00054 	ori	r3,r2,1
   44d54:	30c00115 	stw	r3,4(r6)
   44d58:	3087883a 	add	r3,r6,r2
   44d5c:	18800015 	stw	r2,0(r3)
   44d60:	00c07fc4 	movi	r3,511
   44d64:	18801936 	bltu	r3,r2,44dcc <_free_r+0x10c>
   44d68:	1004d0fa 	srli	r2,r2,3
   44d6c:	01c00044 	movi	r7,1
   44d70:	21400117 	ldw	r5,4(r4)
   44d74:	10c00044 	addi	r3,r2,1
   44d78:	18c7883a 	add	r3,r3,r3
   44d7c:	1005d0ba 	srai	r2,r2,2
   44d80:	18c7883a 	add	r3,r3,r3
   44d84:	18c7883a 	add	r3,r3,r3
   44d88:	1907883a 	add	r3,r3,r4
   44d8c:	3884983a 	sll	r2,r7,r2
   44d90:	19c00017 	ldw	r7,0(r3)
   44d94:	1a3ffe04 	addi	r8,r3,-8
   44d98:	1144b03a 	or	r2,r2,r5
   44d9c:	32000315 	stw	r8,12(r6)
   44da0:	31c00215 	stw	r7,8(r6)
   44da4:	20800115 	stw	r2,4(r4)
   44da8:	19800015 	stw	r6,0(r3)
   44dac:	39800315 	stw	r6,12(r7)
   44db0:	8809883a 	mov	r4,r17
   44db4:	dfc00217 	ldw	ra,8(sp)
   44db8:	dc400117 	ldw	r17,4(sp)
   44dbc:	dc000017 	ldw	r16,0(sp)
   44dc0:	dec00304 	addi	sp,sp,12
   44dc4:	004d8301 	jmpi	4d830 <__malloc_unlock>
   44dc8:	f800283a 	ret
   44dcc:	100ad27a 	srli	r5,r2,9
   44dd0:	00c00104 	movi	r3,4
   44dd4:	19404a36 	bltu	r3,r5,44f00 <_free_r+0x240>
   44dd8:	100ad1ba 	srli	r5,r2,6
   44ddc:	28c00e44 	addi	r3,r5,57
   44de0:	18c7883a 	add	r3,r3,r3
   44de4:	29400e04 	addi	r5,r5,56
   44de8:	18c7883a 	add	r3,r3,r3
   44dec:	18c7883a 	add	r3,r3,r3
   44df0:	1909883a 	add	r4,r3,r4
   44df4:	20c00017 	ldw	r3,0(r4)
   44df8:	01c00174 	movhi	r7,5
   44dfc:	213ffe04 	addi	r4,r4,-8
   44e00:	39c06904 	addi	r7,r7,420
   44e04:	20c04426 	beq	r4,r3,44f18 <_free_r+0x258>
   44e08:	01ffff04 	movi	r7,-4
   44e0c:	19400117 	ldw	r5,4(r3)
   44e10:	29ca703a 	and	r5,r5,r7
   44e14:	1140022e 	bgeu	r2,r5,44e20 <_free_r+0x160>
   44e18:	18c00217 	ldw	r3,8(r3)
   44e1c:	20fffb1e 	bne	r4,r3,44e0c <__alt_mem_onchip_memory2_1+0xfffc3e0c>
   44e20:	19000317 	ldw	r4,12(r3)
   44e24:	31000315 	stw	r4,12(r6)
   44e28:	30c00215 	stw	r3,8(r6)
   44e2c:	21800215 	stw	r6,8(r4)
   44e30:	19800315 	stw	r6,12(r3)
   44e34:	003fde06 	br	44db0 <__alt_mem_onchip_memory2_1+0xfffc3db0>
   44e38:	29c00217 	ldw	r7,8(r5)
   44e3c:	10c5883a 	add	r2,r2,r3
   44e40:	00c00174 	movhi	r3,5
   44e44:	18c06b04 	addi	r3,r3,428
   44e48:	38c03b26 	beq	r7,r3,44f38 <_free_r+0x278>
   44e4c:	2a000317 	ldw	r8,12(r5)
   44e50:	11400054 	ori	r5,r2,1
   44e54:	3087883a 	add	r3,r6,r2
   44e58:	3a000315 	stw	r8,12(r7)
   44e5c:	41c00215 	stw	r7,8(r8)
   44e60:	31400115 	stw	r5,4(r6)
   44e64:	18800015 	stw	r2,0(r3)
   44e68:	003fbd06 	br	44d60 <__alt_mem_onchip_memory2_1+0xfffc3d60>
   44e6c:	39c0004c 	andi	r7,r7,1
   44e70:	10c5883a 	add	r2,r2,r3
   44e74:	3800071e 	bne	r7,zero,44e94 <_free_r+0x1d4>
   44e78:	81fffe17 	ldw	r7,-8(r16)
   44e7c:	31cdc83a 	sub	r6,r6,r7
   44e80:	30c00317 	ldw	r3,12(r6)
   44e84:	31400217 	ldw	r5,8(r6)
   44e88:	11c5883a 	add	r2,r2,r7
   44e8c:	28c00315 	stw	r3,12(r5)
   44e90:	19400215 	stw	r5,8(r3)
   44e94:	10c00054 	ori	r3,r2,1
   44e98:	30c00115 	stw	r3,4(r6)
   44e9c:	00c00174 	movhi	r3,5
   44ea0:	18c5f104 	addi	r3,r3,6084
   44ea4:	18c00017 	ldw	r3,0(r3)
   44ea8:	21800215 	stw	r6,8(r4)
   44eac:	10ffc036 	bltu	r2,r3,44db0 <__alt_mem_onchip_memory2_1+0xfffc3db0>
   44eb0:	00800174 	movhi	r2,5
   44eb4:	108cbe04 	addi	r2,r2,13048
   44eb8:	11400017 	ldw	r5,0(r2)
   44ebc:	8809883a 	mov	r4,r17
   44ec0:	0044b9c0 	call	44b9c <_malloc_trim_r>
   44ec4:	003fba06 	br	44db0 <__alt_mem_onchip_memory2_1+0xfffc3db0>
   44ec8:	28c9883a 	add	r4,r5,r3
   44ecc:	21000117 	ldw	r4,4(r4)
   44ed0:	2100004c 	andi	r4,r4,1
   44ed4:	2000391e 	bne	r4,zero,44fbc <_free_r+0x2fc>
   44ed8:	29c00217 	ldw	r7,8(r5)
   44edc:	29000317 	ldw	r4,12(r5)
   44ee0:	1885883a 	add	r2,r3,r2
   44ee4:	10c00054 	ori	r3,r2,1
   44ee8:	39000315 	stw	r4,12(r7)
   44eec:	21c00215 	stw	r7,8(r4)
   44ef0:	30c00115 	stw	r3,4(r6)
   44ef4:	308d883a 	add	r6,r6,r2
   44ef8:	30800015 	stw	r2,0(r6)
   44efc:	003fac06 	br	44db0 <__alt_mem_onchip_memory2_1+0xfffc3db0>
   44f00:	00c00504 	movi	r3,20
   44f04:	19401536 	bltu	r3,r5,44f5c <_free_r+0x29c>
   44f08:	28c01704 	addi	r3,r5,92
   44f0c:	18c7883a 	add	r3,r3,r3
   44f10:	294016c4 	addi	r5,r5,91
   44f14:	003fb406 	br	44de8 <__alt_mem_onchip_memory2_1+0xfffc3de8>
   44f18:	280bd0ba 	srai	r5,r5,2
   44f1c:	00c00044 	movi	r3,1
   44f20:	38800117 	ldw	r2,4(r7)
   44f24:	194a983a 	sll	r5,r3,r5
   44f28:	2007883a 	mov	r3,r4
   44f2c:	2884b03a 	or	r2,r5,r2
   44f30:	38800115 	stw	r2,4(r7)
   44f34:	003fbb06 	br	44e24 <__alt_mem_onchip_memory2_1+0xfffc3e24>
   44f38:	21800515 	stw	r6,20(r4)
   44f3c:	21800415 	stw	r6,16(r4)
   44f40:	10c00054 	ori	r3,r2,1
   44f44:	31c00315 	stw	r7,12(r6)
   44f48:	31c00215 	stw	r7,8(r6)
   44f4c:	30c00115 	stw	r3,4(r6)
   44f50:	308d883a 	add	r6,r6,r2
   44f54:	30800015 	stw	r2,0(r6)
   44f58:	003f9506 	br	44db0 <__alt_mem_onchip_memory2_1+0xfffc3db0>
   44f5c:	00c01504 	movi	r3,84
   44f60:	19400536 	bltu	r3,r5,44f78 <_free_r+0x2b8>
   44f64:	100ad33a 	srli	r5,r2,12
   44f68:	28c01bc4 	addi	r3,r5,111
   44f6c:	18c7883a 	add	r3,r3,r3
   44f70:	29401b84 	addi	r5,r5,110
   44f74:	003f9c06 	br	44de8 <__alt_mem_onchip_memory2_1+0xfffc3de8>
   44f78:	00c05504 	movi	r3,340
   44f7c:	19400536 	bltu	r3,r5,44f94 <_free_r+0x2d4>
   44f80:	100ad3fa 	srli	r5,r2,15
   44f84:	28c01e04 	addi	r3,r5,120
   44f88:	18c7883a 	add	r3,r3,r3
   44f8c:	29401dc4 	addi	r5,r5,119
   44f90:	003f9506 	br	44de8 <__alt_mem_onchip_memory2_1+0xfffc3de8>
   44f94:	00c15504 	movi	r3,1364
   44f98:	19400536 	bltu	r3,r5,44fb0 <_free_r+0x2f0>
   44f9c:	100ad4ba 	srli	r5,r2,18
   44fa0:	28c01f44 	addi	r3,r5,125
   44fa4:	18c7883a 	add	r3,r3,r3
   44fa8:	29401f04 	addi	r5,r5,124
   44fac:	003f8e06 	br	44de8 <__alt_mem_onchip_memory2_1+0xfffc3de8>
   44fb0:	00c03f84 	movi	r3,254
   44fb4:	01401f84 	movi	r5,126
   44fb8:	003f8b06 	br	44de8 <__alt_mem_onchip_memory2_1+0xfffc3de8>
   44fbc:	10c00054 	ori	r3,r2,1
   44fc0:	30c00115 	stw	r3,4(r6)
   44fc4:	308d883a 	add	r6,r6,r2
   44fc8:	30800015 	stw	r2,0(r6)
   44fcc:	003f7806 	br	44db0 <__alt_mem_onchip_memory2_1+0xfffc3db0>

00044fd0 <__sfvwrite_r>:
   44fd0:	30800217 	ldw	r2,8(r6)
   44fd4:	10006726 	beq	r2,zero,45174 <__sfvwrite_r+0x1a4>
   44fd8:	28c0030b 	ldhu	r3,12(r5)
   44fdc:	defff404 	addi	sp,sp,-48
   44fe0:	dd400715 	stw	r21,28(sp)
   44fe4:	dd000615 	stw	r20,24(sp)
   44fe8:	dc000215 	stw	r16,8(sp)
   44fec:	dfc00b15 	stw	ra,44(sp)
   44ff0:	df000a15 	stw	fp,40(sp)
   44ff4:	ddc00915 	stw	r23,36(sp)
   44ff8:	dd800815 	stw	r22,32(sp)
   44ffc:	dcc00515 	stw	r19,20(sp)
   45000:	dc800415 	stw	r18,16(sp)
   45004:	dc400315 	stw	r17,12(sp)
   45008:	1880020c 	andi	r2,r3,8
   4500c:	2821883a 	mov	r16,r5
   45010:	202b883a 	mov	r21,r4
   45014:	3029883a 	mov	r20,r6
   45018:	10002726 	beq	r2,zero,450b8 <__sfvwrite_r+0xe8>
   4501c:	28800417 	ldw	r2,16(r5)
   45020:	10002526 	beq	r2,zero,450b8 <__sfvwrite_r+0xe8>
   45024:	1880008c 	andi	r2,r3,2
   45028:	a4400017 	ldw	r17,0(r20)
   4502c:	10002a26 	beq	r2,zero,450d8 <__sfvwrite_r+0x108>
   45030:	05a00034 	movhi	r22,32768
   45034:	0027883a 	mov	r19,zero
   45038:	0025883a 	mov	r18,zero
   4503c:	b5bf0004 	addi	r22,r22,-1024
   45040:	980d883a 	mov	r6,r19
   45044:	a809883a 	mov	r4,r21
   45048:	90004626 	beq	r18,zero,45164 <__sfvwrite_r+0x194>
   4504c:	900f883a 	mov	r7,r18
   45050:	b480022e 	bgeu	r22,r18,4505c <__sfvwrite_r+0x8c>
   45054:	01e00034 	movhi	r7,32768
   45058:	39ff0004 	addi	r7,r7,-1024
   4505c:	80800917 	ldw	r2,36(r16)
   45060:	81400717 	ldw	r5,28(r16)
   45064:	103ee83a 	callr	r2
   45068:	0080570e 	bge	zero,r2,451c8 <__sfvwrite_r+0x1f8>
   4506c:	a0c00217 	ldw	r3,8(r20)
   45070:	98a7883a 	add	r19,r19,r2
   45074:	90a5c83a 	sub	r18,r18,r2
   45078:	1885c83a 	sub	r2,r3,r2
   4507c:	a0800215 	stw	r2,8(r20)
   45080:	103fef1e 	bne	r2,zero,45040 <__alt_mem_onchip_memory2_1+0xfffc4040>
   45084:	0005883a 	mov	r2,zero
   45088:	dfc00b17 	ldw	ra,44(sp)
   4508c:	df000a17 	ldw	fp,40(sp)
   45090:	ddc00917 	ldw	r23,36(sp)
   45094:	dd800817 	ldw	r22,32(sp)
   45098:	dd400717 	ldw	r21,28(sp)
   4509c:	dd000617 	ldw	r20,24(sp)
   450a0:	dcc00517 	ldw	r19,20(sp)
   450a4:	dc800417 	ldw	r18,16(sp)
   450a8:	dc400317 	ldw	r17,12(sp)
   450ac:	dc000217 	ldw	r16,8(sp)
   450b0:	dec00c04 	addi	sp,sp,48
   450b4:	f800283a 	ret
   450b8:	800b883a 	mov	r5,r16
   450bc:	a809883a 	mov	r4,r21
   450c0:	0042b780 	call	42b78 <__swsetup_r>
   450c4:	1000eb1e 	bne	r2,zero,45474 <__sfvwrite_r+0x4a4>
   450c8:	80c0030b 	ldhu	r3,12(r16)
   450cc:	a4400017 	ldw	r17,0(r20)
   450d0:	1880008c 	andi	r2,r3,2
   450d4:	103fd61e 	bne	r2,zero,45030 <__alt_mem_onchip_memory2_1+0xfffc4030>
   450d8:	1880004c 	andi	r2,r3,1
   450dc:	10003f1e 	bne	r2,zero,451dc <__sfvwrite_r+0x20c>
   450e0:	0039883a 	mov	fp,zero
   450e4:	0025883a 	mov	r18,zero
   450e8:	90001a26 	beq	r18,zero,45154 <__sfvwrite_r+0x184>
   450ec:	1880800c 	andi	r2,r3,512
   450f0:	84c00217 	ldw	r19,8(r16)
   450f4:	10002126 	beq	r2,zero,4517c <__sfvwrite_r+0x1ac>
   450f8:	982f883a 	mov	r23,r19
   450fc:	94c09336 	bltu	r18,r19,4534c <__sfvwrite_r+0x37c>
   45100:	1881200c 	andi	r2,r3,1152
   45104:	10009e1e 	bne	r2,zero,45380 <__sfvwrite_r+0x3b0>
   45108:	81000017 	ldw	r4,0(r16)
   4510c:	b80d883a 	mov	r6,r23
   45110:	e00b883a 	mov	r5,fp
   45114:	00462e40 	call	462e4 <memmove>
   45118:	80c00217 	ldw	r3,8(r16)
   4511c:	81000017 	ldw	r4,0(r16)
   45120:	9005883a 	mov	r2,r18
   45124:	1ce7c83a 	sub	r19,r3,r19
   45128:	25cf883a 	add	r7,r4,r23
   4512c:	84c00215 	stw	r19,8(r16)
   45130:	81c00015 	stw	r7,0(r16)
   45134:	a0c00217 	ldw	r3,8(r20)
   45138:	e0b9883a 	add	fp,fp,r2
   4513c:	90a5c83a 	sub	r18,r18,r2
   45140:	18a7c83a 	sub	r19,r3,r2
   45144:	a4c00215 	stw	r19,8(r20)
   45148:	983fce26 	beq	r19,zero,45084 <__alt_mem_onchip_memory2_1+0xfffc4084>
   4514c:	80c0030b 	ldhu	r3,12(r16)
   45150:	903fe61e 	bne	r18,zero,450ec <__alt_mem_onchip_memory2_1+0xfffc40ec>
   45154:	8f000017 	ldw	fp,0(r17)
   45158:	8c800117 	ldw	r18,4(r17)
   4515c:	8c400204 	addi	r17,r17,8
   45160:	003fe106 	br	450e8 <__alt_mem_onchip_memory2_1+0xfffc40e8>
   45164:	8cc00017 	ldw	r19,0(r17)
   45168:	8c800117 	ldw	r18,4(r17)
   4516c:	8c400204 	addi	r17,r17,8
   45170:	003fb306 	br	45040 <__alt_mem_onchip_memory2_1+0xfffc4040>
   45174:	0005883a 	mov	r2,zero
   45178:	f800283a 	ret
   4517c:	81000017 	ldw	r4,0(r16)
   45180:	80800417 	ldw	r2,16(r16)
   45184:	11005736 	bltu	r2,r4,452e4 <__sfvwrite_r+0x314>
   45188:	85c00517 	ldw	r23,20(r16)
   4518c:	95c05536 	bltu	r18,r23,452e4 <__sfvwrite_r+0x314>
   45190:	00a00034 	movhi	r2,32768
   45194:	10bfffc4 	addi	r2,r2,-1
   45198:	9009883a 	mov	r4,r18
   4519c:	1480012e 	bgeu	r2,r18,451a4 <__sfvwrite_r+0x1d4>
   451a0:	1009883a 	mov	r4,r2
   451a4:	b80b883a 	mov	r5,r23
   451a8:	004a7d40 	call	4a7d4 <__divsi3>
   451ac:	15cf383a 	mul	r7,r2,r23
   451b0:	81400717 	ldw	r5,28(r16)
   451b4:	80800917 	ldw	r2,36(r16)
   451b8:	e00d883a 	mov	r6,fp
   451bc:	a809883a 	mov	r4,r21
   451c0:	103ee83a 	callr	r2
   451c4:	00bfdb16 	blt	zero,r2,45134 <__alt_mem_onchip_memory2_1+0xfffc4134>
   451c8:	8080030b 	ldhu	r2,12(r16)
   451cc:	10801014 	ori	r2,r2,64
   451d0:	8080030d 	sth	r2,12(r16)
   451d4:	00bfffc4 	movi	r2,-1
   451d8:	003fab06 	br	45088 <__alt_mem_onchip_memory2_1+0xfffc4088>
   451dc:	0027883a 	mov	r19,zero
   451e0:	0011883a 	mov	r8,zero
   451e4:	0039883a 	mov	fp,zero
   451e8:	0025883a 	mov	r18,zero
   451ec:	90001f26 	beq	r18,zero,4526c <__sfvwrite_r+0x29c>
   451f0:	40005a26 	beq	r8,zero,4535c <__sfvwrite_r+0x38c>
   451f4:	982d883a 	mov	r22,r19
   451f8:	94c0012e 	bgeu	r18,r19,45200 <__sfvwrite_r+0x230>
   451fc:	902d883a 	mov	r22,r18
   45200:	81000017 	ldw	r4,0(r16)
   45204:	80800417 	ldw	r2,16(r16)
   45208:	b02f883a 	mov	r23,r22
   4520c:	81c00517 	ldw	r7,20(r16)
   45210:	1100032e 	bgeu	r2,r4,45220 <__sfvwrite_r+0x250>
   45214:	80c00217 	ldw	r3,8(r16)
   45218:	38c7883a 	add	r3,r7,r3
   4521c:	1d801816 	blt	r3,r22,45280 <__sfvwrite_r+0x2b0>
   45220:	b1c03e16 	blt	r22,r7,4531c <__sfvwrite_r+0x34c>
   45224:	80800917 	ldw	r2,36(r16)
   45228:	81400717 	ldw	r5,28(r16)
   4522c:	e00d883a 	mov	r6,fp
   45230:	da000115 	stw	r8,4(sp)
   45234:	a809883a 	mov	r4,r21
   45238:	103ee83a 	callr	r2
   4523c:	102f883a 	mov	r23,r2
   45240:	da000117 	ldw	r8,4(sp)
   45244:	00bfe00e 	bge	zero,r2,451c8 <__alt_mem_onchip_memory2_1+0xfffc41c8>
   45248:	9de7c83a 	sub	r19,r19,r23
   4524c:	98001f26 	beq	r19,zero,452cc <__sfvwrite_r+0x2fc>
   45250:	a0800217 	ldw	r2,8(r20)
   45254:	e5f9883a 	add	fp,fp,r23
   45258:	95e5c83a 	sub	r18,r18,r23
   4525c:	15efc83a 	sub	r23,r2,r23
   45260:	a5c00215 	stw	r23,8(r20)
   45264:	b83f8726 	beq	r23,zero,45084 <__alt_mem_onchip_memory2_1+0xfffc4084>
   45268:	903fe11e 	bne	r18,zero,451f0 <__alt_mem_onchip_memory2_1+0xfffc41f0>
   4526c:	8f000017 	ldw	fp,0(r17)
   45270:	8c800117 	ldw	r18,4(r17)
   45274:	0011883a 	mov	r8,zero
   45278:	8c400204 	addi	r17,r17,8
   4527c:	003fdb06 	br	451ec <__alt_mem_onchip_memory2_1+0xfffc41ec>
   45280:	180d883a 	mov	r6,r3
   45284:	e00b883a 	mov	r5,fp
   45288:	da000115 	stw	r8,4(sp)
   4528c:	d8c00015 	stw	r3,0(sp)
   45290:	00462e40 	call	462e4 <memmove>
   45294:	d8c00017 	ldw	r3,0(sp)
   45298:	80800017 	ldw	r2,0(r16)
   4529c:	800b883a 	mov	r5,r16
   452a0:	a809883a 	mov	r4,r21
   452a4:	10c5883a 	add	r2,r2,r3
   452a8:	80800015 	stw	r2,0(r16)
   452ac:	d8c00015 	stw	r3,0(sp)
   452b0:	00447700 	call	44770 <_fflush_r>
   452b4:	d8c00017 	ldw	r3,0(sp)
   452b8:	da000117 	ldw	r8,4(sp)
   452bc:	103fc21e 	bne	r2,zero,451c8 <__alt_mem_onchip_memory2_1+0xfffc41c8>
   452c0:	182f883a 	mov	r23,r3
   452c4:	9de7c83a 	sub	r19,r19,r23
   452c8:	983fe11e 	bne	r19,zero,45250 <__alt_mem_onchip_memory2_1+0xfffc4250>
   452cc:	800b883a 	mov	r5,r16
   452d0:	a809883a 	mov	r4,r21
   452d4:	00447700 	call	44770 <_fflush_r>
   452d8:	103fbb1e 	bne	r2,zero,451c8 <__alt_mem_onchip_memory2_1+0xfffc41c8>
   452dc:	0011883a 	mov	r8,zero
   452e0:	003fdb06 	br	45250 <__alt_mem_onchip_memory2_1+0xfffc4250>
   452e4:	94c0012e 	bgeu	r18,r19,452ec <__sfvwrite_r+0x31c>
   452e8:	9027883a 	mov	r19,r18
   452ec:	980d883a 	mov	r6,r19
   452f0:	e00b883a 	mov	r5,fp
   452f4:	00462e40 	call	462e4 <memmove>
   452f8:	80800217 	ldw	r2,8(r16)
   452fc:	80c00017 	ldw	r3,0(r16)
   45300:	14c5c83a 	sub	r2,r2,r19
   45304:	1cc7883a 	add	r3,r3,r19
   45308:	80800215 	stw	r2,8(r16)
   4530c:	80c00015 	stw	r3,0(r16)
   45310:	10004326 	beq	r2,zero,45420 <__sfvwrite_r+0x450>
   45314:	9805883a 	mov	r2,r19
   45318:	003f8606 	br	45134 <__alt_mem_onchip_memory2_1+0xfffc4134>
   4531c:	b00d883a 	mov	r6,r22
   45320:	e00b883a 	mov	r5,fp
   45324:	da000115 	stw	r8,4(sp)
   45328:	00462e40 	call	462e4 <memmove>
   4532c:	80800217 	ldw	r2,8(r16)
   45330:	80c00017 	ldw	r3,0(r16)
   45334:	da000117 	ldw	r8,4(sp)
   45338:	1585c83a 	sub	r2,r2,r22
   4533c:	1dad883a 	add	r22,r3,r22
   45340:	80800215 	stw	r2,8(r16)
   45344:	85800015 	stw	r22,0(r16)
   45348:	003fbf06 	br	45248 <__alt_mem_onchip_memory2_1+0xfffc4248>
   4534c:	81000017 	ldw	r4,0(r16)
   45350:	9027883a 	mov	r19,r18
   45354:	902f883a 	mov	r23,r18
   45358:	003f6c06 	br	4510c <__alt_mem_onchip_memory2_1+0xfffc410c>
   4535c:	900d883a 	mov	r6,r18
   45360:	01400284 	movi	r5,10
   45364:	e009883a 	mov	r4,fp
   45368:	00460b80 	call	460b8 <memchr>
   4536c:	10003e26 	beq	r2,zero,45468 <__sfvwrite_r+0x498>
   45370:	10800044 	addi	r2,r2,1
   45374:	1727c83a 	sub	r19,r2,fp
   45378:	02000044 	movi	r8,1
   4537c:	003f9d06 	br	451f4 <__alt_mem_onchip_memory2_1+0xfffc41f4>
   45380:	80800517 	ldw	r2,20(r16)
   45384:	81400417 	ldw	r5,16(r16)
   45388:	81c00017 	ldw	r7,0(r16)
   4538c:	10a7883a 	add	r19,r2,r2
   45390:	9885883a 	add	r2,r19,r2
   45394:	1026d7fa 	srli	r19,r2,31
   45398:	396dc83a 	sub	r22,r7,r5
   4539c:	b1000044 	addi	r4,r22,1
   453a0:	9885883a 	add	r2,r19,r2
   453a4:	1027d07a 	srai	r19,r2,1
   453a8:	2485883a 	add	r2,r4,r18
   453ac:	980d883a 	mov	r6,r19
   453b0:	9880022e 	bgeu	r19,r2,453bc <__sfvwrite_r+0x3ec>
   453b4:	1027883a 	mov	r19,r2
   453b8:	100d883a 	mov	r6,r2
   453bc:	18c1000c 	andi	r3,r3,1024
   453c0:	18001c26 	beq	r3,zero,45434 <__sfvwrite_r+0x464>
   453c4:	300b883a 	mov	r5,r6
   453c8:	a809883a 	mov	r4,r21
   453cc:	00458ac0 	call	458ac <_malloc_r>
   453d0:	102f883a 	mov	r23,r2
   453d4:	10002926 	beq	r2,zero,4547c <__sfvwrite_r+0x4ac>
   453d8:	81400417 	ldw	r5,16(r16)
   453dc:	b00d883a 	mov	r6,r22
   453e0:	1009883a 	mov	r4,r2
   453e4:	004619c0 	call	4619c <memcpy>
   453e8:	8080030b 	ldhu	r2,12(r16)
   453ec:	00fedfc4 	movi	r3,-1153
   453f0:	10c4703a 	and	r2,r2,r3
   453f4:	10802014 	ori	r2,r2,128
   453f8:	8080030d 	sth	r2,12(r16)
   453fc:	bd89883a 	add	r4,r23,r22
   45400:	9d8fc83a 	sub	r7,r19,r22
   45404:	85c00415 	stw	r23,16(r16)
   45408:	84c00515 	stw	r19,20(r16)
   4540c:	81000015 	stw	r4,0(r16)
   45410:	9027883a 	mov	r19,r18
   45414:	81c00215 	stw	r7,8(r16)
   45418:	902f883a 	mov	r23,r18
   4541c:	003f3b06 	br	4510c <__alt_mem_onchip_memory2_1+0xfffc410c>
   45420:	800b883a 	mov	r5,r16
   45424:	a809883a 	mov	r4,r21
   45428:	00447700 	call	44770 <_fflush_r>
   4542c:	103fb926 	beq	r2,zero,45314 <__alt_mem_onchip_memory2_1+0xfffc4314>
   45430:	003f6506 	br	451c8 <__alt_mem_onchip_memory2_1+0xfffc41c8>
   45434:	a809883a 	mov	r4,r21
   45438:	00475640 	call	47564 <_realloc_r>
   4543c:	102f883a 	mov	r23,r2
   45440:	103fee1e 	bne	r2,zero,453fc <__alt_mem_onchip_memory2_1+0xfffc43fc>
   45444:	81400417 	ldw	r5,16(r16)
   45448:	a809883a 	mov	r4,r21
   4544c:	0044cc00 	call	44cc0 <_free_r>
   45450:	8080030b 	ldhu	r2,12(r16)
   45454:	00ffdfc4 	movi	r3,-129
   45458:	1884703a 	and	r2,r3,r2
   4545c:	00c00304 	movi	r3,12
   45460:	a8c00015 	stw	r3,0(r21)
   45464:	003f5906 	br	451cc <__alt_mem_onchip_memory2_1+0xfffc41cc>
   45468:	94c00044 	addi	r19,r18,1
   4546c:	02000044 	movi	r8,1
   45470:	003f6006 	br	451f4 <__alt_mem_onchip_memory2_1+0xfffc41f4>
   45474:	00bfffc4 	movi	r2,-1
   45478:	003f0306 	br	45088 <__alt_mem_onchip_memory2_1+0xfffc4088>
   4547c:	00800304 	movi	r2,12
   45480:	a8800015 	stw	r2,0(r21)
   45484:	8080030b 	ldhu	r2,12(r16)
   45488:	003f5006 	br	451cc <__alt_mem_onchip_memory2_1+0xfffc41cc>

0004548c <_fwalk>:
   4548c:	defff704 	addi	sp,sp,-36
   45490:	dd000415 	stw	r20,16(sp)
   45494:	dfc00815 	stw	ra,32(sp)
   45498:	ddc00715 	stw	r23,28(sp)
   4549c:	dd800615 	stw	r22,24(sp)
   454a0:	dd400515 	stw	r21,20(sp)
   454a4:	dcc00315 	stw	r19,12(sp)
   454a8:	dc800215 	stw	r18,8(sp)
   454ac:	dc400115 	stw	r17,4(sp)
   454b0:	dc000015 	stw	r16,0(sp)
   454b4:	2500b804 	addi	r20,r4,736
   454b8:	a0002326 	beq	r20,zero,45548 <_fwalk+0xbc>
   454bc:	282b883a 	mov	r21,r5
   454c0:	002f883a 	mov	r23,zero
   454c4:	05800044 	movi	r22,1
   454c8:	04ffffc4 	movi	r19,-1
   454cc:	a4400117 	ldw	r17,4(r20)
   454d0:	a4800217 	ldw	r18,8(r20)
   454d4:	8c7fffc4 	addi	r17,r17,-1
   454d8:	88000d16 	blt	r17,zero,45510 <_fwalk+0x84>
   454dc:	94000304 	addi	r16,r18,12
   454e0:	94800384 	addi	r18,r18,14
   454e4:	8080000b 	ldhu	r2,0(r16)
   454e8:	8c7fffc4 	addi	r17,r17,-1
   454ec:	813ffd04 	addi	r4,r16,-12
   454f0:	b080042e 	bgeu	r22,r2,45504 <_fwalk+0x78>
   454f4:	9080000f 	ldh	r2,0(r18)
   454f8:	14c00226 	beq	r2,r19,45504 <_fwalk+0x78>
   454fc:	a83ee83a 	callr	r21
   45500:	b8aeb03a 	or	r23,r23,r2
   45504:	84001a04 	addi	r16,r16,104
   45508:	94801a04 	addi	r18,r18,104
   4550c:	8cfff51e 	bne	r17,r19,454e4 <__alt_mem_onchip_memory2_1+0xfffc44e4>
   45510:	a5000017 	ldw	r20,0(r20)
   45514:	a03fed1e 	bne	r20,zero,454cc <__alt_mem_onchip_memory2_1+0xfffc44cc>
   45518:	b805883a 	mov	r2,r23
   4551c:	dfc00817 	ldw	ra,32(sp)
   45520:	ddc00717 	ldw	r23,28(sp)
   45524:	dd800617 	ldw	r22,24(sp)
   45528:	dd400517 	ldw	r21,20(sp)
   4552c:	dd000417 	ldw	r20,16(sp)
   45530:	dcc00317 	ldw	r19,12(sp)
   45534:	dc800217 	ldw	r18,8(sp)
   45538:	dc400117 	ldw	r17,4(sp)
   4553c:	dc000017 	ldw	r16,0(sp)
   45540:	dec00904 	addi	sp,sp,36
   45544:	f800283a 	ret
   45548:	002f883a 	mov	r23,zero
   4554c:	003ff206 	br	45518 <__alt_mem_onchip_memory2_1+0xfffc4518>

00045550 <_fwalk_reent>:
   45550:	defff704 	addi	sp,sp,-36
   45554:	dd000415 	stw	r20,16(sp)
   45558:	dfc00815 	stw	ra,32(sp)
   4555c:	ddc00715 	stw	r23,28(sp)
   45560:	dd800615 	stw	r22,24(sp)
   45564:	dd400515 	stw	r21,20(sp)
   45568:	dcc00315 	stw	r19,12(sp)
   4556c:	dc800215 	stw	r18,8(sp)
   45570:	dc400115 	stw	r17,4(sp)
   45574:	dc000015 	stw	r16,0(sp)
   45578:	2500b804 	addi	r20,r4,736
   4557c:	a0002326 	beq	r20,zero,4560c <_fwalk_reent+0xbc>
   45580:	282b883a 	mov	r21,r5
   45584:	2027883a 	mov	r19,r4
   45588:	002f883a 	mov	r23,zero
   4558c:	05800044 	movi	r22,1
   45590:	04bfffc4 	movi	r18,-1
   45594:	a4400117 	ldw	r17,4(r20)
   45598:	a4000217 	ldw	r16,8(r20)
   4559c:	8c7fffc4 	addi	r17,r17,-1
   455a0:	88000c16 	blt	r17,zero,455d4 <_fwalk_reent+0x84>
   455a4:	84000304 	addi	r16,r16,12
   455a8:	8080000b 	ldhu	r2,0(r16)
   455ac:	8c7fffc4 	addi	r17,r17,-1
   455b0:	817ffd04 	addi	r5,r16,-12
   455b4:	b080052e 	bgeu	r22,r2,455cc <_fwalk_reent+0x7c>
   455b8:	8080008f 	ldh	r2,2(r16)
   455bc:	9809883a 	mov	r4,r19
   455c0:	14800226 	beq	r2,r18,455cc <_fwalk_reent+0x7c>
   455c4:	a83ee83a 	callr	r21
   455c8:	b8aeb03a 	or	r23,r23,r2
   455cc:	84001a04 	addi	r16,r16,104
   455d0:	8cbff51e 	bne	r17,r18,455a8 <__alt_mem_onchip_memory2_1+0xfffc45a8>
   455d4:	a5000017 	ldw	r20,0(r20)
   455d8:	a03fee1e 	bne	r20,zero,45594 <__alt_mem_onchip_memory2_1+0xfffc4594>
   455dc:	b805883a 	mov	r2,r23
   455e0:	dfc00817 	ldw	ra,32(sp)
   455e4:	ddc00717 	ldw	r23,28(sp)
   455e8:	dd800617 	ldw	r22,24(sp)
   455ec:	dd400517 	ldw	r21,20(sp)
   455f0:	dd000417 	ldw	r20,16(sp)
   455f4:	dcc00317 	ldw	r19,12(sp)
   455f8:	dc800217 	ldw	r18,8(sp)
   455fc:	dc400117 	ldw	r17,4(sp)
   45600:	dc000017 	ldw	r16,0(sp)
   45604:	dec00904 	addi	sp,sp,36
   45608:	f800283a 	ret
   4560c:	002f883a 	mov	r23,zero
   45610:	003ff206 	br	455dc <__alt_mem_onchip_memory2_1+0xfffc45dc>

00045614 <_setlocale_r>:
   45614:	30001b26 	beq	r6,zero,45684 <_setlocale_r+0x70>
   45618:	01400174 	movhi	r5,5
   4561c:	defffe04 	addi	sp,sp,-8
   45620:	297ea104 	addi	r5,r5,-1404
   45624:	3009883a 	mov	r4,r6
   45628:	dc000015 	stw	r16,0(sp)
   4562c:	dfc00115 	stw	ra,4(sp)
   45630:	3021883a 	mov	r16,r6
   45634:	0047ccc0 	call	47ccc <strcmp>
   45638:	1000061e 	bne	r2,zero,45654 <_setlocale_r+0x40>
   4563c:	00800174 	movhi	r2,5
   45640:	10bea004 	addi	r2,r2,-1408
   45644:	dfc00117 	ldw	ra,4(sp)
   45648:	dc000017 	ldw	r16,0(sp)
   4564c:	dec00204 	addi	sp,sp,8
   45650:	f800283a 	ret
   45654:	01400174 	movhi	r5,5
   45658:	297ea004 	addi	r5,r5,-1408
   4565c:	8009883a 	mov	r4,r16
   45660:	0047ccc0 	call	47ccc <strcmp>
   45664:	103ff526 	beq	r2,zero,4563c <__alt_mem_onchip_memory2_1+0xfffc463c>
   45668:	01400174 	movhi	r5,5
   4566c:	297e8b04 	addi	r5,r5,-1492
   45670:	8009883a 	mov	r4,r16
   45674:	0047ccc0 	call	47ccc <strcmp>
   45678:	103ff026 	beq	r2,zero,4563c <__alt_mem_onchip_memory2_1+0xfffc463c>
   4567c:	0005883a 	mov	r2,zero
   45680:	003ff006 	br	45644 <__alt_mem_onchip_memory2_1+0xfffc4644>
   45684:	00800174 	movhi	r2,5
   45688:	10bea004 	addi	r2,r2,-1408
   4568c:	f800283a 	ret

00045690 <__locale_charset>:
   45690:	00800174 	movhi	r2,5
   45694:	10805304 	addi	r2,r2,332
   45698:	f800283a 	ret

0004569c <__locale_mb_cur_max>:
   4569c:	00800174 	movhi	r2,5
   456a0:	1085ef04 	addi	r2,r2,6076
   456a4:	10800017 	ldw	r2,0(r2)
   456a8:	f800283a 	ret

000456ac <__locale_msgcharset>:
   456ac:	00800174 	movhi	r2,5
   456b0:	10804b04 	addi	r2,r2,300
   456b4:	f800283a 	ret

000456b8 <__locale_cjk_lang>:
   456b8:	0005883a 	mov	r2,zero
   456bc:	f800283a 	ret

000456c0 <_localeconv_r>:
   456c0:	00800174 	movhi	r2,5
   456c4:	10805b04 	addi	r2,r2,364
   456c8:	f800283a 	ret

000456cc <setlocale>:
   456cc:	00800174 	movhi	r2,5
   456d0:	1085ee04 	addi	r2,r2,6072
   456d4:	280d883a 	mov	r6,r5
   456d8:	200b883a 	mov	r5,r4
   456dc:	11000017 	ldw	r4,0(r2)
   456e0:	00456141 	jmpi	45614 <_setlocale_r>

000456e4 <localeconv>:
   456e4:	00800174 	movhi	r2,5
   456e8:	10805b04 	addi	r2,r2,364
   456ec:	f800283a 	ret

000456f0 <__smakebuf_r>:
   456f0:	2880030b 	ldhu	r2,12(r5)
   456f4:	10c0008c 	andi	r3,r2,2
   456f8:	1800411e 	bne	r3,zero,45800 <__smakebuf_r+0x110>
   456fc:	deffec04 	addi	sp,sp,-80
   45700:	dc000f15 	stw	r16,60(sp)
   45704:	2821883a 	mov	r16,r5
   45708:	2940038f 	ldh	r5,14(r5)
   4570c:	dc401015 	stw	r17,64(sp)
   45710:	dfc01315 	stw	ra,76(sp)
   45714:	dcc01215 	stw	r19,72(sp)
   45718:	dc801115 	stw	r18,68(sp)
   4571c:	2023883a 	mov	r17,r4
   45720:	28001c16 	blt	r5,zero,45794 <__smakebuf_r+0xa4>
   45724:	d80d883a 	mov	r6,sp
   45728:	00498740 	call	49874 <_fstat_r>
   4572c:	10001816 	blt	r2,zero,45790 <__smakebuf_r+0xa0>
   45730:	d8800117 	ldw	r2,4(sp)
   45734:	00e00014 	movui	r3,32768
   45738:	10bc000c 	andi	r2,r2,61440
   4573c:	14c80020 	cmpeqi	r19,r2,8192
   45740:	10c03726 	beq	r2,r3,45820 <__smakebuf_r+0x130>
   45744:	80c0030b 	ldhu	r3,12(r16)
   45748:	18c20014 	ori	r3,r3,2048
   4574c:	80c0030d 	sth	r3,12(r16)
   45750:	00c80004 	movi	r3,8192
   45754:	10c0521e 	bne	r2,r3,458a0 <__smakebuf_r+0x1b0>
   45758:	8140038f 	ldh	r5,14(r16)
   4575c:	8809883a 	mov	r4,r17
   45760:	00498d00 	call	498d0 <_isatty_r>
   45764:	10004c26 	beq	r2,zero,45898 <__smakebuf_r+0x1a8>
   45768:	8080030b 	ldhu	r2,12(r16)
   4576c:	80c010c4 	addi	r3,r16,67
   45770:	80c00015 	stw	r3,0(r16)
   45774:	10800054 	ori	r2,r2,1
   45778:	8080030d 	sth	r2,12(r16)
   4577c:	00800044 	movi	r2,1
   45780:	80c00415 	stw	r3,16(r16)
   45784:	80800515 	stw	r2,20(r16)
   45788:	04810004 	movi	r18,1024
   4578c:	00000706 	br	457ac <__smakebuf_r+0xbc>
   45790:	8080030b 	ldhu	r2,12(r16)
   45794:	10c0200c 	andi	r3,r2,128
   45798:	18001f1e 	bne	r3,zero,45818 <__smakebuf_r+0x128>
   4579c:	04810004 	movi	r18,1024
   457a0:	10820014 	ori	r2,r2,2048
   457a4:	8080030d 	sth	r2,12(r16)
   457a8:	0027883a 	mov	r19,zero
   457ac:	900b883a 	mov	r5,r18
   457b0:	8809883a 	mov	r4,r17
   457b4:	00458ac0 	call	458ac <_malloc_r>
   457b8:	10002c26 	beq	r2,zero,4586c <__smakebuf_r+0x17c>
   457bc:	80c0030b 	ldhu	r3,12(r16)
   457c0:	01000134 	movhi	r4,4
   457c4:	21120104 	addi	r4,r4,18436
   457c8:	89000f15 	stw	r4,60(r17)
   457cc:	18c02014 	ori	r3,r3,128
   457d0:	80c0030d 	sth	r3,12(r16)
   457d4:	80800015 	stw	r2,0(r16)
   457d8:	80800415 	stw	r2,16(r16)
   457dc:	84800515 	stw	r18,20(r16)
   457e0:	98001a1e 	bne	r19,zero,4584c <__smakebuf_r+0x15c>
   457e4:	dfc01317 	ldw	ra,76(sp)
   457e8:	dcc01217 	ldw	r19,72(sp)
   457ec:	dc801117 	ldw	r18,68(sp)
   457f0:	dc401017 	ldw	r17,64(sp)
   457f4:	dc000f17 	ldw	r16,60(sp)
   457f8:	dec01404 	addi	sp,sp,80
   457fc:	f800283a 	ret
   45800:	288010c4 	addi	r2,r5,67
   45804:	28800015 	stw	r2,0(r5)
   45808:	28800415 	stw	r2,16(r5)
   4580c:	00800044 	movi	r2,1
   45810:	28800515 	stw	r2,20(r5)
   45814:	f800283a 	ret
   45818:	04801004 	movi	r18,64
   4581c:	003fe006 	br	457a0 <__alt_mem_onchip_memory2_1+0xfffc47a0>
   45820:	81000a17 	ldw	r4,40(r16)
   45824:	00c00134 	movhi	r3,4
   45828:	18df1a04 	addi	r3,r3,31848
   4582c:	20ffc51e 	bne	r4,r3,45744 <__alt_mem_onchip_memory2_1+0xfffc4744>
   45830:	8080030b 	ldhu	r2,12(r16)
   45834:	04810004 	movi	r18,1024
   45838:	84801315 	stw	r18,76(r16)
   4583c:	1484b03a 	or	r2,r2,r18
   45840:	8080030d 	sth	r2,12(r16)
   45844:	0027883a 	mov	r19,zero
   45848:	003fd806 	br	457ac <__alt_mem_onchip_memory2_1+0xfffc47ac>
   4584c:	8140038f 	ldh	r5,14(r16)
   45850:	8809883a 	mov	r4,r17
   45854:	00498d00 	call	498d0 <_isatty_r>
   45858:	103fe226 	beq	r2,zero,457e4 <__alt_mem_onchip_memory2_1+0xfffc47e4>
   4585c:	8080030b 	ldhu	r2,12(r16)
   45860:	10800054 	ori	r2,r2,1
   45864:	8080030d 	sth	r2,12(r16)
   45868:	003fde06 	br	457e4 <__alt_mem_onchip_memory2_1+0xfffc47e4>
   4586c:	8080030b 	ldhu	r2,12(r16)
   45870:	10c0800c 	andi	r3,r2,512
   45874:	183fdb1e 	bne	r3,zero,457e4 <__alt_mem_onchip_memory2_1+0xfffc47e4>
   45878:	10800094 	ori	r2,r2,2
   4587c:	80c010c4 	addi	r3,r16,67
   45880:	8080030d 	sth	r2,12(r16)
   45884:	00800044 	movi	r2,1
   45888:	80c00015 	stw	r3,0(r16)
   4588c:	80c00415 	stw	r3,16(r16)
   45890:	80800515 	stw	r2,20(r16)
   45894:	003fd306 	br	457e4 <__alt_mem_onchip_memory2_1+0xfffc47e4>
   45898:	04810004 	movi	r18,1024
   4589c:	003fc306 	br	457ac <__alt_mem_onchip_memory2_1+0xfffc47ac>
   458a0:	0027883a 	mov	r19,zero
   458a4:	04810004 	movi	r18,1024
   458a8:	003fc006 	br	457ac <__alt_mem_onchip_memory2_1+0xfffc47ac>

000458ac <_malloc_r>:
   458ac:	defff504 	addi	sp,sp,-44
   458b0:	dc800315 	stw	r18,12(sp)
   458b4:	dfc00a15 	stw	ra,40(sp)
   458b8:	df000915 	stw	fp,36(sp)
   458bc:	ddc00815 	stw	r23,32(sp)
   458c0:	dd800715 	stw	r22,28(sp)
   458c4:	dd400615 	stw	r21,24(sp)
   458c8:	dd000515 	stw	r20,20(sp)
   458cc:	dcc00415 	stw	r19,16(sp)
   458d0:	dc400215 	stw	r17,8(sp)
   458d4:	dc000115 	stw	r16,4(sp)
   458d8:	288002c4 	addi	r2,r5,11
   458dc:	00c00584 	movi	r3,22
   458e0:	2025883a 	mov	r18,r4
   458e4:	18807f2e 	bgeu	r3,r2,45ae4 <_malloc_r+0x238>
   458e8:	047ffe04 	movi	r17,-8
   458ec:	1462703a 	and	r17,r2,r17
   458f0:	8800a316 	blt	r17,zero,45b80 <_malloc_r+0x2d4>
   458f4:	8940a236 	bltu	r17,r5,45b80 <_malloc_r+0x2d4>
   458f8:	004d80c0 	call	4d80c <__malloc_lock>
   458fc:	00807dc4 	movi	r2,503
   45900:	1441e92e 	bgeu	r2,r17,460a8 <_malloc_r+0x7fc>
   45904:	8804d27a 	srli	r2,r17,9
   45908:	1000a126 	beq	r2,zero,45b90 <_malloc_r+0x2e4>
   4590c:	00c00104 	movi	r3,4
   45910:	18811e36 	bltu	r3,r2,45d8c <_malloc_r+0x4e0>
   45914:	8804d1ba 	srli	r2,r17,6
   45918:	12000e44 	addi	r8,r2,57
   4591c:	11c00e04 	addi	r7,r2,56
   45920:	4209883a 	add	r4,r8,r8
   45924:	04c00174 	movhi	r19,5
   45928:	2109883a 	add	r4,r4,r4
   4592c:	9cc06904 	addi	r19,r19,420
   45930:	2109883a 	add	r4,r4,r4
   45934:	9909883a 	add	r4,r19,r4
   45938:	24000117 	ldw	r16,4(r4)
   4593c:	213ffe04 	addi	r4,r4,-8
   45940:	24009726 	beq	r4,r16,45ba0 <_malloc_r+0x2f4>
   45944:	80800117 	ldw	r2,4(r16)
   45948:	01bfff04 	movi	r6,-4
   4594c:	014003c4 	movi	r5,15
   45950:	1184703a 	and	r2,r2,r6
   45954:	1447c83a 	sub	r3,r2,r17
   45958:	28c00716 	blt	r5,r3,45978 <_malloc_r+0xcc>
   4595c:	1800920e 	bge	r3,zero,45ba8 <_malloc_r+0x2fc>
   45960:	84000317 	ldw	r16,12(r16)
   45964:	24008e26 	beq	r4,r16,45ba0 <_malloc_r+0x2f4>
   45968:	80800117 	ldw	r2,4(r16)
   4596c:	1184703a 	and	r2,r2,r6
   45970:	1447c83a 	sub	r3,r2,r17
   45974:	28fff90e 	bge	r5,r3,4595c <__alt_mem_onchip_memory2_1+0xfffc495c>
   45978:	3809883a 	mov	r4,r7
   4597c:	01800174 	movhi	r6,5
   45980:	9c000417 	ldw	r16,16(r19)
   45984:	31806904 	addi	r6,r6,420
   45988:	32000204 	addi	r8,r6,8
   4598c:	82013426 	beq	r16,r8,45e60 <_malloc_r+0x5b4>
   45990:	80c00117 	ldw	r3,4(r16)
   45994:	00bfff04 	movi	r2,-4
   45998:	188e703a 	and	r7,r3,r2
   4599c:	3c45c83a 	sub	r2,r7,r17
   459a0:	00c003c4 	movi	r3,15
   459a4:	18811f16 	blt	r3,r2,45e24 <_malloc_r+0x578>
   459a8:	32000515 	stw	r8,20(r6)
   459ac:	32000415 	stw	r8,16(r6)
   459b0:	10007f0e 	bge	r2,zero,45bb0 <_malloc_r+0x304>
   459b4:	00807fc4 	movi	r2,511
   459b8:	11c0fd36 	bltu	r2,r7,45db0 <_malloc_r+0x504>
   459bc:	3806d0fa 	srli	r3,r7,3
   459c0:	01c00044 	movi	r7,1
   459c4:	30800117 	ldw	r2,4(r6)
   459c8:	19400044 	addi	r5,r3,1
   459cc:	294b883a 	add	r5,r5,r5
   459d0:	1807d0ba 	srai	r3,r3,2
   459d4:	294b883a 	add	r5,r5,r5
   459d8:	294b883a 	add	r5,r5,r5
   459dc:	298b883a 	add	r5,r5,r6
   459e0:	38c6983a 	sll	r3,r7,r3
   459e4:	29c00017 	ldw	r7,0(r5)
   459e8:	2a7ffe04 	addi	r9,r5,-8
   459ec:	1886b03a 	or	r3,r3,r2
   459f0:	82400315 	stw	r9,12(r16)
   459f4:	81c00215 	stw	r7,8(r16)
   459f8:	30c00115 	stw	r3,4(r6)
   459fc:	2c000015 	stw	r16,0(r5)
   45a00:	3c000315 	stw	r16,12(r7)
   45a04:	2005d0ba 	srai	r2,r4,2
   45a08:	01400044 	movi	r5,1
   45a0c:	288a983a 	sll	r5,r5,r2
   45a10:	19406f36 	bltu	r3,r5,45bd0 <_malloc_r+0x324>
   45a14:	28c4703a 	and	r2,r5,r3
   45a18:	10000a1e 	bne	r2,zero,45a44 <_malloc_r+0x198>
   45a1c:	00bfff04 	movi	r2,-4
   45a20:	294b883a 	add	r5,r5,r5
   45a24:	2088703a 	and	r4,r4,r2
   45a28:	28c4703a 	and	r2,r5,r3
   45a2c:	21000104 	addi	r4,r4,4
   45a30:	1000041e 	bne	r2,zero,45a44 <_malloc_r+0x198>
   45a34:	294b883a 	add	r5,r5,r5
   45a38:	28c4703a 	and	r2,r5,r3
   45a3c:	21000104 	addi	r4,r4,4
   45a40:	103ffc26 	beq	r2,zero,45a34 <__alt_mem_onchip_memory2_1+0xfffc4a34>
   45a44:	02bfff04 	movi	r10,-4
   45a48:	024003c4 	movi	r9,15
   45a4c:	21800044 	addi	r6,r4,1
   45a50:	318d883a 	add	r6,r6,r6
   45a54:	318d883a 	add	r6,r6,r6
   45a58:	318d883a 	add	r6,r6,r6
   45a5c:	998d883a 	add	r6,r19,r6
   45a60:	333ffe04 	addi	r12,r6,-8
   45a64:	2017883a 	mov	r11,r4
   45a68:	31800104 	addi	r6,r6,4
   45a6c:	34000017 	ldw	r16,0(r6)
   45a70:	31fffd04 	addi	r7,r6,-12
   45a74:	81c0041e 	bne	r16,r7,45a88 <_malloc_r+0x1dc>
   45a78:	0000fb06 	br	45e68 <_malloc_r+0x5bc>
   45a7c:	1801030e 	bge	r3,zero,45e8c <_malloc_r+0x5e0>
   45a80:	84000317 	ldw	r16,12(r16)
   45a84:	81c0f826 	beq	r16,r7,45e68 <_malloc_r+0x5bc>
   45a88:	80800117 	ldw	r2,4(r16)
   45a8c:	1284703a 	and	r2,r2,r10
   45a90:	1447c83a 	sub	r3,r2,r17
   45a94:	48fff90e 	bge	r9,r3,45a7c <__alt_mem_onchip_memory2_1+0xfffc4a7c>
   45a98:	80800317 	ldw	r2,12(r16)
   45a9c:	81000217 	ldw	r4,8(r16)
   45aa0:	89400054 	ori	r5,r17,1
   45aa4:	81400115 	stw	r5,4(r16)
   45aa8:	20800315 	stw	r2,12(r4)
   45aac:	11000215 	stw	r4,8(r2)
   45ab0:	8463883a 	add	r17,r16,r17
   45ab4:	9c400515 	stw	r17,20(r19)
   45ab8:	9c400415 	stw	r17,16(r19)
   45abc:	18800054 	ori	r2,r3,1
   45ac0:	88800115 	stw	r2,4(r17)
   45ac4:	8a000315 	stw	r8,12(r17)
   45ac8:	8a000215 	stw	r8,8(r17)
   45acc:	88e3883a 	add	r17,r17,r3
   45ad0:	88c00015 	stw	r3,0(r17)
   45ad4:	9009883a 	mov	r4,r18
   45ad8:	004d8300 	call	4d830 <__malloc_unlock>
   45adc:	80800204 	addi	r2,r16,8
   45ae0:	00001b06 	br	45b50 <_malloc_r+0x2a4>
   45ae4:	04400404 	movi	r17,16
   45ae8:	89402536 	bltu	r17,r5,45b80 <_malloc_r+0x2d4>
   45aec:	004d80c0 	call	4d80c <__malloc_lock>
   45af0:	00800184 	movi	r2,6
   45af4:	01000084 	movi	r4,2
   45af8:	04c00174 	movhi	r19,5
   45afc:	1085883a 	add	r2,r2,r2
   45b00:	9cc06904 	addi	r19,r19,420
   45b04:	1085883a 	add	r2,r2,r2
   45b08:	9885883a 	add	r2,r19,r2
   45b0c:	14000117 	ldw	r16,4(r2)
   45b10:	10fffe04 	addi	r3,r2,-8
   45b14:	80c0d926 	beq	r16,r3,45e7c <_malloc_r+0x5d0>
   45b18:	80c00117 	ldw	r3,4(r16)
   45b1c:	81000317 	ldw	r4,12(r16)
   45b20:	00bfff04 	movi	r2,-4
   45b24:	1884703a 	and	r2,r3,r2
   45b28:	81400217 	ldw	r5,8(r16)
   45b2c:	8085883a 	add	r2,r16,r2
   45b30:	10c00117 	ldw	r3,4(r2)
   45b34:	29000315 	stw	r4,12(r5)
   45b38:	21400215 	stw	r5,8(r4)
   45b3c:	18c00054 	ori	r3,r3,1
   45b40:	10c00115 	stw	r3,4(r2)
   45b44:	9009883a 	mov	r4,r18
   45b48:	004d8300 	call	4d830 <__malloc_unlock>
   45b4c:	80800204 	addi	r2,r16,8
   45b50:	dfc00a17 	ldw	ra,40(sp)
   45b54:	df000917 	ldw	fp,36(sp)
   45b58:	ddc00817 	ldw	r23,32(sp)
   45b5c:	dd800717 	ldw	r22,28(sp)
   45b60:	dd400617 	ldw	r21,24(sp)
   45b64:	dd000517 	ldw	r20,20(sp)
   45b68:	dcc00417 	ldw	r19,16(sp)
   45b6c:	dc800317 	ldw	r18,12(sp)
   45b70:	dc400217 	ldw	r17,8(sp)
   45b74:	dc000117 	ldw	r16,4(sp)
   45b78:	dec00b04 	addi	sp,sp,44
   45b7c:	f800283a 	ret
   45b80:	00800304 	movi	r2,12
   45b84:	90800015 	stw	r2,0(r18)
   45b88:	0005883a 	mov	r2,zero
   45b8c:	003ff006 	br	45b50 <__alt_mem_onchip_memory2_1+0xfffc4b50>
   45b90:	01002004 	movi	r4,128
   45b94:	02001004 	movi	r8,64
   45b98:	01c00fc4 	movi	r7,63
   45b9c:	003f6106 	br	45924 <__alt_mem_onchip_memory2_1+0xfffc4924>
   45ba0:	4009883a 	mov	r4,r8
   45ba4:	003f7506 	br	4597c <__alt_mem_onchip_memory2_1+0xfffc497c>
   45ba8:	81000317 	ldw	r4,12(r16)
   45bac:	003fde06 	br	45b28 <__alt_mem_onchip_memory2_1+0xfffc4b28>
   45bb0:	81c5883a 	add	r2,r16,r7
   45bb4:	11400117 	ldw	r5,4(r2)
   45bb8:	9009883a 	mov	r4,r18
   45bbc:	29400054 	ori	r5,r5,1
   45bc0:	11400115 	stw	r5,4(r2)
   45bc4:	004d8300 	call	4d830 <__malloc_unlock>
   45bc8:	80800204 	addi	r2,r16,8
   45bcc:	003fe006 	br	45b50 <__alt_mem_onchip_memory2_1+0xfffc4b50>
   45bd0:	9c000217 	ldw	r16,8(r19)
   45bd4:	00bfff04 	movi	r2,-4
   45bd8:	85800117 	ldw	r22,4(r16)
   45bdc:	b0ac703a 	and	r22,r22,r2
   45be0:	b4400336 	bltu	r22,r17,45bf0 <_malloc_r+0x344>
   45be4:	b445c83a 	sub	r2,r22,r17
   45be8:	00c003c4 	movi	r3,15
   45bec:	18805d16 	blt	r3,r2,45d64 <_malloc_r+0x4b8>
   45bf0:	05c00174 	movhi	r23,5
   45bf4:	00800174 	movhi	r2,5
   45bf8:	108cbe04 	addi	r2,r2,13048
   45bfc:	bdc5f004 	addi	r23,r23,6080
   45c00:	15400017 	ldw	r21,0(r2)
   45c04:	b8c00017 	ldw	r3,0(r23)
   45c08:	00bfffc4 	movi	r2,-1
   45c0c:	858d883a 	add	r6,r16,r22
   45c10:	8d6b883a 	add	r21,r17,r21
   45c14:	1880ea26 	beq	r3,r2,45fc0 <_malloc_r+0x714>
   45c18:	ad4403c4 	addi	r21,r21,4111
   45c1c:	00bc0004 	movi	r2,-4096
   45c20:	a8aa703a 	and	r21,r21,r2
   45c24:	a80b883a 	mov	r5,r21
   45c28:	9009883a 	mov	r4,r18
   45c2c:	d9800015 	stw	r6,0(sp)
   45c30:	0047b3c0 	call	47b3c <_sbrk_r>
   45c34:	1029883a 	mov	r20,r2
   45c38:	00bfffc4 	movi	r2,-1
   45c3c:	d9800017 	ldw	r6,0(sp)
   45c40:	a080e826 	beq	r20,r2,45fe4 <_malloc_r+0x738>
   45c44:	a180a636 	bltu	r20,r6,45ee0 <_malloc_r+0x634>
   45c48:	07000174 	movhi	fp,5
   45c4c:	e70cc904 	addi	fp,fp,13092
   45c50:	e0800017 	ldw	r2,0(fp)
   45c54:	a887883a 	add	r3,r21,r2
   45c58:	e0c00015 	stw	r3,0(fp)
   45c5c:	3500e626 	beq	r6,r20,45ff8 <_malloc_r+0x74c>
   45c60:	b9000017 	ldw	r4,0(r23)
   45c64:	00bfffc4 	movi	r2,-1
   45c68:	2080ee26 	beq	r4,r2,46024 <_malloc_r+0x778>
   45c6c:	a185c83a 	sub	r2,r20,r6
   45c70:	10c5883a 	add	r2,r2,r3
   45c74:	e0800015 	stw	r2,0(fp)
   45c78:	a0c001cc 	andi	r3,r20,7
   45c7c:	1800bc26 	beq	r3,zero,45f70 <_malloc_r+0x6c4>
   45c80:	a0e9c83a 	sub	r20,r20,r3
   45c84:	00840204 	movi	r2,4104
   45c88:	a5000204 	addi	r20,r20,8
   45c8c:	10c7c83a 	sub	r3,r2,r3
   45c90:	a545883a 	add	r2,r20,r21
   45c94:	1083ffcc 	andi	r2,r2,4095
   45c98:	18abc83a 	sub	r21,r3,r2
   45c9c:	a80b883a 	mov	r5,r21
   45ca0:	9009883a 	mov	r4,r18
   45ca4:	0047b3c0 	call	47b3c <_sbrk_r>
   45ca8:	00ffffc4 	movi	r3,-1
   45cac:	10c0e126 	beq	r2,r3,46034 <_malloc_r+0x788>
   45cb0:	1505c83a 	sub	r2,r2,r20
   45cb4:	1545883a 	add	r2,r2,r21
   45cb8:	10800054 	ori	r2,r2,1
   45cbc:	e0c00017 	ldw	r3,0(fp)
   45cc0:	9d000215 	stw	r20,8(r19)
   45cc4:	a0800115 	stw	r2,4(r20)
   45cc8:	a8c7883a 	add	r3,r21,r3
   45ccc:	e0c00015 	stw	r3,0(fp)
   45cd0:	84c00e26 	beq	r16,r19,45d0c <_malloc_r+0x460>
   45cd4:	018003c4 	movi	r6,15
   45cd8:	3580a72e 	bgeu	r6,r22,45f78 <_malloc_r+0x6cc>
   45cdc:	81400117 	ldw	r5,4(r16)
   45ce0:	013ffe04 	movi	r4,-8
   45ce4:	b0bffd04 	addi	r2,r22,-12
   45ce8:	1104703a 	and	r2,r2,r4
   45cec:	2900004c 	andi	r4,r5,1
   45cf0:	2088b03a 	or	r4,r4,r2
   45cf4:	81000115 	stw	r4,4(r16)
   45cf8:	01400144 	movi	r5,5
   45cfc:	8089883a 	add	r4,r16,r2
   45d00:	21400115 	stw	r5,4(r4)
   45d04:	21400215 	stw	r5,8(r4)
   45d08:	3080cd36 	bltu	r6,r2,46040 <_malloc_r+0x794>
   45d0c:	00800174 	movhi	r2,5
   45d10:	108cbd04 	addi	r2,r2,13044
   45d14:	11000017 	ldw	r4,0(r2)
   45d18:	20c0012e 	bgeu	r4,r3,45d20 <_malloc_r+0x474>
   45d1c:	10c00015 	stw	r3,0(r2)
   45d20:	00800174 	movhi	r2,5
   45d24:	108cbc04 	addi	r2,r2,13040
   45d28:	11000017 	ldw	r4,0(r2)
   45d2c:	9c000217 	ldw	r16,8(r19)
   45d30:	20c0012e 	bgeu	r4,r3,45d38 <_malloc_r+0x48c>
   45d34:	10c00015 	stw	r3,0(r2)
   45d38:	80c00117 	ldw	r3,4(r16)
   45d3c:	00bfff04 	movi	r2,-4
   45d40:	1886703a 	and	r3,r3,r2
   45d44:	1c45c83a 	sub	r2,r3,r17
   45d48:	1c400236 	bltu	r3,r17,45d54 <_malloc_r+0x4a8>
   45d4c:	00c003c4 	movi	r3,15
   45d50:	18800416 	blt	r3,r2,45d64 <_malloc_r+0x4b8>
   45d54:	9009883a 	mov	r4,r18
   45d58:	004d8300 	call	4d830 <__malloc_unlock>
   45d5c:	0005883a 	mov	r2,zero
   45d60:	003f7b06 	br	45b50 <__alt_mem_onchip_memory2_1+0xfffc4b50>
   45d64:	88c00054 	ori	r3,r17,1
   45d68:	80c00115 	stw	r3,4(r16)
   45d6c:	8463883a 	add	r17,r16,r17
   45d70:	10800054 	ori	r2,r2,1
   45d74:	9c400215 	stw	r17,8(r19)
   45d78:	88800115 	stw	r2,4(r17)
   45d7c:	9009883a 	mov	r4,r18
   45d80:	004d8300 	call	4d830 <__malloc_unlock>
   45d84:	80800204 	addi	r2,r16,8
   45d88:	003f7106 	br	45b50 <__alt_mem_onchip_memory2_1+0xfffc4b50>
   45d8c:	00c00504 	movi	r3,20
   45d90:	18804a2e 	bgeu	r3,r2,45ebc <_malloc_r+0x610>
   45d94:	00c01504 	movi	r3,84
   45d98:	18806e36 	bltu	r3,r2,45f54 <_malloc_r+0x6a8>
   45d9c:	8804d33a 	srli	r2,r17,12
   45da0:	12001bc4 	addi	r8,r2,111
   45da4:	11c01b84 	addi	r7,r2,110
   45da8:	4209883a 	add	r4,r8,r8
   45dac:	003edd06 	br	45924 <__alt_mem_onchip_memory2_1+0xfffc4924>
   45db0:	3804d27a 	srli	r2,r7,9
   45db4:	00c00104 	movi	r3,4
   45db8:	1880442e 	bgeu	r3,r2,45ecc <_malloc_r+0x620>
   45dbc:	00c00504 	movi	r3,20
   45dc0:	18808136 	bltu	r3,r2,45fc8 <_malloc_r+0x71c>
   45dc4:	11401704 	addi	r5,r2,92
   45dc8:	10c016c4 	addi	r3,r2,91
   45dcc:	294b883a 	add	r5,r5,r5
   45dd0:	294b883a 	add	r5,r5,r5
   45dd4:	294b883a 	add	r5,r5,r5
   45dd8:	994b883a 	add	r5,r19,r5
   45ddc:	28800017 	ldw	r2,0(r5)
   45de0:	01800174 	movhi	r6,5
   45de4:	297ffe04 	addi	r5,r5,-8
   45de8:	31806904 	addi	r6,r6,420
   45dec:	28806526 	beq	r5,r2,45f84 <_malloc_r+0x6d8>
   45df0:	01bfff04 	movi	r6,-4
   45df4:	10c00117 	ldw	r3,4(r2)
   45df8:	1986703a 	and	r3,r3,r6
   45dfc:	38c0022e 	bgeu	r7,r3,45e08 <_malloc_r+0x55c>
   45e00:	10800217 	ldw	r2,8(r2)
   45e04:	28bffb1e 	bne	r5,r2,45df4 <__alt_mem_onchip_memory2_1+0xfffc4df4>
   45e08:	11400317 	ldw	r5,12(r2)
   45e0c:	98c00117 	ldw	r3,4(r19)
   45e10:	81400315 	stw	r5,12(r16)
   45e14:	80800215 	stw	r2,8(r16)
   45e18:	2c000215 	stw	r16,8(r5)
   45e1c:	14000315 	stw	r16,12(r2)
   45e20:	003ef806 	br	45a04 <__alt_mem_onchip_memory2_1+0xfffc4a04>
   45e24:	88c00054 	ori	r3,r17,1
   45e28:	80c00115 	stw	r3,4(r16)
   45e2c:	8463883a 	add	r17,r16,r17
   45e30:	34400515 	stw	r17,20(r6)
   45e34:	34400415 	stw	r17,16(r6)
   45e38:	10c00054 	ori	r3,r2,1
   45e3c:	8a000315 	stw	r8,12(r17)
   45e40:	8a000215 	stw	r8,8(r17)
   45e44:	88c00115 	stw	r3,4(r17)
   45e48:	88a3883a 	add	r17,r17,r2
   45e4c:	88800015 	stw	r2,0(r17)
   45e50:	9009883a 	mov	r4,r18
   45e54:	004d8300 	call	4d830 <__malloc_unlock>
   45e58:	80800204 	addi	r2,r16,8
   45e5c:	003f3c06 	br	45b50 <__alt_mem_onchip_memory2_1+0xfffc4b50>
   45e60:	30c00117 	ldw	r3,4(r6)
   45e64:	003ee706 	br	45a04 <__alt_mem_onchip_memory2_1+0xfffc4a04>
   45e68:	5ac00044 	addi	r11,r11,1
   45e6c:	588000cc 	andi	r2,r11,3
   45e70:	31800204 	addi	r6,r6,8
   45e74:	103efd1e 	bne	r2,zero,45a6c <__alt_mem_onchip_memory2_1+0xfffc4a6c>
   45e78:	00002406 	br	45f0c <_malloc_r+0x660>
   45e7c:	14000317 	ldw	r16,12(r2)
   45e80:	143f251e 	bne	r2,r16,45b18 <__alt_mem_onchip_memory2_1+0xfffc4b18>
   45e84:	21000084 	addi	r4,r4,2
   45e88:	003ebc06 	br	4597c <__alt_mem_onchip_memory2_1+0xfffc497c>
   45e8c:	8085883a 	add	r2,r16,r2
   45e90:	10c00117 	ldw	r3,4(r2)
   45e94:	81000317 	ldw	r4,12(r16)
   45e98:	81400217 	ldw	r5,8(r16)
   45e9c:	18c00054 	ori	r3,r3,1
   45ea0:	10c00115 	stw	r3,4(r2)
   45ea4:	29000315 	stw	r4,12(r5)
   45ea8:	21400215 	stw	r5,8(r4)
   45eac:	9009883a 	mov	r4,r18
   45eb0:	004d8300 	call	4d830 <__malloc_unlock>
   45eb4:	80800204 	addi	r2,r16,8
   45eb8:	003f2506 	br	45b50 <__alt_mem_onchip_memory2_1+0xfffc4b50>
   45ebc:	12001704 	addi	r8,r2,92
   45ec0:	11c016c4 	addi	r7,r2,91
   45ec4:	4209883a 	add	r4,r8,r8
   45ec8:	003e9606 	br	45924 <__alt_mem_onchip_memory2_1+0xfffc4924>
   45ecc:	3804d1ba 	srli	r2,r7,6
   45ed0:	11400e44 	addi	r5,r2,57
   45ed4:	10c00e04 	addi	r3,r2,56
   45ed8:	294b883a 	add	r5,r5,r5
   45edc:	003fbc06 	br	45dd0 <__alt_mem_onchip_memory2_1+0xfffc4dd0>
   45ee0:	84ff5926 	beq	r16,r19,45c48 <__alt_mem_onchip_memory2_1+0xfffc4c48>
   45ee4:	00800174 	movhi	r2,5
   45ee8:	10806904 	addi	r2,r2,420
   45eec:	14000217 	ldw	r16,8(r2)
   45ef0:	00bfff04 	movi	r2,-4
   45ef4:	80c00117 	ldw	r3,4(r16)
   45ef8:	1886703a 	and	r3,r3,r2
   45efc:	003f9106 	br	45d44 <__alt_mem_onchip_memory2_1+0xfffc4d44>
   45f00:	60800217 	ldw	r2,8(r12)
   45f04:	213fffc4 	addi	r4,r4,-1
   45f08:	1300651e 	bne	r2,r12,460a0 <_malloc_r+0x7f4>
   45f0c:	208000cc 	andi	r2,r4,3
   45f10:	633ffe04 	addi	r12,r12,-8
   45f14:	103ffa1e 	bne	r2,zero,45f00 <__alt_mem_onchip_memory2_1+0xfffc4f00>
   45f18:	98800117 	ldw	r2,4(r19)
   45f1c:	0146303a 	nor	r3,zero,r5
   45f20:	1884703a 	and	r2,r3,r2
   45f24:	98800115 	stw	r2,4(r19)
   45f28:	294b883a 	add	r5,r5,r5
   45f2c:	117f2836 	bltu	r2,r5,45bd0 <__alt_mem_onchip_memory2_1+0xfffc4bd0>
   45f30:	283f2726 	beq	r5,zero,45bd0 <__alt_mem_onchip_memory2_1+0xfffc4bd0>
   45f34:	2886703a 	and	r3,r5,r2
   45f38:	5809883a 	mov	r4,r11
   45f3c:	183ec31e 	bne	r3,zero,45a4c <__alt_mem_onchip_memory2_1+0xfffc4a4c>
   45f40:	294b883a 	add	r5,r5,r5
   45f44:	2886703a 	and	r3,r5,r2
   45f48:	21000104 	addi	r4,r4,4
   45f4c:	183ffc26 	beq	r3,zero,45f40 <__alt_mem_onchip_memory2_1+0xfffc4f40>
   45f50:	003ebe06 	br	45a4c <__alt_mem_onchip_memory2_1+0xfffc4a4c>
   45f54:	00c05504 	movi	r3,340
   45f58:	18801236 	bltu	r3,r2,45fa4 <_malloc_r+0x6f8>
   45f5c:	8804d3fa 	srli	r2,r17,15
   45f60:	12001e04 	addi	r8,r2,120
   45f64:	11c01dc4 	addi	r7,r2,119
   45f68:	4209883a 	add	r4,r8,r8
   45f6c:	003e6d06 	br	45924 <__alt_mem_onchip_memory2_1+0xfffc4924>
   45f70:	00c40004 	movi	r3,4096
   45f74:	003f4606 	br	45c90 <__alt_mem_onchip_memory2_1+0xfffc4c90>
   45f78:	00800044 	movi	r2,1
   45f7c:	a0800115 	stw	r2,4(r20)
   45f80:	003f7406 	br	45d54 <__alt_mem_onchip_memory2_1+0xfffc4d54>
   45f84:	1805d0ba 	srai	r2,r3,2
   45f88:	01c00044 	movi	r7,1
   45f8c:	30c00117 	ldw	r3,4(r6)
   45f90:	388e983a 	sll	r7,r7,r2
   45f94:	2805883a 	mov	r2,r5
   45f98:	38c6b03a 	or	r3,r7,r3
   45f9c:	30c00115 	stw	r3,4(r6)
   45fa0:	003f9b06 	br	45e10 <__alt_mem_onchip_memory2_1+0xfffc4e10>
   45fa4:	00c15504 	movi	r3,1364
   45fa8:	18801a36 	bltu	r3,r2,46014 <_malloc_r+0x768>
   45fac:	8804d4ba 	srli	r2,r17,18
   45fb0:	12001f44 	addi	r8,r2,125
   45fb4:	11c01f04 	addi	r7,r2,124
   45fb8:	4209883a 	add	r4,r8,r8
   45fbc:	003e5906 	br	45924 <__alt_mem_onchip_memory2_1+0xfffc4924>
   45fc0:	ad400404 	addi	r21,r21,16
   45fc4:	003f1706 	br	45c24 <__alt_mem_onchip_memory2_1+0xfffc4c24>
   45fc8:	00c01504 	movi	r3,84
   45fcc:	18802336 	bltu	r3,r2,4605c <_malloc_r+0x7b0>
   45fd0:	3804d33a 	srli	r2,r7,12
   45fd4:	11401bc4 	addi	r5,r2,111
   45fd8:	10c01b84 	addi	r3,r2,110
   45fdc:	294b883a 	add	r5,r5,r5
   45fe0:	003f7b06 	br	45dd0 <__alt_mem_onchip_memory2_1+0xfffc4dd0>
   45fe4:	9c000217 	ldw	r16,8(r19)
   45fe8:	00bfff04 	movi	r2,-4
   45fec:	80c00117 	ldw	r3,4(r16)
   45ff0:	1886703a 	and	r3,r3,r2
   45ff4:	003f5306 	br	45d44 <__alt_mem_onchip_memory2_1+0xfffc4d44>
   45ff8:	3083ffcc 	andi	r2,r6,4095
   45ffc:	103f181e 	bne	r2,zero,45c60 <__alt_mem_onchip_memory2_1+0xfffc4c60>
   46000:	99000217 	ldw	r4,8(r19)
   46004:	b545883a 	add	r2,r22,r21
   46008:	10800054 	ori	r2,r2,1
   4600c:	20800115 	stw	r2,4(r4)
   46010:	003f3e06 	br	45d0c <__alt_mem_onchip_memory2_1+0xfffc4d0c>
   46014:	01003f84 	movi	r4,254
   46018:	02001fc4 	movi	r8,127
   4601c:	01c01f84 	movi	r7,126
   46020:	003e4006 	br	45924 <__alt_mem_onchip_memory2_1+0xfffc4924>
   46024:	00800174 	movhi	r2,5
   46028:	1085f004 	addi	r2,r2,6080
   4602c:	15000015 	stw	r20,0(r2)
   46030:	003f1106 	br	45c78 <__alt_mem_onchip_memory2_1+0xfffc4c78>
   46034:	00800044 	movi	r2,1
   46038:	002b883a 	mov	r21,zero
   4603c:	003f1f06 	br	45cbc <__alt_mem_onchip_memory2_1+0xfffc4cbc>
   46040:	81400204 	addi	r5,r16,8
   46044:	9009883a 	mov	r4,r18
   46048:	0044cc00 	call	44cc0 <_free_r>
   4604c:	00800174 	movhi	r2,5
   46050:	108cc904 	addi	r2,r2,13092
   46054:	10c00017 	ldw	r3,0(r2)
   46058:	003f2c06 	br	45d0c <__alt_mem_onchip_memory2_1+0xfffc4d0c>
   4605c:	00c05504 	movi	r3,340
   46060:	18800536 	bltu	r3,r2,46078 <_malloc_r+0x7cc>
   46064:	3804d3fa 	srli	r2,r7,15
   46068:	11401e04 	addi	r5,r2,120
   4606c:	10c01dc4 	addi	r3,r2,119
   46070:	294b883a 	add	r5,r5,r5
   46074:	003f5606 	br	45dd0 <__alt_mem_onchip_memory2_1+0xfffc4dd0>
   46078:	00c15504 	movi	r3,1364
   4607c:	18800536 	bltu	r3,r2,46094 <_malloc_r+0x7e8>
   46080:	3804d4ba 	srli	r2,r7,18
   46084:	11401f44 	addi	r5,r2,125
   46088:	10c01f04 	addi	r3,r2,124
   4608c:	294b883a 	add	r5,r5,r5
   46090:	003f4f06 	br	45dd0 <__alt_mem_onchip_memory2_1+0xfffc4dd0>
   46094:	01403f84 	movi	r5,254
   46098:	00c01f84 	movi	r3,126
   4609c:	003f4c06 	br	45dd0 <__alt_mem_onchip_memory2_1+0xfffc4dd0>
   460a0:	98800117 	ldw	r2,4(r19)
   460a4:	003fa006 	br	45f28 <__alt_mem_onchip_memory2_1+0xfffc4f28>
   460a8:	8808d0fa 	srli	r4,r17,3
   460ac:	20800044 	addi	r2,r4,1
   460b0:	1085883a 	add	r2,r2,r2
   460b4:	003e9006 	br	45af8 <__alt_mem_onchip_memory2_1+0xfffc4af8>

000460b8 <memchr>:
   460b8:	208000cc 	andi	r2,r4,3
   460bc:	280f883a 	mov	r7,r5
   460c0:	10003426 	beq	r2,zero,46194 <memchr+0xdc>
   460c4:	30bfffc4 	addi	r2,r6,-1
   460c8:	30001a26 	beq	r6,zero,46134 <memchr+0x7c>
   460cc:	20c00003 	ldbu	r3,0(r4)
   460d0:	29803fcc 	andi	r6,r5,255
   460d4:	30c0051e 	bne	r6,r3,460ec <memchr+0x34>
   460d8:	00001806 	br	4613c <memchr+0x84>
   460dc:	10001526 	beq	r2,zero,46134 <memchr+0x7c>
   460e0:	20c00003 	ldbu	r3,0(r4)
   460e4:	10bfffc4 	addi	r2,r2,-1
   460e8:	30c01426 	beq	r6,r3,4613c <memchr+0x84>
   460ec:	21000044 	addi	r4,r4,1
   460f0:	20c000cc 	andi	r3,r4,3
   460f4:	183ff91e 	bne	r3,zero,460dc <__alt_mem_onchip_memory2_1+0xfffc50dc>
   460f8:	020000c4 	movi	r8,3
   460fc:	40801136 	bltu	r8,r2,46144 <memchr+0x8c>
   46100:	10000c26 	beq	r2,zero,46134 <memchr+0x7c>
   46104:	20c00003 	ldbu	r3,0(r4)
   46108:	29403fcc 	andi	r5,r5,255
   4610c:	28c00b26 	beq	r5,r3,4613c <memchr+0x84>
   46110:	20c00044 	addi	r3,r4,1
   46114:	39803fcc 	andi	r6,r7,255
   46118:	2089883a 	add	r4,r4,r2
   4611c:	00000306 	br	4612c <memchr+0x74>
   46120:	18c00044 	addi	r3,r3,1
   46124:	197fffc3 	ldbu	r5,-1(r3)
   46128:	31400526 	beq	r6,r5,46140 <memchr+0x88>
   4612c:	1805883a 	mov	r2,r3
   46130:	20fffb1e 	bne	r4,r3,46120 <__alt_mem_onchip_memory2_1+0xfffc5120>
   46134:	0005883a 	mov	r2,zero
   46138:	f800283a 	ret
   4613c:	2005883a 	mov	r2,r4
   46140:	f800283a 	ret
   46144:	28c03fcc 	andi	r3,r5,255
   46148:	1812923a 	slli	r9,r3,8
   4614c:	02ffbff4 	movhi	r11,65279
   46150:	02a02074 	movhi	r10,32897
   46154:	48d2b03a 	or	r9,r9,r3
   46158:	4806943a 	slli	r3,r9,16
   4615c:	5affbfc4 	addi	r11,r11,-257
   46160:	52a02004 	addi	r10,r10,-32640
   46164:	48d2b03a 	or	r9,r9,r3
   46168:	20c00017 	ldw	r3,0(r4)
   4616c:	48c6f03a 	xor	r3,r9,r3
   46170:	1acd883a 	add	r6,r3,r11
   46174:	00c6303a 	nor	r3,zero,r3
   46178:	30c6703a 	and	r3,r6,r3
   4617c:	1a86703a 	and	r3,r3,r10
   46180:	183fe01e 	bne	r3,zero,46104 <__alt_mem_onchip_memory2_1+0xfffc5104>
   46184:	10bfff04 	addi	r2,r2,-4
   46188:	21000104 	addi	r4,r4,4
   4618c:	40bff636 	bltu	r8,r2,46168 <__alt_mem_onchip_memory2_1+0xfffc5168>
   46190:	003fdb06 	br	46100 <__alt_mem_onchip_memory2_1+0xfffc5100>
   46194:	3005883a 	mov	r2,r6
   46198:	003fd706 	br	460f8 <__alt_mem_onchip_memory2_1+0xfffc50f8>

0004619c <memcpy>:
   4619c:	defffd04 	addi	sp,sp,-12
   461a0:	dfc00215 	stw	ra,8(sp)
   461a4:	dc400115 	stw	r17,4(sp)
   461a8:	dc000015 	stw	r16,0(sp)
   461ac:	00c003c4 	movi	r3,15
   461b0:	2005883a 	mov	r2,r4
   461b4:	1980452e 	bgeu	r3,r6,462cc <memcpy+0x130>
   461b8:	2906b03a 	or	r3,r5,r4
   461bc:	18c000cc 	andi	r3,r3,3
   461c0:	1800441e 	bne	r3,zero,462d4 <memcpy+0x138>
   461c4:	347ffc04 	addi	r17,r6,-16
   461c8:	8822d13a 	srli	r17,r17,4
   461cc:	28c00104 	addi	r3,r5,4
   461d0:	23400104 	addi	r13,r4,4
   461d4:	8820913a 	slli	r16,r17,4
   461d8:	2b000204 	addi	r12,r5,8
   461dc:	22c00204 	addi	r11,r4,8
   461e0:	84000504 	addi	r16,r16,20
   461e4:	2a800304 	addi	r10,r5,12
   461e8:	22400304 	addi	r9,r4,12
   461ec:	2c21883a 	add	r16,r5,r16
   461f0:	2811883a 	mov	r8,r5
   461f4:	200f883a 	mov	r7,r4
   461f8:	41000017 	ldw	r4,0(r8)
   461fc:	1fc00017 	ldw	ra,0(r3)
   46200:	63c00017 	ldw	r15,0(r12)
   46204:	39000015 	stw	r4,0(r7)
   46208:	53800017 	ldw	r14,0(r10)
   4620c:	6fc00015 	stw	ra,0(r13)
   46210:	5bc00015 	stw	r15,0(r11)
   46214:	4b800015 	stw	r14,0(r9)
   46218:	18c00404 	addi	r3,r3,16
   4621c:	39c00404 	addi	r7,r7,16
   46220:	42000404 	addi	r8,r8,16
   46224:	6b400404 	addi	r13,r13,16
   46228:	63000404 	addi	r12,r12,16
   4622c:	5ac00404 	addi	r11,r11,16
   46230:	52800404 	addi	r10,r10,16
   46234:	4a400404 	addi	r9,r9,16
   46238:	1c3fef1e 	bne	r3,r16,461f8 <__alt_mem_onchip_memory2_1+0xfffc51f8>
   4623c:	89c00044 	addi	r7,r17,1
   46240:	380e913a 	slli	r7,r7,4
   46244:	310003cc 	andi	r4,r6,15
   46248:	02c000c4 	movi	r11,3
   4624c:	11c7883a 	add	r3,r2,r7
   46250:	29cb883a 	add	r5,r5,r7
   46254:	5900212e 	bgeu	r11,r4,462dc <memcpy+0x140>
   46258:	1813883a 	mov	r9,r3
   4625c:	2811883a 	mov	r8,r5
   46260:	200f883a 	mov	r7,r4
   46264:	42800017 	ldw	r10,0(r8)
   46268:	4a400104 	addi	r9,r9,4
   4626c:	39ffff04 	addi	r7,r7,-4
   46270:	4abfff15 	stw	r10,-4(r9)
   46274:	42000104 	addi	r8,r8,4
   46278:	59fffa36 	bltu	r11,r7,46264 <__alt_mem_onchip_memory2_1+0xfffc5264>
   4627c:	213fff04 	addi	r4,r4,-4
   46280:	2008d0ba 	srli	r4,r4,2
   46284:	318000cc 	andi	r6,r6,3
   46288:	21000044 	addi	r4,r4,1
   4628c:	2109883a 	add	r4,r4,r4
   46290:	2109883a 	add	r4,r4,r4
   46294:	1907883a 	add	r3,r3,r4
   46298:	290b883a 	add	r5,r5,r4
   4629c:	30000626 	beq	r6,zero,462b8 <memcpy+0x11c>
   462a0:	198d883a 	add	r6,r3,r6
   462a4:	29c00003 	ldbu	r7,0(r5)
   462a8:	18c00044 	addi	r3,r3,1
   462ac:	29400044 	addi	r5,r5,1
   462b0:	19ffffc5 	stb	r7,-1(r3)
   462b4:	19bffb1e 	bne	r3,r6,462a4 <__alt_mem_onchip_memory2_1+0xfffc52a4>
   462b8:	dfc00217 	ldw	ra,8(sp)
   462bc:	dc400117 	ldw	r17,4(sp)
   462c0:	dc000017 	ldw	r16,0(sp)
   462c4:	dec00304 	addi	sp,sp,12
   462c8:	f800283a 	ret
   462cc:	2007883a 	mov	r3,r4
   462d0:	003ff206 	br	4629c <__alt_mem_onchip_memory2_1+0xfffc529c>
   462d4:	2007883a 	mov	r3,r4
   462d8:	003ff106 	br	462a0 <__alt_mem_onchip_memory2_1+0xfffc52a0>
   462dc:	200d883a 	mov	r6,r4
   462e0:	003fee06 	br	4629c <__alt_mem_onchip_memory2_1+0xfffc529c>

000462e4 <memmove>:
   462e4:	2005883a 	mov	r2,r4
   462e8:	29000b2e 	bgeu	r5,r4,46318 <memmove+0x34>
   462ec:	298f883a 	add	r7,r5,r6
   462f0:	21c0092e 	bgeu	r4,r7,46318 <memmove+0x34>
   462f4:	2187883a 	add	r3,r4,r6
   462f8:	198bc83a 	sub	r5,r3,r6
   462fc:	30004826 	beq	r6,zero,46420 <memmove+0x13c>
   46300:	39ffffc4 	addi	r7,r7,-1
   46304:	39000003 	ldbu	r4,0(r7)
   46308:	18ffffc4 	addi	r3,r3,-1
   4630c:	19000005 	stb	r4,0(r3)
   46310:	28fffb1e 	bne	r5,r3,46300 <__alt_mem_onchip_memory2_1+0xfffc5300>
   46314:	f800283a 	ret
   46318:	00c003c4 	movi	r3,15
   4631c:	1980412e 	bgeu	r3,r6,46424 <memmove+0x140>
   46320:	2886b03a 	or	r3,r5,r2
   46324:	18c000cc 	andi	r3,r3,3
   46328:	1800401e 	bne	r3,zero,4642c <memmove+0x148>
   4632c:	33fffc04 	addi	r15,r6,-16
   46330:	781ed13a 	srli	r15,r15,4
   46334:	28c00104 	addi	r3,r5,4
   46338:	13400104 	addi	r13,r2,4
   4633c:	781c913a 	slli	r14,r15,4
   46340:	2b000204 	addi	r12,r5,8
   46344:	12c00204 	addi	r11,r2,8
   46348:	73800504 	addi	r14,r14,20
   4634c:	2a800304 	addi	r10,r5,12
   46350:	12400304 	addi	r9,r2,12
   46354:	2b9d883a 	add	r14,r5,r14
   46358:	2811883a 	mov	r8,r5
   4635c:	100f883a 	mov	r7,r2
   46360:	41000017 	ldw	r4,0(r8)
   46364:	39c00404 	addi	r7,r7,16
   46368:	18c00404 	addi	r3,r3,16
   4636c:	393ffc15 	stw	r4,-16(r7)
   46370:	193ffc17 	ldw	r4,-16(r3)
   46374:	6b400404 	addi	r13,r13,16
   46378:	5ac00404 	addi	r11,r11,16
   4637c:	693ffc15 	stw	r4,-16(r13)
   46380:	61000017 	ldw	r4,0(r12)
   46384:	4a400404 	addi	r9,r9,16
   46388:	42000404 	addi	r8,r8,16
   4638c:	593ffc15 	stw	r4,-16(r11)
   46390:	51000017 	ldw	r4,0(r10)
   46394:	63000404 	addi	r12,r12,16
   46398:	52800404 	addi	r10,r10,16
   4639c:	493ffc15 	stw	r4,-16(r9)
   463a0:	1bbfef1e 	bne	r3,r14,46360 <__alt_mem_onchip_memory2_1+0xfffc5360>
   463a4:	79000044 	addi	r4,r15,1
   463a8:	2008913a 	slli	r4,r4,4
   463ac:	328003cc 	andi	r10,r6,15
   463b0:	02c000c4 	movi	r11,3
   463b4:	1107883a 	add	r3,r2,r4
   463b8:	290b883a 	add	r5,r5,r4
   463bc:	5a801e2e 	bgeu	r11,r10,46438 <memmove+0x154>
   463c0:	1813883a 	mov	r9,r3
   463c4:	2811883a 	mov	r8,r5
   463c8:	500f883a 	mov	r7,r10
   463cc:	41000017 	ldw	r4,0(r8)
   463d0:	4a400104 	addi	r9,r9,4
   463d4:	39ffff04 	addi	r7,r7,-4
   463d8:	493fff15 	stw	r4,-4(r9)
   463dc:	42000104 	addi	r8,r8,4
   463e0:	59fffa36 	bltu	r11,r7,463cc <__alt_mem_onchip_memory2_1+0xfffc53cc>
   463e4:	513fff04 	addi	r4,r10,-4
   463e8:	2008d0ba 	srli	r4,r4,2
   463ec:	318000cc 	andi	r6,r6,3
   463f0:	21000044 	addi	r4,r4,1
   463f4:	2109883a 	add	r4,r4,r4
   463f8:	2109883a 	add	r4,r4,r4
   463fc:	1907883a 	add	r3,r3,r4
   46400:	290b883a 	add	r5,r5,r4
   46404:	30000b26 	beq	r6,zero,46434 <memmove+0x150>
   46408:	198d883a 	add	r6,r3,r6
   4640c:	29c00003 	ldbu	r7,0(r5)
   46410:	18c00044 	addi	r3,r3,1
   46414:	29400044 	addi	r5,r5,1
   46418:	19ffffc5 	stb	r7,-1(r3)
   4641c:	19bffb1e 	bne	r3,r6,4640c <__alt_mem_onchip_memory2_1+0xfffc540c>
   46420:	f800283a 	ret
   46424:	1007883a 	mov	r3,r2
   46428:	003ff606 	br	46404 <__alt_mem_onchip_memory2_1+0xfffc5404>
   4642c:	1007883a 	mov	r3,r2
   46430:	003ff506 	br	46408 <__alt_mem_onchip_memory2_1+0xfffc5408>
   46434:	f800283a 	ret
   46438:	500d883a 	mov	r6,r10
   4643c:	003ff106 	br	46404 <__alt_mem_onchip_memory2_1+0xfffc5404>

00046440 <memset>:
   46440:	20c000cc 	andi	r3,r4,3
   46444:	2005883a 	mov	r2,r4
   46448:	18004426 	beq	r3,zero,4655c <memset+0x11c>
   4644c:	31ffffc4 	addi	r7,r6,-1
   46450:	30004026 	beq	r6,zero,46554 <memset+0x114>
   46454:	2813883a 	mov	r9,r5
   46458:	200d883a 	mov	r6,r4
   4645c:	2007883a 	mov	r3,r4
   46460:	00000406 	br	46474 <memset+0x34>
   46464:	3a3fffc4 	addi	r8,r7,-1
   46468:	31800044 	addi	r6,r6,1
   4646c:	38003926 	beq	r7,zero,46554 <memset+0x114>
   46470:	400f883a 	mov	r7,r8
   46474:	18c00044 	addi	r3,r3,1
   46478:	32400005 	stb	r9,0(r6)
   4647c:	1a0000cc 	andi	r8,r3,3
   46480:	403ff81e 	bne	r8,zero,46464 <__alt_mem_onchip_memory2_1+0xfffc5464>
   46484:	010000c4 	movi	r4,3
   46488:	21c02d2e 	bgeu	r4,r7,46540 <memset+0x100>
   4648c:	29003fcc 	andi	r4,r5,255
   46490:	200c923a 	slli	r6,r4,8
   46494:	3108b03a 	or	r4,r6,r4
   46498:	200c943a 	slli	r6,r4,16
   4649c:	218cb03a 	or	r6,r4,r6
   464a0:	010003c4 	movi	r4,15
   464a4:	21c0182e 	bgeu	r4,r7,46508 <memset+0xc8>
   464a8:	3b3ffc04 	addi	r12,r7,-16
   464ac:	6018d13a 	srli	r12,r12,4
   464b0:	1a000104 	addi	r8,r3,4
   464b4:	1ac00204 	addi	r11,r3,8
   464b8:	6008913a 	slli	r4,r12,4
   464bc:	1a800304 	addi	r10,r3,12
   464c0:	1813883a 	mov	r9,r3
   464c4:	21000504 	addi	r4,r4,20
   464c8:	1909883a 	add	r4,r3,r4
   464cc:	49800015 	stw	r6,0(r9)
   464d0:	41800015 	stw	r6,0(r8)
   464d4:	59800015 	stw	r6,0(r11)
   464d8:	51800015 	stw	r6,0(r10)
   464dc:	42000404 	addi	r8,r8,16
   464e0:	4a400404 	addi	r9,r9,16
   464e4:	5ac00404 	addi	r11,r11,16
   464e8:	52800404 	addi	r10,r10,16
   464ec:	413ff71e 	bne	r8,r4,464cc <__alt_mem_onchip_memory2_1+0xfffc54cc>
   464f0:	63000044 	addi	r12,r12,1
   464f4:	6018913a 	slli	r12,r12,4
   464f8:	39c003cc 	andi	r7,r7,15
   464fc:	010000c4 	movi	r4,3
   46500:	1b07883a 	add	r3,r3,r12
   46504:	21c00e2e 	bgeu	r4,r7,46540 <memset+0x100>
   46508:	1813883a 	mov	r9,r3
   4650c:	3811883a 	mov	r8,r7
   46510:	010000c4 	movi	r4,3
   46514:	49800015 	stw	r6,0(r9)
   46518:	423fff04 	addi	r8,r8,-4
   4651c:	4a400104 	addi	r9,r9,4
   46520:	223ffc36 	bltu	r4,r8,46514 <__alt_mem_onchip_memory2_1+0xfffc5514>
   46524:	393fff04 	addi	r4,r7,-4
   46528:	2008d0ba 	srli	r4,r4,2
   4652c:	39c000cc 	andi	r7,r7,3
   46530:	21000044 	addi	r4,r4,1
   46534:	2109883a 	add	r4,r4,r4
   46538:	2109883a 	add	r4,r4,r4
   4653c:	1907883a 	add	r3,r3,r4
   46540:	38000526 	beq	r7,zero,46558 <memset+0x118>
   46544:	19cf883a 	add	r7,r3,r7
   46548:	19400005 	stb	r5,0(r3)
   4654c:	18c00044 	addi	r3,r3,1
   46550:	38fffd1e 	bne	r7,r3,46548 <__alt_mem_onchip_memory2_1+0xfffc5548>
   46554:	f800283a 	ret
   46558:	f800283a 	ret
   4655c:	2007883a 	mov	r3,r4
   46560:	300f883a 	mov	r7,r6
   46564:	003fc706 	br	46484 <__alt_mem_onchip_memory2_1+0xfffc5484>

00046568 <_Balloc>:
   46568:	20801317 	ldw	r2,76(r4)
   4656c:	defffc04 	addi	sp,sp,-16
   46570:	dc400115 	stw	r17,4(sp)
   46574:	dc000015 	stw	r16,0(sp)
   46578:	dfc00315 	stw	ra,12(sp)
   4657c:	dc800215 	stw	r18,8(sp)
   46580:	2023883a 	mov	r17,r4
   46584:	2821883a 	mov	r16,r5
   46588:	10000f26 	beq	r2,zero,465c8 <_Balloc+0x60>
   4658c:	8407883a 	add	r3,r16,r16
   46590:	18c7883a 	add	r3,r3,r3
   46594:	10c7883a 	add	r3,r2,r3
   46598:	18800017 	ldw	r2,0(r3)
   4659c:	10001126 	beq	r2,zero,465e4 <_Balloc+0x7c>
   465a0:	11000017 	ldw	r4,0(r2)
   465a4:	19000015 	stw	r4,0(r3)
   465a8:	10000415 	stw	zero,16(r2)
   465ac:	10000315 	stw	zero,12(r2)
   465b0:	dfc00317 	ldw	ra,12(sp)
   465b4:	dc800217 	ldw	r18,8(sp)
   465b8:	dc400117 	ldw	r17,4(sp)
   465bc:	dc000017 	ldw	r16,0(sp)
   465c0:	dec00404 	addi	sp,sp,16
   465c4:	f800283a 	ret
   465c8:	01800844 	movi	r6,33
   465cc:	01400104 	movi	r5,4
   465d0:	00494a40 	call	494a4 <_calloc_r>
   465d4:	88801315 	stw	r2,76(r17)
   465d8:	103fec1e 	bne	r2,zero,4658c <__alt_mem_onchip_memory2_1+0xfffc558c>
   465dc:	0005883a 	mov	r2,zero
   465e0:	003ff306 	br	465b0 <__alt_mem_onchip_memory2_1+0xfffc55b0>
   465e4:	01400044 	movi	r5,1
   465e8:	2c24983a 	sll	r18,r5,r16
   465ec:	8809883a 	mov	r4,r17
   465f0:	91800144 	addi	r6,r18,5
   465f4:	318d883a 	add	r6,r6,r6
   465f8:	318d883a 	add	r6,r6,r6
   465fc:	00494a40 	call	494a4 <_calloc_r>
   46600:	103ff626 	beq	r2,zero,465dc <__alt_mem_onchip_memory2_1+0xfffc55dc>
   46604:	14000115 	stw	r16,4(r2)
   46608:	14800215 	stw	r18,8(r2)
   4660c:	003fe606 	br	465a8 <__alt_mem_onchip_memory2_1+0xfffc55a8>

00046610 <_Bfree>:
   46610:	28000826 	beq	r5,zero,46634 <_Bfree+0x24>
   46614:	28c00117 	ldw	r3,4(r5)
   46618:	20801317 	ldw	r2,76(r4)
   4661c:	18c7883a 	add	r3,r3,r3
   46620:	18c7883a 	add	r3,r3,r3
   46624:	10c5883a 	add	r2,r2,r3
   46628:	10c00017 	ldw	r3,0(r2)
   4662c:	28c00015 	stw	r3,0(r5)
   46630:	11400015 	stw	r5,0(r2)
   46634:	f800283a 	ret

00046638 <__multadd>:
   46638:	defffa04 	addi	sp,sp,-24
   4663c:	dc800315 	stw	r18,12(sp)
   46640:	dc400215 	stw	r17,8(sp)
   46644:	dc000115 	stw	r16,4(sp)
   46648:	2823883a 	mov	r17,r5
   4664c:	2c000417 	ldw	r16,16(r5)
   46650:	dfc00515 	stw	ra,20(sp)
   46654:	dcc00415 	stw	r19,16(sp)
   46658:	2025883a 	mov	r18,r4
   4665c:	29400504 	addi	r5,r5,20
   46660:	0011883a 	mov	r8,zero
   46664:	28c00017 	ldw	r3,0(r5)
   46668:	29400104 	addi	r5,r5,4
   4666c:	42000044 	addi	r8,r8,1
   46670:	18bfffcc 	andi	r2,r3,65535
   46674:	1185383a 	mul	r2,r2,r6
   46678:	1806d43a 	srli	r3,r3,16
   4667c:	11cf883a 	add	r7,r2,r7
   46680:	3808d43a 	srli	r4,r7,16
   46684:	1987383a 	mul	r3,r3,r6
   46688:	38bfffcc 	andi	r2,r7,65535
   4668c:	1907883a 	add	r3,r3,r4
   46690:	1808943a 	slli	r4,r3,16
   46694:	180ed43a 	srli	r7,r3,16
   46698:	2085883a 	add	r2,r4,r2
   4669c:	28bfff15 	stw	r2,-4(r5)
   466a0:	443ff016 	blt	r8,r16,46664 <__alt_mem_onchip_memory2_1+0xfffc5664>
   466a4:	38000926 	beq	r7,zero,466cc <__multadd+0x94>
   466a8:	88800217 	ldw	r2,8(r17)
   466ac:	80800f0e 	bge	r16,r2,466ec <__multadd+0xb4>
   466b0:	80800144 	addi	r2,r16,5
   466b4:	1085883a 	add	r2,r2,r2
   466b8:	1085883a 	add	r2,r2,r2
   466bc:	8885883a 	add	r2,r17,r2
   466c0:	11c00015 	stw	r7,0(r2)
   466c4:	84000044 	addi	r16,r16,1
   466c8:	8c000415 	stw	r16,16(r17)
   466cc:	8805883a 	mov	r2,r17
   466d0:	dfc00517 	ldw	ra,20(sp)
   466d4:	dcc00417 	ldw	r19,16(sp)
   466d8:	dc800317 	ldw	r18,12(sp)
   466dc:	dc400217 	ldw	r17,8(sp)
   466e0:	dc000117 	ldw	r16,4(sp)
   466e4:	dec00604 	addi	sp,sp,24
   466e8:	f800283a 	ret
   466ec:	89400117 	ldw	r5,4(r17)
   466f0:	9009883a 	mov	r4,r18
   466f4:	d9c00015 	stw	r7,0(sp)
   466f8:	29400044 	addi	r5,r5,1
   466fc:	00465680 	call	46568 <_Balloc>
   46700:	89800417 	ldw	r6,16(r17)
   46704:	89400304 	addi	r5,r17,12
   46708:	11000304 	addi	r4,r2,12
   4670c:	31800084 	addi	r6,r6,2
   46710:	318d883a 	add	r6,r6,r6
   46714:	318d883a 	add	r6,r6,r6
   46718:	1027883a 	mov	r19,r2
   4671c:	004619c0 	call	4619c <memcpy>
   46720:	d9c00017 	ldw	r7,0(sp)
   46724:	88000a26 	beq	r17,zero,46750 <__multadd+0x118>
   46728:	88c00117 	ldw	r3,4(r17)
   4672c:	90801317 	ldw	r2,76(r18)
   46730:	18c7883a 	add	r3,r3,r3
   46734:	18c7883a 	add	r3,r3,r3
   46738:	10c5883a 	add	r2,r2,r3
   4673c:	10c00017 	ldw	r3,0(r2)
   46740:	88c00015 	stw	r3,0(r17)
   46744:	14400015 	stw	r17,0(r2)
   46748:	9823883a 	mov	r17,r19
   4674c:	003fd806 	br	466b0 <__alt_mem_onchip_memory2_1+0xfffc56b0>
   46750:	9823883a 	mov	r17,r19
   46754:	003fd606 	br	466b0 <__alt_mem_onchip_memory2_1+0xfffc56b0>

00046758 <__s2b>:
   46758:	defff904 	addi	sp,sp,-28
   4675c:	dc400115 	stw	r17,4(sp)
   46760:	dc000015 	stw	r16,0(sp)
   46764:	2023883a 	mov	r17,r4
   46768:	2821883a 	mov	r16,r5
   4676c:	39000204 	addi	r4,r7,8
   46770:	01400244 	movi	r5,9
   46774:	dcc00315 	stw	r19,12(sp)
   46778:	dc800215 	stw	r18,8(sp)
   4677c:	dfc00615 	stw	ra,24(sp)
   46780:	dd400515 	stw	r21,20(sp)
   46784:	dd000415 	stw	r20,16(sp)
   46788:	3825883a 	mov	r18,r7
   4678c:	3027883a 	mov	r19,r6
   46790:	004a7d40 	call	4a7d4 <__divsi3>
   46794:	00c00044 	movi	r3,1
   46798:	000b883a 	mov	r5,zero
   4679c:	1880030e 	bge	r3,r2,467ac <__s2b+0x54>
   467a0:	18c7883a 	add	r3,r3,r3
   467a4:	29400044 	addi	r5,r5,1
   467a8:	18bffd16 	blt	r3,r2,467a0 <__alt_mem_onchip_memory2_1+0xfffc57a0>
   467ac:	8809883a 	mov	r4,r17
   467b0:	00465680 	call	46568 <_Balloc>
   467b4:	d8c00717 	ldw	r3,28(sp)
   467b8:	10c00515 	stw	r3,20(r2)
   467bc:	00c00044 	movi	r3,1
   467c0:	10c00415 	stw	r3,16(r2)
   467c4:	00c00244 	movi	r3,9
   467c8:	1cc0210e 	bge	r3,r19,46850 <__s2b+0xf8>
   467cc:	80eb883a 	add	r21,r16,r3
   467d0:	a829883a 	mov	r20,r21
   467d4:	84e1883a 	add	r16,r16,r19
   467d8:	a1c00007 	ldb	r7,0(r20)
   467dc:	01800284 	movi	r6,10
   467e0:	a5000044 	addi	r20,r20,1
   467e4:	100b883a 	mov	r5,r2
   467e8:	39fff404 	addi	r7,r7,-48
   467ec:	8809883a 	mov	r4,r17
   467f0:	00466380 	call	46638 <__multadd>
   467f4:	a43ff81e 	bne	r20,r16,467d8 <__alt_mem_onchip_memory2_1+0xfffc57d8>
   467f8:	ace1883a 	add	r16,r21,r19
   467fc:	843ffe04 	addi	r16,r16,-8
   46800:	9c800a0e 	bge	r19,r18,4682c <__s2b+0xd4>
   46804:	94e5c83a 	sub	r18,r18,r19
   46808:	84a5883a 	add	r18,r16,r18
   4680c:	81c00007 	ldb	r7,0(r16)
   46810:	01800284 	movi	r6,10
   46814:	84000044 	addi	r16,r16,1
   46818:	100b883a 	mov	r5,r2
   4681c:	39fff404 	addi	r7,r7,-48
   46820:	8809883a 	mov	r4,r17
   46824:	00466380 	call	46638 <__multadd>
   46828:	84bff81e 	bne	r16,r18,4680c <__alt_mem_onchip_memory2_1+0xfffc580c>
   4682c:	dfc00617 	ldw	ra,24(sp)
   46830:	dd400517 	ldw	r21,20(sp)
   46834:	dd000417 	ldw	r20,16(sp)
   46838:	dcc00317 	ldw	r19,12(sp)
   4683c:	dc800217 	ldw	r18,8(sp)
   46840:	dc400117 	ldw	r17,4(sp)
   46844:	dc000017 	ldw	r16,0(sp)
   46848:	dec00704 	addi	sp,sp,28
   4684c:	f800283a 	ret
   46850:	84000284 	addi	r16,r16,10
   46854:	1827883a 	mov	r19,r3
   46858:	003fe906 	br	46800 <__alt_mem_onchip_memory2_1+0xfffc5800>

0004685c <__hi0bits>:
   4685c:	20bfffec 	andhi	r2,r4,65535
   46860:	1000141e 	bne	r2,zero,468b4 <__hi0bits+0x58>
   46864:	2008943a 	slli	r4,r4,16
   46868:	00800404 	movi	r2,16
   4686c:	20ffc02c 	andhi	r3,r4,65280
   46870:	1800021e 	bne	r3,zero,4687c <__hi0bits+0x20>
   46874:	2008923a 	slli	r4,r4,8
   46878:	10800204 	addi	r2,r2,8
   4687c:	20fc002c 	andhi	r3,r4,61440
   46880:	1800021e 	bne	r3,zero,4688c <__hi0bits+0x30>
   46884:	2008913a 	slli	r4,r4,4
   46888:	10800104 	addi	r2,r2,4
   4688c:	20f0002c 	andhi	r3,r4,49152
   46890:	1800031e 	bne	r3,zero,468a0 <__hi0bits+0x44>
   46894:	2109883a 	add	r4,r4,r4
   46898:	10800084 	addi	r2,r2,2
   4689c:	2109883a 	add	r4,r4,r4
   468a0:	20000316 	blt	r4,zero,468b0 <__hi0bits+0x54>
   468a4:	2110002c 	andhi	r4,r4,16384
   468a8:	2000041e 	bne	r4,zero,468bc <__hi0bits+0x60>
   468ac:	00800804 	movi	r2,32
   468b0:	f800283a 	ret
   468b4:	0005883a 	mov	r2,zero
   468b8:	003fec06 	br	4686c <__alt_mem_onchip_memory2_1+0xfffc586c>
   468bc:	10800044 	addi	r2,r2,1
   468c0:	f800283a 	ret

000468c4 <__lo0bits>:
   468c4:	20c00017 	ldw	r3,0(r4)
   468c8:	188001cc 	andi	r2,r3,7
   468cc:	10000826 	beq	r2,zero,468f0 <__lo0bits+0x2c>
   468d0:	1880004c 	andi	r2,r3,1
   468d4:	1000211e 	bne	r2,zero,4695c <__lo0bits+0x98>
   468d8:	1880008c 	andi	r2,r3,2
   468dc:	1000211e 	bne	r2,zero,46964 <__lo0bits+0xa0>
   468e0:	1806d0ba 	srli	r3,r3,2
   468e4:	00800084 	movi	r2,2
   468e8:	20c00015 	stw	r3,0(r4)
   468ec:	f800283a 	ret
   468f0:	18bfffcc 	andi	r2,r3,65535
   468f4:	10001326 	beq	r2,zero,46944 <__lo0bits+0x80>
   468f8:	0005883a 	mov	r2,zero
   468fc:	19403fcc 	andi	r5,r3,255
   46900:	2800021e 	bne	r5,zero,4690c <__lo0bits+0x48>
   46904:	1806d23a 	srli	r3,r3,8
   46908:	10800204 	addi	r2,r2,8
   4690c:	194003cc 	andi	r5,r3,15
   46910:	2800021e 	bne	r5,zero,4691c <__lo0bits+0x58>
   46914:	1806d13a 	srli	r3,r3,4
   46918:	10800104 	addi	r2,r2,4
   4691c:	194000cc 	andi	r5,r3,3
   46920:	2800021e 	bne	r5,zero,4692c <__lo0bits+0x68>
   46924:	1806d0ba 	srli	r3,r3,2
   46928:	10800084 	addi	r2,r2,2
   4692c:	1940004c 	andi	r5,r3,1
   46930:	2800081e 	bne	r5,zero,46954 <__lo0bits+0x90>
   46934:	1806d07a 	srli	r3,r3,1
   46938:	1800051e 	bne	r3,zero,46950 <__lo0bits+0x8c>
   4693c:	00800804 	movi	r2,32
   46940:	f800283a 	ret
   46944:	1806d43a 	srli	r3,r3,16
   46948:	00800404 	movi	r2,16
   4694c:	003feb06 	br	468fc <__alt_mem_onchip_memory2_1+0xfffc58fc>
   46950:	10800044 	addi	r2,r2,1
   46954:	20c00015 	stw	r3,0(r4)
   46958:	f800283a 	ret
   4695c:	0005883a 	mov	r2,zero
   46960:	f800283a 	ret
   46964:	1806d07a 	srli	r3,r3,1
   46968:	00800044 	movi	r2,1
   4696c:	20c00015 	stw	r3,0(r4)
   46970:	f800283a 	ret

00046974 <__i2b>:
   46974:	defffd04 	addi	sp,sp,-12
   46978:	dc000015 	stw	r16,0(sp)
   4697c:	04000044 	movi	r16,1
   46980:	dc400115 	stw	r17,4(sp)
   46984:	2823883a 	mov	r17,r5
   46988:	800b883a 	mov	r5,r16
   4698c:	dfc00215 	stw	ra,8(sp)
   46990:	00465680 	call	46568 <_Balloc>
   46994:	14400515 	stw	r17,20(r2)
   46998:	14000415 	stw	r16,16(r2)
   4699c:	dfc00217 	ldw	ra,8(sp)
   469a0:	dc400117 	ldw	r17,4(sp)
   469a4:	dc000017 	ldw	r16,0(sp)
   469a8:	dec00304 	addi	sp,sp,12
   469ac:	f800283a 	ret

000469b0 <__multiply>:
   469b0:	defffa04 	addi	sp,sp,-24
   469b4:	dcc00315 	stw	r19,12(sp)
   469b8:	dc800215 	stw	r18,8(sp)
   469bc:	34c00417 	ldw	r19,16(r6)
   469c0:	2c800417 	ldw	r18,16(r5)
   469c4:	dd000415 	stw	r20,16(sp)
   469c8:	dc400115 	stw	r17,4(sp)
   469cc:	dfc00515 	stw	ra,20(sp)
   469d0:	dc000015 	stw	r16,0(sp)
   469d4:	2829883a 	mov	r20,r5
   469d8:	3023883a 	mov	r17,r6
   469dc:	94c0050e 	bge	r18,r19,469f4 <__multiply+0x44>
   469e0:	9007883a 	mov	r3,r18
   469e4:	3029883a 	mov	r20,r6
   469e8:	9825883a 	mov	r18,r19
   469ec:	2823883a 	mov	r17,r5
   469f0:	1827883a 	mov	r19,r3
   469f4:	a0800217 	ldw	r2,8(r20)
   469f8:	94e1883a 	add	r16,r18,r19
   469fc:	a1400117 	ldw	r5,4(r20)
   46a00:	1400010e 	bge	r2,r16,46a08 <__multiply+0x58>
   46a04:	29400044 	addi	r5,r5,1
   46a08:	00465680 	call	46568 <_Balloc>
   46a0c:	8415883a 	add	r10,r16,r16
   46a10:	12c00504 	addi	r11,r2,20
   46a14:	5295883a 	add	r10,r10,r10
   46a18:	5a95883a 	add	r10,r11,r10
   46a1c:	5807883a 	mov	r3,r11
   46a20:	5a80032e 	bgeu	r11,r10,46a30 <__multiply+0x80>
   46a24:	18000015 	stw	zero,0(r3)
   46a28:	18c00104 	addi	r3,r3,4
   46a2c:	1abffd36 	bltu	r3,r10,46a24 <__alt_mem_onchip_memory2_1+0xfffc5a24>
   46a30:	9ce7883a 	add	r19,r19,r19
   46a34:	94a5883a 	add	r18,r18,r18
   46a38:	89800504 	addi	r6,r17,20
   46a3c:	9ce7883a 	add	r19,r19,r19
   46a40:	a3400504 	addi	r13,r20,20
   46a44:	94a5883a 	add	r18,r18,r18
   46a48:	34d9883a 	add	r12,r6,r19
   46a4c:	6c93883a 	add	r9,r13,r18
   46a50:	3300422e 	bgeu	r6,r12,46b5c <__multiply+0x1ac>
   46a54:	37c00017 	ldw	ra,0(r6)
   46a58:	fbffffcc 	andi	r15,ra,65535
   46a5c:	78001b26 	beq	r15,zero,46acc <__multiply+0x11c>
   46a60:	5811883a 	mov	r8,r11
   46a64:	681d883a 	mov	r14,r13
   46a68:	000f883a 	mov	r7,zero
   46a6c:	71000017 	ldw	r4,0(r14)
   46a70:	40c00017 	ldw	r3,0(r8)
   46a74:	73800104 	addi	r14,r14,4
   46a78:	217fffcc 	andi	r5,r4,65535
   46a7c:	2bcb383a 	mul	r5,r5,r15
   46a80:	2008d43a 	srli	r4,r4,16
   46a84:	1c7fffcc 	andi	r17,r3,65535
   46a88:	2c4b883a 	add	r5,r5,r17
   46a8c:	29cb883a 	add	r5,r5,r7
   46a90:	23c9383a 	mul	r4,r4,r15
   46a94:	1806d43a 	srli	r3,r3,16
   46a98:	280ed43a 	srli	r7,r5,16
   46a9c:	297fffcc 	andi	r5,r5,65535
   46aa0:	20c7883a 	add	r3,r4,r3
   46aa4:	19c7883a 	add	r3,r3,r7
   46aa8:	1808943a 	slli	r4,r3,16
   46aac:	4023883a 	mov	r17,r8
   46ab0:	180ed43a 	srli	r7,r3,16
   46ab4:	214ab03a 	or	r5,r4,r5
   46ab8:	41400015 	stw	r5,0(r8)
   46abc:	42000104 	addi	r8,r8,4
   46ac0:	727fea36 	bltu	r14,r9,46a6c <__alt_mem_onchip_memory2_1+0xfffc5a6c>
   46ac4:	89c00115 	stw	r7,4(r17)
   46ac8:	37c00017 	ldw	ra,0(r6)
   46acc:	f83ed43a 	srli	ra,ra,16
   46ad0:	f8001f26 	beq	ra,zero,46b50 <__multiply+0x1a0>
   46ad4:	58c00017 	ldw	r3,0(r11)
   46ad8:	681d883a 	mov	r14,r13
   46adc:	581f883a 	mov	r15,r11
   46ae0:	1811883a 	mov	r8,r3
   46ae4:	5825883a 	mov	r18,r11
   46ae8:	000f883a 	mov	r7,zero
   46aec:	00000106 	br	46af4 <__multiply+0x144>
   46af0:	8825883a 	mov	r18,r17
   46af4:	7140000b 	ldhu	r5,0(r14)
   46af8:	4010d43a 	srli	r8,r8,16
   46afc:	193fffcc 	andi	r4,r3,65535
   46b00:	2fcb383a 	mul	r5,r5,ra
   46b04:	7bc00104 	addi	r15,r15,4
   46b08:	73800104 	addi	r14,r14,4
   46b0c:	2a0b883a 	add	r5,r5,r8
   46b10:	29cb883a 	add	r5,r5,r7
   46b14:	2806943a 	slli	r3,r5,16
   46b18:	94400104 	addi	r17,r18,4
   46b1c:	280ad43a 	srli	r5,r5,16
   46b20:	1908b03a 	or	r4,r3,r4
   46b24:	793fff15 	stw	r4,-4(r15)
   46b28:	70ffff17 	ldw	r3,-4(r14)
   46b2c:	8a000017 	ldw	r8,0(r17)
   46b30:	1806d43a 	srli	r3,r3,16
   46b34:	413fffcc 	andi	r4,r8,65535
   46b38:	1fc7383a 	mul	r3,r3,ra
   46b3c:	1907883a 	add	r3,r3,r4
   46b40:	1947883a 	add	r3,r3,r5
   46b44:	180ed43a 	srli	r7,r3,16
   46b48:	727fe936 	bltu	r14,r9,46af0 <__alt_mem_onchip_memory2_1+0xfffc5af0>
   46b4c:	90c00115 	stw	r3,4(r18)
   46b50:	31800104 	addi	r6,r6,4
   46b54:	5ac00104 	addi	r11,r11,4
   46b58:	333fbe36 	bltu	r6,r12,46a54 <__alt_mem_onchip_memory2_1+0xfffc5a54>
   46b5c:	0400090e 	bge	zero,r16,46b84 <__multiply+0x1d4>
   46b60:	50ffff17 	ldw	r3,-4(r10)
   46b64:	52bfff04 	addi	r10,r10,-4
   46b68:	18000326 	beq	r3,zero,46b78 <__multiply+0x1c8>
   46b6c:	00000506 	br	46b84 <__multiply+0x1d4>
   46b70:	50c00017 	ldw	r3,0(r10)
   46b74:	1800031e 	bne	r3,zero,46b84 <__multiply+0x1d4>
   46b78:	843fffc4 	addi	r16,r16,-1
   46b7c:	52bfff04 	addi	r10,r10,-4
   46b80:	803ffb1e 	bne	r16,zero,46b70 <__alt_mem_onchip_memory2_1+0xfffc5b70>
   46b84:	14000415 	stw	r16,16(r2)
   46b88:	dfc00517 	ldw	ra,20(sp)
   46b8c:	dd000417 	ldw	r20,16(sp)
   46b90:	dcc00317 	ldw	r19,12(sp)
   46b94:	dc800217 	ldw	r18,8(sp)
   46b98:	dc400117 	ldw	r17,4(sp)
   46b9c:	dc000017 	ldw	r16,0(sp)
   46ba0:	dec00604 	addi	sp,sp,24
   46ba4:	f800283a 	ret

00046ba8 <__pow5mult>:
   46ba8:	defffa04 	addi	sp,sp,-24
   46bac:	dcc00315 	stw	r19,12(sp)
   46bb0:	dc000015 	stw	r16,0(sp)
   46bb4:	dfc00515 	stw	ra,20(sp)
   46bb8:	dd000415 	stw	r20,16(sp)
   46bbc:	dc800215 	stw	r18,8(sp)
   46bc0:	dc400115 	stw	r17,4(sp)
   46bc4:	308000cc 	andi	r2,r6,3
   46bc8:	3021883a 	mov	r16,r6
   46bcc:	2027883a 	mov	r19,r4
   46bd0:	10002f1e 	bne	r2,zero,46c90 <__pow5mult+0xe8>
   46bd4:	2825883a 	mov	r18,r5
   46bd8:	8021d0ba 	srai	r16,r16,2
   46bdc:	80001a26 	beq	r16,zero,46c48 <__pow5mult+0xa0>
   46be0:	9c401217 	ldw	r17,72(r19)
   46be4:	8800061e 	bne	r17,zero,46c00 <__pow5mult+0x58>
   46be8:	00003406 	br	46cbc <__pow5mult+0x114>
   46bec:	8021d07a 	srai	r16,r16,1
   46bf0:	80001526 	beq	r16,zero,46c48 <__pow5mult+0xa0>
   46bf4:	88800017 	ldw	r2,0(r17)
   46bf8:	10001c26 	beq	r2,zero,46c6c <__pow5mult+0xc4>
   46bfc:	1023883a 	mov	r17,r2
   46c00:	8080004c 	andi	r2,r16,1
   46c04:	103ff926 	beq	r2,zero,46bec <__alt_mem_onchip_memory2_1+0xfffc5bec>
   46c08:	880d883a 	mov	r6,r17
   46c0c:	900b883a 	mov	r5,r18
   46c10:	9809883a 	mov	r4,r19
   46c14:	00469b00 	call	469b0 <__multiply>
   46c18:	90001b26 	beq	r18,zero,46c88 <__pow5mult+0xe0>
   46c1c:	91000117 	ldw	r4,4(r18)
   46c20:	98c01317 	ldw	r3,76(r19)
   46c24:	8021d07a 	srai	r16,r16,1
   46c28:	2109883a 	add	r4,r4,r4
   46c2c:	2109883a 	add	r4,r4,r4
   46c30:	1907883a 	add	r3,r3,r4
   46c34:	19000017 	ldw	r4,0(r3)
   46c38:	91000015 	stw	r4,0(r18)
   46c3c:	1c800015 	stw	r18,0(r3)
   46c40:	1025883a 	mov	r18,r2
   46c44:	803feb1e 	bne	r16,zero,46bf4 <__alt_mem_onchip_memory2_1+0xfffc5bf4>
   46c48:	9005883a 	mov	r2,r18
   46c4c:	dfc00517 	ldw	ra,20(sp)
   46c50:	dd000417 	ldw	r20,16(sp)
   46c54:	dcc00317 	ldw	r19,12(sp)
   46c58:	dc800217 	ldw	r18,8(sp)
   46c5c:	dc400117 	ldw	r17,4(sp)
   46c60:	dc000017 	ldw	r16,0(sp)
   46c64:	dec00604 	addi	sp,sp,24
   46c68:	f800283a 	ret
   46c6c:	880d883a 	mov	r6,r17
   46c70:	880b883a 	mov	r5,r17
   46c74:	9809883a 	mov	r4,r19
   46c78:	00469b00 	call	469b0 <__multiply>
   46c7c:	88800015 	stw	r2,0(r17)
   46c80:	10000015 	stw	zero,0(r2)
   46c84:	003fdd06 	br	46bfc <__alt_mem_onchip_memory2_1+0xfffc5bfc>
   46c88:	1025883a 	mov	r18,r2
   46c8c:	003fd706 	br	46bec <__alt_mem_onchip_memory2_1+0xfffc5bec>
   46c90:	10bfffc4 	addi	r2,r2,-1
   46c94:	1085883a 	add	r2,r2,r2
   46c98:	00c00174 	movhi	r3,5
   46c9c:	18fea404 	addi	r3,r3,-1392
   46ca0:	1085883a 	add	r2,r2,r2
   46ca4:	1885883a 	add	r2,r3,r2
   46ca8:	11800017 	ldw	r6,0(r2)
   46cac:	000f883a 	mov	r7,zero
   46cb0:	00466380 	call	46638 <__multadd>
   46cb4:	1025883a 	mov	r18,r2
   46cb8:	003fc706 	br	46bd8 <__alt_mem_onchip_memory2_1+0xfffc5bd8>
   46cbc:	05000044 	movi	r20,1
   46cc0:	a00b883a 	mov	r5,r20
   46cc4:	9809883a 	mov	r4,r19
   46cc8:	00465680 	call	46568 <_Balloc>
   46ccc:	1023883a 	mov	r17,r2
   46cd0:	00809c44 	movi	r2,625
   46cd4:	88800515 	stw	r2,20(r17)
   46cd8:	8d000415 	stw	r20,16(r17)
   46cdc:	9c401215 	stw	r17,72(r19)
   46ce0:	88000015 	stw	zero,0(r17)
   46ce4:	003fc606 	br	46c00 <__alt_mem_onchip_memory2_1+0xfffc5c00>

00046ce8 <__lshift>:
   46ce8:	defff904 	addi	sp,sp,-28
   46cec:	dd400515 	stw	r21,20(sp)
   46cf0:	dcc00315 	stw	r19,12(sp)
   46cf4:	302bd17a 	srai	r21,r6,5
   46cf8:	2cc00417 	ldw	r19,16(r5)
   46cfc:	28800217 	ldw	r2,8(r5)
   46d00:	dd000415 	stw	r20,16(sp)
   46d04:	ace7883a 	add	r19,r21,r19
   46d08:	dc800215 	stw	r18,8(sp)
   46d0c:	dc400115 	stw	r17,4(sp)
   46d10:	dc000015 	stw	r16,0(sp)
   46d14:	dfc00615 	stw	ra,24(sp)
   46d18:	9c000044 	addi	r16,r19,1
   46d1c:	2823883a 	mov	r17,r5
   46d20:	3029883a 	mov	r20,r6
   46d24:	2025883a 	mov	r18,r4
   46d28:	29400117 	ldw	r5,4(r5)
   46d2c:	1400030e 	bge	r2,r16,46d3c <__lshift+0x54>
   46d30:	1085883a 	add	r2,r2,r2
   46d34:	29400044 	addi	r5,r5,1
   46d38:	143ffd16 	blt	r2,r16,46d30 <__alt_mem_onchip_memory2_1+0xfffc5d30>
   46d3c:	9009883a 	mov	r4,r18
   46d40:	00465680 	call	46568 <_Balloc>
   46d44:	10c00504 	addi	r3,r2,20
   46d48:	0540070e 	bge	zero,r21,46d68 <__lshift+0x80>
   46d4c:	ad6b883a 	add	r21,r21,r21
   46d50:	ad6b883a 	add	r21,r21,r21
   46d54:	1809883a 	mov	r4,r3
   46d58:	1d47883a 	add	r3,r3,r21
   46d5c:	20000015 	stw	zero,0(r4)
   46d60:	21000104 	addi	r4,r4,4
   46d64:	193ffd1e 	bne	r3,r4,46d5c <__alt_mem_onchip_memory2_1+0xfffc5d5c>
   46d68:	8a000417 	ldw	r8,16(r17)
   46d6c:	89000504 	addi	r4,r17,20
   46d70:	a18007cc 	andi	r6,r20,31
   46d74:	4211883a 	add	r8,r8,r8
   46d78:	4211883a 	add	r8,r8,r8
   46d7c:	2211883a 	add	r8,r4,r8
   46d80:	30002326 	beq	r6,zero,46e10 <__lshift+0x128>
   46d84:	02400804 	movi	r9,32
   46d88:	4993c83a 	sub	r9,r9,r6
   46d8c:	000b883a 	mov	r5,zero
   46d90:	21c00017 	ldw	r7,0(r4)
   46d94:	1815883a 	mov	r10,r3
   46d98:	18c00104 	addi	r3,r3,4
   46d9c:	398e983a 	sll	r7,r7,r6
   46da0:	21000104 	addi	r4,r4,4
   46da4:	394ab03a 	or	r5,r7,r5
   46da8:	197fff15 	stw	r5,-4(r3)
   46dac:	217fff17 	ldw	r5,-4(r4)
   46db0:	2a4ad83a 	srl	r5,r5,r9
   46db4:	223ff636 	bltu	r4,r8,46d90 <__alt_mem_onchip_memory2_1+0xfffc5d90>
   46db8:	51400115 	stw	r5,4(r10)
   46dbc:	28001a1e 	bne	r5,zero,46e28 <__lshift+0x140>
   46dc0:	843fffc4 	addi	r16,r16,-1
   46dc4:	14000415 	stw	r16,16(r2)
   46dc8:	88000826 	beq	r17,zero,46dec <__lshift+0x104>
   46dcc:	89000117 	ldw	r4,4(r17)
   46dd0:	90c01317 	ldw	r3,76(r18)
   46dd4:	2109883a 	add	r4,r4,r4
   46dd8:	2109883a 	add	r4,r4,r4
   46ddc:	1907883a 	add	r3,r3,r4
   46de0:	19000017 	ldw	r4,0(r3)
   46de4:	89000015 	stw	r4,0(r17)
   46de8:	1c400015 	stw	r17,0(r3)
   46dec:	dfc00617 	ldw	ra,24(sp)
   46df0:	dd400517 	ldw	r21,20(sp)
   46df4:	dd000417 	ldw	r20,16(sp)
   46df8:	dcc00317 	ldw	r19,12(sp)
   46dfc:	dc800217 	ldw	r18,8(sp)
   46e00:	dc400117 	ldw	r17,4(sp)
   46e04:	dc000017 	ldw	r16,0(sp)
   46e08:	dec00704 	addi	sp,sp,28
   46e0c:	f800283a 	ret
   46e10:	21400017 	ldw	r5,0(r4)
   46e14:	18c00104 	addi	r3,r3,4
   46e18:	21000104 	addi	r4,r4,4
   46e1c:	197fff15 	stw	r5,-4(r3)
   46e20:	223ffb36 	bltu	r4,r8,46e10 <__alt_mem_onchip_memory2_1+0xfffc5e10>
   46e24:	003fe606 	br	46dc0 <__alt_mem_onchip_memory2_1+0xfffc5dc0>
   46e28:	9c000084 	addi	r16,r19,2
   46e2c:	003fe406 	br	46dc0 <__alt_mem_onchip_memory2_1+0xfffc5dc0>

00046e30 <__mcmp>:
   46e30:	20800417 	ldw	r2,16(r4)
   46e34:	28c00417 	ldw	r3,16(r5)
   46e38:	10c5c83a 	sub	r2,r2,r3
   46e3c:	1000111e 	bne	r2,zero,46e84 <__mcmp+0x54>
   46e40:	18c7883a 	add	r3,r3,r3
   46e44:	18c7883a 	add	r3,r3,r3
   46e48:	21000504 	addi	r4,r4,20
   46e4c:	29400504 	addi	r5,r5,20
   46e50:	20c5883a 	add	r2,r4,r3
   46e54:	28cb883a 	add	r5,r5,r3
   46e58:	00000106 	br	46e60 <__mcmp+0x30>
   46e5c:	20800a2e 	bgeu	r4,r2,46e88 <__mcmp+0x58>
   46e60:	10bfff04 	addi	r2,r2,-4
   46e64:	297fff04 	addi	r5,r5,-4
   46e68:	11800017 	ldw	r6,0(r2)
   46e6c:	28c00017 	ldw	r3,0(r5)
   46e70:	30fffa26 	beq	r6,r3,46e5c <__alt_mem_onchip_memory2_1+0xfffc5e5c>
   46e74:	30c00236 	bltu	r6,r3,46e80 <__mcmp+0x50>
   46e78:	00800044 	movi	r2,1
   46e7c:	f800283a 	ret
   46e80:	00bfffc4 	movi	r2,-1
   46e84:	f800283a 	ret
   46e88:	0005883a 	mov	r2,zero
   46e8c:	f800283a 	ret

00046e90 <__mdiff>:
   46e90:	28c00417 	ldw	r3,16(r5)
   46e94:	30800417 	ldw	r2,16(r6)
   46e98:	defffa04 	addi	sp,sp,-24
   46e9c:	dcc00315 	stw	r19,12(sp)
   46ea0:	dc800215 	stw	r18,8(sp)
   46ea4:	dfc00515 	stw	ra,20(sp)
   46ea8:	dd000415 	stw	r20,16(sp)
   46eac:	dc400115 	stw	r17,4(sp)
   46eb0:	dc000015 	stw	r16,0(sp)
   46eb4:	1887c83a 	sub	r3,r3,r2
   46eb8:	2825883a 	mov	r18,r5
   46ebc:	3027883a 	mov	r19,r6
   46ec0:	1800141e 	bne	r3,zero,46f14 <__mdiff+0x84>
   46ec4:	1085883a 	add	r2,r2,r2
   46ec8:	1085883a 	add	r2,r2,r2
   46ecc:	2a000504 	addi	r8,r5,20
   46ed0:	34000504 	addi	r16,r6,20
   46ed4:	4087883a 	add	r3,r8,r2
   46ed8:	8085883a 	add	r2,r16,r2
   46edc:	00000106 	br	46ee4 <__mdiff+0x54>
   46ee0:	40c0592e 	bgeu	r8,r3,47048 <__mdiff+0x1b8>
   46ee4:	18ffff04 	addi	r3,r3,-4
   46ee8:	10bfff04 	addi	r2,r2,-4
   46eec:	19c00017 	ldw	r7,0(r3)
   46ef0:	11400017 	ldw	r5,0(r2)
   46ef4:	397ffa26 	beq	r7,r5,46ee0 <__alt_mem_onchip_memory2_1+0xfffc5ee0>
   46ef8:	3940592e 	bgeu	r7,r5,47060 <__mdiff+0x1d0>
   46efc:	9005883a 	mov	r2,r18
   46f00:	4023883a 	mov	r17,r8
   46f04:	9825883a 	mov	r18,r19
   46f08:	05000044 	movi	r20,1
   46f0c:	1027883a 	mov	r19,r2
   46f10:	00000406 	br	46f24 <__mdiff+0x94>
   46f14:	18005616 	blt	r3,zero,47070 <__mdiff+0x1e0>
   46f18:	34400504 	addi	r17,r6,20
   46f1c:	2c000504 	addi	r16,r5,20
   46f20:	0029883a 	mov	r20,zero
   46f24:	91400117 	ldw	r5,4(r18)
   46f28:	00465680 	call	46568 <_Balloc>
   46f2c:	92400417 	ldw	r9,16(r18)
   46f30:	9b000417 	ldw	r12,16(r19)
   46f34:	12c00504 	addi	r11,r2,20
   46f38:	4a51883a 	add	r8,r9,r9
   46f3c:	6319883a 	add	r12,r12,r12
   46f40:	4211883a 	add	r8,r8,r8
   46f44:	6319883a 	add	r12,r12,r12
   46f48:	15000315 	stw	r20,12(r2)
   46f4c:	8211883a 	add	r8,r16,r8
   46f50:	8b19883a 	add	r12,r17,r12
   46f54:	0007883a 	mov	r3,zero
   46f58:	81400017 	ldw	r5,0(r16)
   46f5c:	89c00017 	ldw	r7,0(r17)
   46f60:	59800104 	addi	r6,r11,4
   46f64:	293fffcc 	andi	r4,r5,65535
   46f68:	20c7883a 	add	r3,r4,r3
   46f6c:	393fffcc 	andi	r4,r7,65535
   46f70:	1909c83a 	sub	r4,r3,r4
   46f74:	280ad43a 	srli	r5,r5,16
   46f78:	380ed43a 	srli	r7,r7,16
   46f7c:	2007d43a 	srai	r3,r4,16
   46f80:	213fffcc 	andi	r4,r4,65535
   46f84:	29cbc83a 	sub	r5,r5,r7
   46f88:	28c7883a 	add	r3,r5,r3
   46f8c:	180a943a 	slli	r5,r3,16
   46f90:	8c400104 	addi	r17,r17,4
   46f94:	84000104 	addi	r16,r16,4
   46f98:	2908b03a 	or	r4,r5,r4
   46f9c:	59000015 	stw	r4,0(r11)
   46fa0:	1807d43a 	srai	r3,r3,16
   46fa4:	3015883a 	mov	r10,r6
   46fa8:	3017883a 	mov	r11,r6
   46fac:	8b3fea36 	bltu	r17,r12,46f58 <__alt_mem_onchip_memory2_1+0xfffc5f58>
   46fb0:	8200162e 	bgeu	r16,r8,4700c <__mdiff+0x17c>
   46fb4:	8017883a 	mov	r11,r16
   46fb8:	59400017 	ldw	r5,0(r11)
   46fbc:	31800104 	addi	r6,r6,4
   46fc0:	5ac00104 	addi	r11,r11,4
   46fc4:	293fffcc 	andi	r4,r5,65535
   46fc8:	20c7883a 	add	r3,r4,r3
   46fcc:	280ed43a 	srli	r7,r5,16
   46fd0:	180bd43a 	srai	r5,r3,16
   46fd4:	193fffcc 	andi	r4,r3,65535
   46fd8:	3947883a 	add	r3,r7,r5
   46fdc:	180a943a 	slli	r5,r3,16
   46fe0:	1807d43a 	srai	r3,r3,16
   46fe4:	2908b03a 	or	r4,r5,r4
   46fe8:	313fff15 	stw	r4,-4(r6)
   46fec:	5a3ff236 	bltu	r11,r8,46fb8 <__alt_mem_onchip_memory2_1+0xfffc5fb8>
   46ff0:	0406303a 	nor	r3,zero,r16
   46ff4:	1a07883a 	add	r3,r3,r8
   46ff8:	1806d0ba 	srli	r3,r3,2
   46ffc:	18c00044 	addi	r3,r3,1
   47000:	18c7883a 	add	r3,r3,r3
   47004:	18c7883a 	add	r3,r3,r3
   47008:	50d5883a 	add	r10,r10,r3
   4700c:	50ffff04 	addi	r3,r10,-4
   47010:	2000041e 	bne	r4,zero,47024 <__mdiff+0x194>
   47014:	18ffff04 	addi	r3,r3,-4
   47018:	19000017 	ldw	r4,0(r3)
   4701c:	4a7fffc4 	addi	r9,r9,-1
   47020:	203ffc26 	beq	r4,zero,47014 <__alt_mem_onchip_memory2_1+0xfffc6014>
   47024:	12400415 	stw	r9,16(r2)
   47028:	dfc00517 	ldw	ra,20(sp)
   4702c:	dd000417 	ldw	r20,16(sp)
   47030:	dcc00317 	ldw	r19,12(sp)
   47034:	dc800217 	ldw	r18,8(sp)
   47038:	dc400117 	ldw	r17,4(sp)
   4703c:	dc000017 	ldw	r16,0(sp)
   47040:	dec00604 	addi	sp,sp,24
   47044:	f800283a 	ret
   47048:	000b883a 	mov	r5,zero
   4704c:	00465680 	call	46568 <_Balloc>
   47050:	00c00044 	movi	r3,1
   47054:	10c00415 	stw	r3,16(r2)
   47058:	10000515 	stw	zero,20(r2)
   4705c:	003ff206 	br	47028 <__alt_mem_onchip_memory2_1+0xfffc6028>
   47060:	8023883a 	mov	r17,r16
   47064:	0029883a 	mov	r20,zero
   47068:	4021883a 	mov	r16,r8
   4706c:	003fad06 	br	46f24 <__alt_mem_onchip_memory2_1+0xfffc5f24>
   47070:	9005883a 	mov	r2,r18
   47074:	94400504 	addi	r17,r18,20
   47078:	9c000504 	addi	r16,r19,20
   4707c:	9825883a 	mov	r18,r19
   47080:	05000044 	movi	r20,1
   47084:	1027883a 	mov	r19,r2
   47088:	003fa606 	br	46f24 <__alt_mem_onchip_memory2_1+0xfffc5f24>

0004708c <__ulp>:
   4708c:	295ffc2c 	andhi	r5,r5,32752
   47090:	00bf3034 	movhi	r2,64704
   47094:	2887883a 	add	r3,r5,r2
   47098:	00c0020e 	bge	zero,r3,470a4 <__ulp+0x18>
   4709c:	0005883a 	mov	r2,zero
   470a0:	f800283a 	ret
   470a4:	00c7c83a 	sub	r3,zero,r3
   470a8:	1807d53a 	srai	r3,r3,20
   470ac:	008004c4 	movi	r2,19
   470b0:	10c00b0e 	bge	r2,r3,470e0 <__ulp+0x54>
   470b4:	18bffb04 	addi	r2,r3,-20
   470b8:	01000784 	movi	r4,30
   470bc:	0007883a 	mov	r3,zero
   470c0:	20800516 	blt	r4,r2,470d8 <__ulp+0x4c>
   470c4:	010007c4 	movi	r4,31
   470c8:	2089c83a 	sub	r4,r4,r2
   470cc:	00800044 	movi	r2,1
   470d0:	1104983a 	sll	r2,r2,r4
   470d4:	f800283a 	ret
   470d8:	00800044 	movi	r2,1
   470dc:	f800283a 	ret
   470e0:	01400234 	movhi	r5,8
   470e4:	28c7d83a 	sra	r3,r5,r3
   470e8:	0005883a 	mov	r2,zero
   470ec:	f800283a 	ret

000470f0 <__b2d>:
   470f0:	defffa04 	addi	sp,sp,-24
   470f4:	dc000015 	stw	r16,0(sp)
   470f8:	24000417 	ldw	r16,16(r4)
   470fc:	dc400115 	stw	r17,4(sp)
   47100:	24400504 	addi	r17,r4,20
   47104:	8421883a 	add	r16,r16,r16
   47108:	8421883a 	add	r16,r16,r16
   4710c:	8c21883a 	add	r16,r17,r16
   47110:	dc800215 	stw	r18,8(sp)
   47114:	84bfff17 	ldw	r18,-4(r16)
   47118:	dd000415 	stw	r20,16(sp)
   4711c:	dcc00315 	stw	r19,12(sp)
   47120:	9009883a 	mov	r4,r18
   47124:	2829883a 	mov	r20,r5
   47128:	dfc00515 	stw	ra,20(sp)
   4712c:	004685c0 	call	4685c <__hi0bits>
   47130:	00c00804 	movi	r3,32
   47134:	1889c83a 	sub	r4,r3,r2
   47138:	a1000015 	stw	r4,0(r20)
   4713c:	01000284 	movi	r4,10
   47140:	84ffff04 	addi	r19,r16,-4
   47144:	20801216 	blt	r4,r2,47190 <__b2d+0xa0>
   47148:	018002c4 	movi	r6,11
   4714c:	308dc83a 	sub	r6,r6,r2
   47150:	9186d83a 	srl	r3,r18,r6
   47154:	18cffc34 	orhi	r3,r3,16368
   47158:	8cc0212e 	bgeu	r17,r19,471e0 <__b2d+0xf0>
   4715c:	813ffe17 	ldw	r4,-8(r16)
   47160:	218cd83a 	srl	r6,r4,r6
   47164:	10800544 	addi	r2,r2,21
   47168:	9084983a 	sll	r2,r18,r2
   4716c:	1184b03a 	or	r2,r2,r6
   47170:	dfc00517 	ldw	ra,20(sp)
   47174:	dd000417 	ldw	r20,16(sp)
   47178:	dcc00317 	ldw	r19,12(sp)
   4717c:	dc800217 	ldw	r18,8(sp)
   47180:	dc400117 	ldw	r17,4(sp)
   47184:	dc000017 	ldw	r16,0(sp)
   47188:	dec00604 	addi	sp,sp,24
   4718c:	f800283a 	ret
   47190:	8cc00f2e 	bgeu	r17,r19,471d0 <__b2d+0xe0>
   47194:	117ffd44 	addi	r5,r2,-11
   47198:	80bffe17 	ldw	r2,-8(r16)
   4719c:	28000e26 	beq	r5,zero,471d8 <__b2d+0xe8>
   471a0:	1949c83a 	sub	r4,r3,r5
   471a4:	9164983a 	sll	r18,r18,r5
   471a8:	1106d83a 	srl	r3,r2,r4
   471ac:	81bffe04 	addi	r6,r16,-8
   471b0:	948ffc34 	orhi	r18,r18,16368
   471b4:	90c6b03a 	or	r3,r18,r3
   471b8:	89800e2e 	bgeu	r17,r6,471f4 <__b2d+0x104>
   471bc:	81bffd17 	ldw	r6,-12(r16)
   471c0:	1144983a 	sll	r2,r2,r5
   471c4:	310ad83a 	srl	r5,r6,r4
   471c8:	2884b03a 	or	r2,r5,r2
   471cc:	003fe806 	br	47170 <__alt_mem_onchip_memory2_1+0xfffc6170>
   471d0:	10bffd44 	addi	r2,r2,-11
   471d4:	1000041e 	bne	r2,zero,471e8 <__b2d+0xf8>
   471d8:	90cffc34 	orhi	r3,r18,16368
   471dc:	003fe406 	br	47170 <__alt_mem_onchip_memory2_1+0xfffc6170>
   471e0:	000d883a 	mov	r6,zero
   471e4:	003fdf06 	br	47164 <__alt_mem_onchip_memory2_1+0xfffc6164>
   471e8:	90a4983a 	sll	r18,r18,r2
   471ec:	0005883a 	mov	r2,zero
   471f0:	003ff906 	br	471d8 <__alt_mem_onchip_memory2_1+0xfffc61d8>
   471f4:	1144983a 	sll	r2,r2,r5
   471f8:	003fdd06 	br	47170 <__alt_mem_onchip_memory2_1+0xfffc6170>

000471fc <__d2b>:
   471fc:	defff804 	addi	sp,sp,-32
   47200:	dc000215 	stw	r16,8(sp)
   47204:	3021883a 	mov	r16,r6
   47208:	dc400315 	stw	r17,12(sp)
   4720c:	8022907a 	slli	r17,r16,1
   47210:	dd000615 	stw	r20,24(sp)
   47214:	2829883a 	mov	r20,r5
   47218:	01400044 	movi	r5,1
   4721c:	dcc00515 	stw	r19,20(sp)
   47220:	dc800415 	stw	r18,16(sp)
   47224:	dfc00715 	stw	ra,28(sp)
   47228:	3825883a 	mov	r18,r7
   4722c:	8822d57a 	srli	r17,r17,21
   47230:	00465680 	call	46568 <_Balloc>
   47234:	1027883a 	mov	r19,r2
   47238:	00800434 	movhi	r2,16
   4723c:	10bfffc4 	addi	r2,r2,-1
   47240:	808c703a 	and	r6,r16,r2
   47244:	88000126 	beq	r17,zero,4724c <__d2b+0x50>
   47248:	31800434 	orhi	r6,r6,16
   4724c:	d9800015 	stw	r6,0(sp)
   47250:	a0002426 	beq	r20,zero,472e4 <__d2b+0xe8>
   47254:	d9000104 	addi	r4,sp,4
   47258:	dd000115 	stw	r20,4(sp)
   4725c:	00468c40 	call	468c4 <__lo0bits>
   47260:	d8c00017 	ldw	r3,0(sp)
   47264:	10002f1e 	bne	r2,zero,47324 <__d2b+0x128>
   47268:	d9000117 	ldw	r4,4(sp)
   4726c:	99000515 	stw	r4,20(r19)
   47270:	1821003a 	cmpeq	r16,r3,zero
   47274:	01000084 	movi	r4,2
   47278:	2421c83a 	sub	r16,r4,r16
   4727c:	98c00615 	stw	r3,24(r19)
   47280:	9c000415 	stw	r16,16(r19)
   47284:	88001f1e 	bne	r17,zero,47304 <__d2b+0x108>
   47288:	10bef384 	addi	r2,r2,-1074
   4728c:	90800015 	stw	r2,0(r18)
   47290:	00900034 	movhi	r2,16384
   47294:	10bfffc4 	addi	r2,r2,-1
   47298:	8085883a 	add	r2,r16,r2
   4729c:	1085883a 	add	r2,r2,r2
   472a0:	1085883a 	add	r2,r2,r2
   472a4:	9885883a 	add	r2,r19,r2
   472a8:	11000517 	ldw	r4,20(r2)
   472ac:	8020917a 	slli	r16,r16,5
   472b0:	004685c0 	call	4685c <__hi0bits>
   472b4:	d8c00817 	ldw	r3,32(sp)
   472b8:	8085c83a 	sub	r2,r16,r2
   472bc:	18800015 	stw	r2,0(r3)
   472c0:	9805883a 	mov	r2,r19
   472c4:	dfc00717 	ldw	ra,28(sp)
   472c8:	dd000617 	ldw	r20,24(sp)
   472cc:	dcc00517 	ldw	r19,20(sp)
   472d0:	dc800417 	ldw	r18,16(sp)
   472d4:	dc400317 	ldw	r17,12(sp)
   472d8:	dc000217 	ldw	r16,8(sp)
   472dc:	dec00804 	addi	sp,sp,32
   472e0:	f800283a 	ret
   472e4:	d809883a 	mov	r4,sp
   472e8:	00468c40 	call	468c4 <__lo0bits>
   472ec:	d8c00017 	ldw	r3,0(sp)
   472f0:	04000044 	movi	r16,1
   472f4:	9c000415 	stw	r16,16(r19)
   472f8:	98c00515 	stw	r3,20(r19)
   472fc:	10800804 	addi	r2,r2,32
   47300:	883fe126 	beq	r17,zero,47288 <__alt_mem_onchip_memory2_1+0xfffc6288>
   47304:	00c00d44 	movi	r3,53
   47308:	8c7ef344 	addi	r17,r17,-1075
   4730c:	88a3883a 	add	r17,r17,r2
   47310:	1885c83a 	sub	r2,r3,r2
   47314:	d8c00817 	ldw	r3,32(sp)
   47318:	94400015 	stw	r17,0(r18)
   4731c:	18800015 	stw	r2,0(r3)
   47320:	003fe706 	br	472c0 <__alt_mem_onchip_memory2_1+0xfffc62c0>
   47324:	01000804 	movi	r4,32
   47328:	2089c83a 	sub	r4,r4,r2
   4732c:	1908983a 	sll	r4,r3,r4
   47330:	d9400117 	ldw	r5,4(sp)
   47334:	1886d83a 	srl	r3,r3,r2
   47338:	2148b03a 	or	r4,r4,r5
   4733c:	99000515 	stw	r4,20(r19)
   47340:	d8c00015 	stw	r3,0(sp)
   47344:	003fca06 	br	47270 <__alt_mem_onchip_memory2_1+0xfffc6270>

00047348 <__ratio>:
   47348:	defff904 	addi	sp,sp,-28
   4734c:	dc400315 	stw	r17,12(sp)
   47350:	2823883a 	mov	r17,r5
   47354:	d9400104 	addi	r5,sp,4
   47358:	dfc00615 	stw	ra,24(sp)
   4735c:	dcc00515 	stw	r19,20(sp)
   47360:	dc800415 	stw	r18,16(sp)
   47364:	2027883a 	mov	r19,r4
   47368:	dc000215 	stw	r16,8(sp)
   4736c:	00470f00 	call	470f0 <__b2d>
   47370:	d80b883a 	mov	r5,sp
   47374:	8809883a 	mov	r4,r17
   47378:	1025883a 	mov	r18,r2
   4737c:	1821883a 	mov	r16,r3
   47380:	00470f00 	call	470f0 <__b2d>
   47384:	8a000417 	ldw	r8,16(r17)
   47388:	99000417 	ldw	r4,16(r19)
   4738c:	d9400117 	ldw	r5,4(sp)
   47390:	2209c83a 	sub	r4,r4,r8
   47394:	2010917a 	slli	r8,r4,5
   47398:	d9000017 	ldw	r4,0(sp)
   4739c:	2909c83a 	sub	r4,r5,r4
   473a0:	4109883a 	add	r4,r8,r4
   473a4:	01000e0e 	bge	zero,r4,473e0 <__ratio+0x98>
   473a8:	2008953a 	slli	r4,r4,20
   473ac:	2421883a 	add	r16,r4,r16
   473b0:	100d883a 	mov	r6,r2
   473b4:	180f883a 	mov	r7,r3
   473b8:	9009883a 	mov	r4,r18
   473bc:	800b883a 	mov	r5,r16
   473c0:	004b2340 	call	4b234 <__divdf3>
   473c4:	dfc00617 	ldw	ra,24(sp)
   473c8:	dcc00517 	ldw	r19,20(sp)
   473cc:	dc800417 	ldw	r18,16(sp)
   473d0:	dc400317 	ldw	r17,12(sp)
   473d4:	dc000217 	ldw	r16,8(sp)
   473d8:	dec00704 	addi	sp,sp,28
   473dc:	f800283a 	ret
   473e0:	2008953a 	slli	r4,r4,20
   473e4:	1907c83a 	sub	r3,r3,r4
   473e8:	003ff106 	br	473b0 <__alt_mem_onchip_memory2_1+0xfffc63b0>

000473ec <_mprec_log10>:
   473ec:	defffe04 	addi	sp,sp,-8
   473f0:	dc000015 	stw	r16,0(sp)
   473f4:	dfc00115 	stw	ra,4(sp)
   473f8:	008005c4 	movi	r2,23
   473fc:	2021883a 	mov	r16,r4
   47400:	11000d0e 	bge	r2,r4,47438 <_mprec_log10+0x4c>
   47404:	0005883a 	mov	r2,zero
   47408:	00cffc34 	movhi	r3,16368
   4740c:	843fffc4 	addi	r16,r16,-1
   47410:	000d883a 	mov	r6,zero
   47414:	01d00934 	movhi	r7,16420
   47418:	1009883a 	mov	r4,r2
   4741c:	180b883a 	mov	r5,r3
   47420:	004bd740 	call	4bd74 <__muldf3>
   47424:	803ff91e 	bne	r16,zero,4740c <__alt_mem_onchip_memory2_1+0xfffc640c>
   47428:	dfc00117 	ldw	ra,4(sp)
   4742c:	dc000017 	ldw	r16,0(sp)
   47430:	dec00204 	addi	sp,sp,8
   47434:	f800283a 	ret
   47438:	202090fa 	slli	r16,r4,3
   4743c:	00800174 	movhi	r2,5
   47440:	10bebb04 	addi	r2,r2,-1300
   47444:	1421883a 	add	r16,r2,r16
   47448:	80800017 	ldw	r2,0(r16)
   4744c:	80c00117 	ldw	r3,4(r16)
   47450:	dfc00117 	ldw	ra,4(sp)
   47454:	dc000017 	ldw	r16,0(sp)
   47458:	dec00204 	addi	sp,sp,8
   4745c:	f800283a 	ret

00047460 <__copybits>:
   47460:	297fffc4 	addi	r5,r5,-1
   47464:	280fd17a 	srai	r7,r5,5
   47468:	30c00417 	ldw	r3,16(r6)
   4746c:	30800504 	addi	r2,r6,20
   47470:	39c00044 	addi	r7,r7,1
   47474:	18c7883a 	add	r3,r3,r3
   47478:	39cf883a 	add	r7,r7,r7
   4747c:	18c7883a 	add	r3,r3,r3
   47480:	39cf883a 	add	r7,r7,r7
   47484:	10c7883a 	add	r3,r2,r3
   47488:	21cf883a 	add	r7,r4,r7
   4748c:	10c00d2e 	bgeu	r2,r3,474c4 <__copybits+0x64>
   47490:	200b883a 	mov	r5,r4
   47494:	12000017 	ldw	r8,0(r2)
   47498:	29400104 	addi	r5,r5,4
   4749c:	10800104 	addi	r2,r2,4
   474a0:	2a3fff15 	stw	r8,-4(r5)
   474a4:	10fffb36 	bltu	r2,r3,47494 <__alt_mem_onchip_memory2_1+0xfffc6494>
   474a8:	1985c83a 	sub	r2,r3,r6
   474ac:	10bffac4 	addi	r2,r2,-21
   474b0:	1004d0ba 	srli	r2,r2,2
   474b4:	10800044 	addi	r2,r2,1
   474b8:	1085883a 	add	r2,r2,r2
   474bc:	1085883a 	add	r2,r2,r2
   474c0:	2089883a 	add	r4,r4,r2
   474c4:	21c0032e 	bgeu	r4,r7,474d4 <__copybits+0x74>
   474c8:	20000015 	stw	zero,0(r4)
   474cc:	21000104 	addi	r4,r4,4
   474d0:	21fffd36 	bltu	r4,r7,474c8 <__alt_mem_onchip_memory2_1+0xfffc64c8>
   474d4:	f800283a 	ret

000474d8 <__any_on>:
   474d8:	20c00417 	ldw	r3,16(r4)
   474dc:	2805d17a 	srai	r2,r5,5
   474e0:	21000504 	addi	r4,r4,20
   474e4:	18800d0e 	bge	r3,r2,4751c <__any_on+0x44>
   474e8:	18c7883a 	add	r3,r3,r3
   474ec:	18c7883a 	add	r3,r3,r3
   474f0:	20c7883a 	add	r3,r4,r3
   474f4:	20c0192e 	bgeu	r4,r3,4755c <__any_on+0x84>
   474f8:	18bfff17 	ldw	r2,-4(r3)
   474fc:	18ffff04 	addi	r3,r3,-4
   47500:	1000041e 	bne	r2,zero,47514 <__any_on+0x3c>
   47504:	20c0142e 	bgeu	r4,r3,47558 <__any_on+0x80>
   47508:	18ffff04 	addi	r3,r3,-4
   4750c:	19400017 	ldw	r5,0(r3)
   47510:	283ffc26 	beq	r5,zero,47504 <__alt_mem_onchip_memory2_1+0xfffc6504>
   47514:	00800044 	movi	r2,1
   47518:	f800283a 	ret
   4751c:	10c00a0e 	bge	r2,r3,47548 <__any_on+0x70>
   47520:	1085883a 	add	r2,r2,r2
   47524:	1085883a 	add	r2,r2,r2
   47528:	294007cc 	andi	r5,r5,31
   4752c:	2087883a 	add	r3,r4,r2
   47530:	283ff026 	beq	r5,zero,474f4 <__alt_mem_onchip_memory2_1+0xfffc64f4>
   47534:	19800017 	ldw	r6,0(r3)
   47538:	3144d83a 	srl	r2,r6,r5
   4753c:	114a983a 	sll	r5,r2,r5
   47540:	317ff41e 	bne	r6,r5,47514 <__alt_mem_onchip_memory2_1+0xfffc6514>
   47544:	003feb06 	br	474f4 <__alt_mem_onchip_memory2_1+0xfffc64f4>
   47548:	1085883a 	add	r2,r2,r2
   4754c:	1085883a 	add	r2,r2,r2
   47550:	2087883a 	add	r3,r4,r2
   47554:	003fe706 	br	474f4 <__alt_mem_onchip_memory2_1+0xfffc64f4>
   47558:	f800283a 	ret
   4755c:	0005883a 	mov	r2,zero
   47560:	f800283a 	ret

00047564 <_realloc_r>:
   47564:	defff604 	addi	sp,sp,-40
   47568:	dc800215 	stw	r18,8(sp)
   4756c:	dfc00915 	stw	ra,36(sp)
   47570:	df000815 	stw	fp,32(sp)
   47574:	ddc00715 	stw	r23,28(sp)
   47578:	dd800615 	stw	r22,24(sp)
   4757c:	dd400515 	stw	r21,20(sp)
   47580:	dd000415 	stw	r20,16(sp)
   47584:	dcc00315 	stw	r19,12(sp)
   47588:	dc400115 	stw	r17,4(sp)
   4758c:	dc000015 	stw	r16,0(sp)
   47590:	3025883a 	mov	r18,r6
   47594:	2800b726 	beq	r5,zero,47874 <_realloc_r+0x310>
   47598:	282b883a 	mov	r21,r5
   4759c:	2029883a 	mov	r20,r4
   475a0:	004d80c0 	call	4d80c <__malloc_lock>
   475a4:	a8bfff17 	ldw	r2,-4(r21)
   475a8:	043fff04 	movi	r16,-4
   475ac:	90c002c4 	addi	r3,r18,11
   475b0:	01000584 	movi	r4,22
   475b4:	acfffe04 	addi	r19,r21,-8
   475b8:	1420703a 	and	r16,r2,r16
   475bc:	20c0332e 	bgeu	r4,r3,4768c <_realloc_r+0x128>
   475c0:	047ffe04 	movi	r17,-8
   475c4:	1c62703a 	and	r17,r3,r17
   475c8:	8807883a 	mov	r3,r17
   475cc:	88005816 	blt	r17,zero,47730 <_realloc_r+0x1cc>
   475d0:	8c805736 	bltu	r17,r18,47730 <_realloc_r+0x1cc>
   475d4:	80c0300e 	bge	r16,r3,47698 <_realloc_r+0x134>
   475d8:	07000174 	movhi	fp,5
   475dc:	e7006904 	addi	fp,fp,420
   475e0:	e1c00217 	ldw	r7,8(fp)
   475e4:	9c09883a 	add	r4,r19,r16
   475e8:	22000117 	ldw	r8,4(r4)
   475ec:	21c06326 	beq	r4,r7,4777c <_realloc_r+0x218>
   475f0:	017fff84 	movi	r5,-2
   475f4:	414a703a 	and	r5,r8,r5
   475f8:	214b883a 	add	r5,r4,r5
   475fc:	29800117 	ldw	r6,4(r5)
   47600:	3180004c 	andi	r6,r6,1
   47604:	30003f26 	beq	r6,zero,47704 <_realloc_r+0x1a0>
   47608:	1080004c 	andi	r2,r2,1
   4760c:	10008326 	beq	r2,zero,4781c <_realloc_r+0x2b8>
   47610:	900b883a 	mov	r5,r18
   47614:	a009883a 	mov	r4,r20
   47618:	00458ac0 	call	458ac <_malloc_r>
   4761c:	1025883a 	mov	r18,r2
   47620:	10011e26 	beq	r2,zero,47a9c <_realloc_r+0x538>
   47624:	a93fff17 	ldw	r4,-4(r21)
   47628:	10fffe04 	addi	r3,r2,-8
   4762c:	00bfff84 	movi	r2,-2
   47630:	2084703a 	and	r2,r4,r2
   47634:	9885883a 	add	r2,r19,r2
   47638:	1880ee26 	beq	r3,r2,479f4 <_realloc_r+0x490>
   4763c:	81bfff04 	addi	r6,r16,-4
   47640:	00800904 	movi	r2,36
   47644:	1180b836 	bltu	r2,r6,47928 <_realloc_r+0x3c4>
   47648:	00c004c4 	movi	r3,19
   4764c:	19809636 	bltu	r3,r6,478a8 <_realloc_r+0x344>
   47650:	9005883a 	mov	r2,r18
   47654:	a807883a 	mov	r3,r21
   47658:	19000017 	ldw	r4,0(r3)
   4765c:	11000015 	stw	r4,0(r2)
   47660:	19000117 	ldw	r4,4(r3)
   47664:	11000115 	stw	r4,4(r2)
   47668:	18c00217 	ldw	r3,8(r3)
   4766c:	10c00215 	stw	r3,8(r2)
   47670:	a80b883a 	mov	r5,r21
   47674:	a009883a 	mov	r4,r20
   47678:	0044cc00 	call	44cc0 <_free_r>
   4767c:	a009883a 	mov	r4,r20
   47680:	004d8300 	call	4d830 <__malloc_unlock>
   47684:	9005883a 	mov	r2,r18
   47688:	00001206 	br	476d4 <_realloc_r+0x170>
   4768c:	00c00404 	movi	r3,16
   47690:	1823883a 	mov	r17,r3
   47694:	003fce06 	br	475d0 <__alt_mem_onchip_memory2_1+0xfffc65d0>
   47698:	a825883a 	mov	r18,r21
   4769c:	8445c83a 	sub	r2,r16,r17
   476a0:	00c003c4 	movi	r3,15
   476a4:	18802636 	bltu	r3,r2,47740 <_realloc_r+0x1dc>
   476a8:	99800117 	ldw	r6,4(r19)
   476ac:	9c07883a 	add	r3,r19,r16
   476b0:	3180004c 	andi	r6,r6,1
   476b4:	3420b03a 	or	r16,r6,r16
   476b8:	9c000115 	stw	r16,4(r19)
   476bc:	18800117 	ldw	r2,4(r3)
   476c0:	10800054 	ori	r2,r2,1
   476c4:	18800115 	stw	r2,4(r3)
   476c8:	a009883a 	mov	r4,r20
   476cc:	004d8300 	call	4d830 <__malloc_unlock>
   476d0:	9005883a 	mov	r2,r18
   476d4:	dfc00917 	ldw	ra,36(sp)
   476d8:	df000817 	ldw	fp,32(sp)
   476dc:	ddc00717 	ldw	r23,28(sp)
   476e0:	dd800617 	ldw	r22,24(sp)
   476e4:	dd400517 	ldw	r21,20(sp)
   476e8:	dd000417 	ldw	r20,16(sp)
   476ec:	dcc00317 	ldw	r19,12(sp)
   476f0:	dc800217 	ldw	r18,8(sp)
   476f4:	dc400117 	ldw	r17,4(sp)
   476f8:	dc000017 	ldw	r16,0(sp)
   476fc:	dec00a04 	addi	sp,sp,40
   47700:	f800283a 	ret
   47704:	017fff04 	movi	r5,-4
   47708:	414a703a 	and	r5,r8,r5
   4770c:	814d883a 	add	r6,r16,r5
   47710:	30c01f16 	blt	r6,r3,47790 <_realloc_r+0x22c>
   47714:	20800317 	ldw	r2,12(r4)
   47718:	20c00217 	ldw	r3,8(r4)
   4771c:	a825883a 	mov	r18,r21
   47720:	3021883a 	mov	r16,r6
   47724:	18800315 	stw	r2,12(r3)
   47728:	10c00215 	stw	r3,8(r2)
   4772c:	003fdb06 	br	4769c <__alt_mem_onchip_memory2_1+0xfffc669c>
   47730:	00800304 	movi	r2,12
   47734:	a0800015 	stw	r2,0(r20)
   47738:	0005883a 	mov	r2,zero
   4773c:	003fe506 	br	476d4 <__alt_mem_onchip_memory2_1+0xfffc66d4>
   47740:	98c00117 	ldw	r3,4(r19)
   47744:	9c4b883a 	add	r5,r19,r17
   47748:	11000054 	ori	r4,r2,1
   4774c:	18c0004c 	andi	r3,r3,1
   47750:	1c62b03a 	or	r17,r3,r17
   47754:	9c400115 	stw	r17,4(r19)
   47758:	29000115 	stw	r4,4(r5)
   4775c:	2885883a 	add	r2,r5,r2
   47760:	10c00117 	ldw	r3,4(r2)
   47764:	29400204 	addi	r5,r5,8
   47768:	a009883a 	mov	r4,r20
   4776c:	18c00054 	ori	r3,r3,1
   47770:	10c00115 	stw	r3,4(r2)
   47774:	0044cc00 	call	44cc0 <_free_r>
   47778:	003fd306 	br	476c8 <__alt_mem_onchip_memory2_1+0xfffc66c8>
   4777c:	017fff04 	movi	r5,-4
   47780:	414a703a 	and	r5,r8,r5
   47784:	89800404 	addi	r6,r17,16
   47788:	8151883a 	add	r8,r16,r5
   4778c:	4180590e 	bge	r8,r6,478f4 <_realloc_r+0x390>
   47790:	1080004c 	andi	r2,r2,1
   47794:	103f9e1e 	bne	r2,zero,47610 <__alt_mem_onchip_memory2_1+0xfffc6610>
   47798:	adbffe17 	ldw	r22,-8(r21)
   4779c:	00bfff04 	movi	r2,-4
   477a0:	9dadc83a 	sub	r22,r19,r22
   477a4:	b1800117 	ldw	r6,4(r22)
   477a8:	3084703a 	and	r2,r6,r2
   477ac:	20002026 	beq	r4,zero,47830 <_realloc_r+0x2cc>
   477b0:	80af883a 	add	r23,r16,r2
   477b4:	b96f883a 	add	r23,r23,r5
   477b8:	21c05f26 	beq	r4,r7,47938 <_realloc_r+0x3d4>
   477bc:	b8c01c16 	blt	r23,r3,47830 <_realloc_r+0x2cc>
   477c0:	20800317 	ldw	r2,12(r4)
   477c4:	20c00217 	ldw	r3,8(r4)
   477c8:	81bfff04 	addi	r6,r16,-4
   477cc:	01000904 	movi	r4,36
   477d0:	18800315 	stw	r2,12(r3)
   477d4:	10c00215 	stw	r3,8(r2)
   477d8:	b0c00217 	ldw	r3,8(r22)
   477dc:	b0800317 	ldw	r2,12(r22)
   477e0:	b4800204 	addi	r18,r22,8
   477e4:	18800315 	stw	r2,12(r3)
   477e8:	10c00215 	stw	r3,8(r2)
   477ec:	21801b36 	bltu	r4,r6,4785c <_realloc_r+0x2f8>
   477f0:	008004c4 	movi	r2,19
   477f4:	1180352e 	bgeu	r2,r6,478cc <_realloc_r+0x368>
   477f8:	a8800017 	ldw	r2,0(r21)
   477fc:	b0800215 	stw	r2,8(r22)
   47800:	a8800117 	ldw	r2,4(r21)
   47804:	b0800315 	stw	r2,12(r22)
   47808:	008006c4 	movi	r2,27
   4780c:	11807f36 	bltu	r2,r6,47a0c <_realloc_r+0x4a8>
   47810:	b0800404 	addi	r2,r22,16
   47814:	ad400204 	addi	r21,r21,8
   47818:	00002d06 	br	478d0 <_realloc_r+0x36c>
   4781c:	adbffe17 	ldw	r22,-8(r21)
   47820:	00bfff04 	movi	r2,-4
   47824:	9dadc83a 	sub	r22,r19,r22
   47828:	b1000117 	ldw	r4,4(r22)
   4782c:	2084703a 	and	r2,r4,r2
   47830:	b03f7726 	beq	r22,zero,47610 <__alt_mem_onchip_memory2_1+0xfffc6610>
   47834:	80af883a 	add	r23,r16,r2
   47838:	b8ff7516 	blt	r23,r3,47610 <__alt_mem_onchip_memory2_1+0xfffc6610>
   4783c:	b0800317 	ldw	r2,12(r22)
   47840:	b0c00217 	ldw	r3,8(r22)
   47844:	81bfff04 	addi	r6,r16,-4
   47848:	01000904 	movi	r4,36
   4784c:	18800315 	stw	r2,12(r3)
   47850:	10c00215 	stw	r3,8(r2)
   47854:	b4800204 	addi	r18,r22,8
   47858:	21bfe52e 	bgeu	r4,r6,477f0 <__alt_mem_onchip_memory2_1+0xfffc67f0>
   4785c:	a80b883a 	mov	r5,r21
   47860:	9009883a 	mov	r4,r18
   47864:	00462e40 	call	462e4 <memmove>
   47868:	b821883a 	mov	r16,r23
   4786c:	b027883a 	mov	r19,r22
   47870:	003f8a06 	br	4769c <__alt_mem_onchip_memory2_1+0xfffc669c>
   47874:	300b883a 	mov	r5,r6
   47878:	dfc00917 	ldw	ra,36(sp)
   4787c:	df000817 	ldw	fp,32(sp)
   47880:	ddc00717 	ldw	r23,28(sp)
   47884:	dd800617 	ldw	r22,24(sp)
   47888:	dd400517 	ldw	r21,20(sp)
   4788c:	dd000417 	ldw	r20,16(sp)
   47890:	dcc00317 	ldw	r19,12(sp)
   47894:	dc800217 	ldw	r18,8(sp)
   47898:	dc400117 	ldw	r17,4(sp)
   4789c:	dc000017 	ldw	r16,0(sp)
   478a0:	dec00a04 	addi	sp,sp,40
   478a4:	00458ac1 	jmpi	458ac <_malloc_r>
   478a8:	a8c00017 	ldw	r3,0(r21)
   478ac:	90c00015 	stw	r3,0(r18)
   478b0:	a8c00117 	ldw	r3,4(r21)
   478b4:	90c00115 	stw	r3,4(r18)
   478b8:	00c006c4 	movi	r3,27
   478bc:	19804536 	bltu	r3,r6,479d4 <_realloc_r+0x470>
   478c0:	90800204 	addi	r2,r18,8
   478c4:	a8c00204 	addi	r3,r21,8
   478c8:	003f6306 	br	47658 <__alt_mem_onchip_memory2_1+0xfffc6658>
   478cc:	9005883a 	mov	r2,r18
   478d0:	a8c00017 	ldw	r3,0(r21)
   478d4:	b821883a 	mov	r16,r23
   478d8:	b027883a 	mov	r19,r22
   478dc:	10c00015 	stw	r3,0(r2)
   478e0:	a8c00117 	ldw	r3,4(r21)
   478e4:	10c00115 	stw	r3,4(r2)
   478e8:	a8c00217 	ldw	r3,8(r21)
   478ec:	10c00215 	stw	r3,8(r2)
   478f0:	003f6a06 	br	4769c <__alt_mem_onchip_memory2_1+0xfffc669c>
   478f4:	9c67883a 	add	r19,r19,r17
   478f8:	4445c83a 	sub	r2,r8,r17
   478fc:	e4c00215 	stw	r19,8(fp)
   47900:	10800054 	ori	r2,r2,1
   47904:	98800115 	stw	r2,4(r19)
   47908:	a8bfff17 	ldw	r2,-4(r21)
   4790c:	a009883a 	mov	r4,r20
   47910:	1080004c 	andi	r2,r2,1
   47914:	1462b03a 	or	r17,r2,r17
   47918:	ac7fff15 	stw	r17,-4(r21)
   4791c:	004d8300 	call	4d830 <__malloc_unlock>
   47920:	a805883a 	mov	r2,r21
   47924:	003f6b06 	br	476d4 <__alt_mem_onchip_memory2_1+0xfffc66d4>
   47928:	a80b883a 	mov	r5,r21
   4792c:	9009883a 	mov	r4,r18
   47930:	00462e40 	call	462e4 <memmove>
   47934:	003f4e06 	br	47670 <__alt_mem_onchip_memory2_1+0xfffc6670>
   47938:	89000404 	addi	r4,r17,16
   4793c:	b93fbc16 	blt	r23,r4,47830 <__alt_mem_onchip_memory2_1+0xfffc6830>
   47940:	b0800317 	ldw	r2,12(r22)
   47944:	b0c00217 	ldw	r3,8(r22)
   47948:	81bfff04 	addi	r6,r16,-4
   4794c:	01000904 	movi	r4,36
   47950:	18800315 	stw	r2,12(r3)
   47954:	10c00215 	stw	r3,8(r2)
   47958:	b4800204 	addi	r18,r22,8
   4795c:	21804336 	bltu	r4,r6,47a6c <_realloc_r+0x508>
   47960:	008004c4 	movi	r2,19
   47964:	11803f2e 	bgeu	r2,r6,47a64 <_realloc_r+0x500>
   47968:	a8800017 	ldw	r2,0(r21)
   4796c:	b0800215 	stw	r2,8(r22)
   47970:	a8800117 	ldw	r2,4(r21)
   47974:	b0800315 	stw	r2,12(r22)
   47978:	008006c4 	movi	r2,27
   4797c:	11803f36 	bltu	r2,r6,47a7c <_realloc_r+0x518>
   47980:	b0800404 	addi	r2,r22,16
   47984:	ad400204 	addi	r21,r21,8
   47988:	a8c00017 	ldw	r3,0(r21)
   4798c:	10c00015 	stw	r3,0(r2)
   47990:	a8c00117 	ldw	r3,4(r21)
   47994:	10c00115 	stw	r3,4(r2)
   47998:	a8c00217 	ldw	r3,8(r21)
   4799c:	10c00215 	stw	r3,8(r2)
   479a0:	b447883a 	add	r3,r22,r17
   479a4:	bc45c83a 	sub	r2,r23,r17
   479a8:	e0c00215 	stw	r3,8(fp)
   479ac:	10800054 	ori	r2,r2,1
   479b0:	18800115 	stw	r2,4(r3)
   479b4:	b0800117 	ldw	r2,4(r22)
   479b8:	a009883a 	mov	r4,r20
   479bc:	1080004c 	andi	r2,r2,1
   479c0:	1462b03a 	or	r17,r2,r17
   479c4:	b4400115 	stw	r17,4(r22)
   479c8:	004d8300 	call	4d830 <__malloc_unlock>
   479cc:	9005883a 	mov	r2,r18
   479d0:	003f4006 	br	476d4 <__alt_mem_onchip_memory2_1+0xfffc66d4>
   479d4:	a8c00217 	ldw	r3,8(r21)
   479d8:	90c00215 	stw	r3,8(r18)
   479dc:	a8c00317 	ldw	r3,12(r21)
   479e0:	90c00315 	stw	r3,12(r18)
   479e4:	30801126 	beq	r6,r2,47a2c <_realloc_r+0x4c8>
   479e8:	90800404 	addi	r2,r18,16
   479ec:	a8c00404 	addi	r3,r21,16
   479f0:	003f1906 	br	47658 <__alt_mem_onchip_memory2_1+0xfffc6658>
   479f4:	90ffff17 	ldw	r3,-4(r18)
   479f8:	00bfff04 	movi	r2,-4
   479fc:	a825883a 	mov	r18,r21
   47a00:	1884703a 	and	r2,r3,r2
   47a04:	80a1883a 	add	r16,r16,r2
   47a08:	003f2406 	br	4769c <__alt_mem_onchip_memory2_1+0xfffc669c>
   47a0c:	a8800217 	ldw	r2,8(r21)
   47a10:	b0800415 	stw	r2,16(r22)
   47a14:	a8800317 	ldw	r2,12(r21)
   47a18:	b0800515 	stw	r2,20(r22)
   47a1c:	31000a26 	beq	r6,r4,47a48 <_realloc_r+0x4e4>
   47a20:	b0800604 	addi	r2,r22,24
   47a24:	ad400404 	addi	r21,r21,16
   47a28:	003fa906 	br	478d0 <__alt_mem_onchip_memory2_1+0xfffc68d0>
   47a2c:	a9000417 	ldw	r4,16(r21)
   47a30:	90800604 	addi	r2,r18,24
   47a34:	a8c00604 	addi	r3,r21,24
   47a38:	91000415 	stw	r4,16(r18)
   47a3c:	a9000517 	ldw	r4,20(r21)
   47a40:	91000515 	stw	r4,20(r18)
   47a44:	003f0406 	br	47658 <__alt_mem_onchip_memory2_1+0xfffc6658>
   47a48:	a8c00417 	ldw	r3,16(r21)
   47a4c:	ad400604 	addi	r21,r21,24
   47a50:	b0800804 	addi	r2,r22,32
   47a54:	b0c00615 	stw	r3,24(r22)
   47a58:	a8ffff17 	ldw	r3,-4(r21)
   47a5c:	b0c00715 	stw	r3,28(r22)
   47a60:	003f9b06 	br	478d0 <__alt_mem_onchip_memory2_1+0xfffc68d0>
   47a64:	9005883a 	mov	r2,r18
   47a68:	003fc706 	br	47988 <__alt_mem_onchip_memory2_1+0xfffc6988>
   47a6c:	a80b883a 	mov	r5,r21
   47a70:	9009883a 	mov	r4,r18
   47a74:	00462e40 	call	462e4 <memmove>
   47a78:	003fc906 	br	479a0 <__alt_mem_onchip_memory2_1+0xfffc69a0>
   47a7c:	a8800217 	ldw	r2,8(r21)
   47a80:	b0800415 	stw	r2,16(r22)
   47a84:	a8800317 	ldw	r2,12(r21)
   47a88:	b0800515 	stw	r2,20(r22)
   47a8c:	31000726 	beq	r6,r4,47aac <_realloc_r+0x548>
   47a90:	b0800604 	addi	r2,r22,24
   47a94:	ad400404 	addi	r21,r21,16
   47a98:	003fbb06 	br	47988 <__alt_mem_onchip_memory2_1+0xfffc6988>
   47a9c:	a009883a 	mov	r4,r20
   47aa0:	004d8300 	call	4d830 <__malloc_unlock>
   47aa4:	0005883a 	mov	r2,zero
   47aa8:	003f0a06 	br	476d4 <__alt_mem_onchip_memory2_1+0xfffc66d4>
   47aac:	a8c00417 	ldw	r3,16(r21)
   47ab0:	ad400604 	addi	r21,r21,24
   47ab4:	b0800804 	addi	r2,r22,32
   47ab8:	b0c00615 	stw	r3,24(r22)
   47abc:	a8ffff17 	ldw	r3,-4(r21)
   47ac0:	b0c00715 	stw	r3,28(r22)
   47ac4:	003fb006 	br	47988 <__alt_mem_onchip_memory2_1+0xfffc6988>

00047ac8 <__fpclassifyd>:
   47ac8:	00a00034 	movhi	r2,32768
   47acc:	10bfffc4 	addi	r2,r2,-1
   47ad0:	2884703a 	and	r2,r5,r2
   47ad4:	10000726 	beq	r2,zero,47af4 <__fpclassifyd+0x2c>
   47ad8:	00fffc34 	movhi	r3,65520
   47adc:	019ff834 	movhi	r6,32736
   47ae0:	28c7883a 	add	r3,r5,r3
   47ae4:	31bfffc4 	addi	r6,r6,-1
   47ae8:	30c00536 	bltu	r6,r3,47b00 <__fpclassifyd+0x38>
   47aec:	00800104 	movi	r2,4
   47af0:	f800283a 	ret
   47af4:	2000021e 	bne	r4,zero,47b00 <__fpclassifyd+0x38>
   47af8:	00800084 	movi	r2,2
   47afc:	f800283a 	ret
   47b00:	00dffc34 	movhi	r3,32752
   47b04:	019ff834 	movhi	r6,32736
   47b08:	28cb883a 	add	r5,r5,r3
   47b0c:	31bfffc4 	addi	r6,r6,-1
   47b10:	317ff62e 	bgeu	r6,r5,47aec <__alt_mem_onchip_memory2_1+0xfffc6aec>
   47b14:	01400434 	movhi	r5,16
   47b18:	297fffc4 	addi	r5,r5,-1
   47b1c:	28800236 	bltu	r5,r2,47b28 <__fpclassifyd+0x60>
   47b20:	008000c4 	movi	r2,3
   47b24:	f800283a 	ret
   47b28:	10c00226 	beq	r2,r3,47b34 <__fpclassifyd+0x6c>
   47b2c:	0005883a 	mov	r2,zero
   47b30:	f800283a 	ret
   47b34:	2005003a 	cmpeq	r2,r4,zero
   47b38:	f800283a 	ret

00047b3c <_sbrk_r>:
   47b3c:	defffd04 	addi	sp,sp,-12
   47b40:	dc000015 	stw	r16,0(sp)
   47b44:	04000174 	movhi	r16,5
   47b48:	dc400115 	stw	r17,4(sp)
   47b4c:	840cbf04 	addi	r16,r16,13052
   47b50:	2023883a 	mov	r17,r4
   47b54:	2809883a 	mov	r4,r5
   47b58:	dfc00215 	stw	ra,8(sp)
   47b5c:	80000015 	stw	zero,0(r16)
   47b60:	004d9f00 	call	4d9f0 <sbrk>
   47b64:	00ffffc4 	movi	r3,-1
   47b68:	10c00526 	beq	r2,r3,47b80 <_sbrk_r+0x44>
   47b6c:	dfc00217 	ldw	ra,8(sp)
   47b70:	dc400117 	ldw	r17,4(sp)
   47b74:	dc000017 	ldw	r16,0(sp)
   47b78:	dec00304 	addi	sp,sp,12
   47b7c:	f800283a 	ret
   47b80:	80c00017 	ldw	r3,0(r16)
   47b84:	183ff926 	beq	r3,zero,47b6c <__alt_mem_onchip_memory2_1+0xfffc6b6c>
   47b88:	88c00015 	stw	r3,0(r17)
   47b8c:	003ff706 	br	47b6c <__alt_mem_onchip_memory2_1+0xfffc6b6c>

00047b90 <__sread>:
   47b90:	defffe04 	addi	sp,sp,-8
   47b94:	dc000015 	stw	r16,0(sp)
   47b98:	2821883a 	mov	r16,r5
   47b9c:	2940038f 	ldh	r5,14(r5)
   47ba0:	dfc00115 	stw	ra,4(sp)
   47ba4:	00499840 	call	49984 <_read_r>
   47ba8:	10000716 	blt	r2,zero,47bc8 <__sread+0x38>
   47bac:	80c01417 	ldw	r3,80(r16)
   47bb0:	1887883a 	add	r3,r3,r2
   47bb4:	80c01415 	stw	r3,80(r16)
   47bb8:	dfc00117 	ldw	ra,4(sp)
   47bbc:	dc000017 	ldw	r16,0(sp)
   47bc0:	dec00204 	addi	sp,sp,8
   47bc4:	f800283a 	ret
   47bc8:	80c0030b 	ldhu	r3,12(r16)
   47bcc:	18fbffcc 	andi	r3,r3,61439
   47bd0:	80c0030d 	sth	r3,12(r16)
   47bd4:	dfc00117 	ldw	ra,4(sp)
   47bd8:	dc000017 	ldw	r16,0(sp)
   47bdc:	dec00204 	addi	sp,sp,8
   47be0:	f800283a 	ret

00047be4 <__seofread>:
   47be4:	0005883a 	mov	r2,zero
   47be8:	f800283a 	ret

00047bec <__swrite>:
   47bec:	2880030b 	ldhu	r2,12(r5)
   47bf0:	defffb04 	addi	sp,sp,-20
   47bf4:	dcc00315 	stw	r19,12(sp)
   47bf8:	dc800215 	stw	r18,8(sp)
   47bfc:	dc400115 	stw	r17,4(sp)
   47c00:	dc000015 	stw	r16,0(sp)
   47c04:	dfc00415 	stw	ra,16(sp)
   47c08:	10c0400c 	andi	r3,r2,256
   47c0c:	2821883a 	mov	r16,r5
   47c10:	2023883a 	mov	r17,r4
   47c14:	3025883a 	mov	r18,r6
   47c18:	3827883a 	mov	r19,r7
   47c1c:	18000526 	beq	r3,zero,47c34 <__swrite+0x48>
   47c20:	2940038f 	ldh	r5,14(r5)
   47c24:	01c00084 	movi	r7,2
   47c28:	000d883a 	mov	r6,zero
   47c2c:	00499240 	call	49924 <_lseek_r>
   47c30:	8080030b 	ldhu	r2,12(r16)
   47c34:	8140038f 	ldh	r5,14(r16)
   47c38:	10bbffcc 	andi	r2,r2,61439
   47c3c:	980f883a 	mov	r7,r19
   47c40:	900d883a 	mov	r6,r18
   47c44:	8809883a 	mov	r4,r17
   47c48:	8080030d 	sth	r2,12(r16)
   47c4c:	dfc00417 	ldw	ra,16(sp)
   47c50:	dcc00317 	ldw	r19,12(sp)
   47c54:	dc800217 	ldw	r18,8(sp)
   47c58:	dc400117 	ldw	r17,4(sp)
   47c5c:	dc000017 	ldw	r16,0(sp)
   47c60:	dec00504 	addi	sp,sp,20
   47c64:	00493f01 	jmpi	493f0 <_write_r>

00047c68 <__sseek>:
   47c68:	defffe04 	addi	sp,sp,-8
   47c6c:	dc000015 	stw	r16,0(sp)
   47c70:	2821883a 	mov	r16,r5
   47c74:	2940038f 	ldh	r5,14(r5)
   47c78:	dfc00115 	stw	ra,4(sp)
   47c7c:	00499240 	call	49924 <_lseek_r>
   47c80:	00ffffc4 	movi	r3,-1
   47c84:	10c00826 	beq	r2,r3,47ca8 <__sseek+0x40>
   47c88:	80c0030b 	ldhu	r3,12(r16)
   47c8c:	80801415 	stw	r2,80(r16)
   47c90:	18c40014 	ori	r3,r3,4096
   47c94:	80c0030d 	sth	r3,12(r16)
   47c98:	dfc00117 	ldw	ra,4(sp)
   47c9c:	dc000017 	ldw	r16,0(sp)
   47ca0:	dec00204 	addi	sp,sp,8
   47ca4:	f800283a 	ret
   47ca8:	80c0030b 	ldhu	r3,12(r16)
   47cac:	18fbffcc 	andi	r3,r3,61439
   47cb0:	80c0030d 	sth	r3,12(r16)
   47cb4:	dfc00117 	ldw	ra,4(sp)
   47cb8:	dc000017 	ldw	r16,0(sp)
   47cbc:	dec00204 	addi	sp,sp,8
   47cc0:	f800283a 	ret

00047cc4 <__sclose>:
   47cc4:	2940038f 	ldh	r5,14(r5)
   47cc8:	00494501 	jmpi	49450 <_close_r>

00047ccc <strcmp>:
   47ccc:	2144b03a 	or	r2,r4,r5
   47cd0:	108000cc 	andi	r2,r2,3
   47cd4:	1000171e 	bne	r2,zero,47d34 <strcmp+0x68>
   47cd8:	20800017 	ldw	r2,0(r4)
   47cdc:	28c00017 	ldw	r3,0(r5)
   47ce0:	10c0141e 	bne	r2,r3,47d34 <strcmp+0x68>
   47ce4:	027fbff4 	movhi	r9,65279
   47ce8:	4a7fbfc4 	addi	r9,r9,-257
   47cec:	0086303a 	nor	r3,zero,r2
   47cf0:	02202074 	movhi	r8,32897
   47cf4:	1245883a 	add	r2,r2,r9
   47cf8:	42202004 	addi	r8,r8,-32640
   47cfc:	10c4703a 	and	r2,r2,r3
   47d00:	1204703a 	and	r2,r2,r8
   47d04:	10000226 	beq	r2,zero,47d10 <strcmp+0x44>
   47d08:	00002306 	br	47d98 <strcmp+0xcc>
   47d0c:	1000221e 	bne	r2,zero,47d98 <strcmp+0xcc>
   47d10:	21000104 	addi	r4,r4,4
   47d14:	20c00017 	ldw	r3,0(r4)
   47d18:	29400104 	addi	r5,r5,4
   47d1c:	29800017 	ldw	r6,0(r5)
   47d20:	1a4f883a 	add	r7,r3,r9
   47d24:	00c4303a 	nor	r2,zero,r3
   47d28:	3884703a 	and	r2,r7,r2
   47d2c:	1204703a 	and	r2,r2,r8
   47d30:	19bff626 	beq	r3,r6,47d0c <__alt_mem_onchip_memory2_1+0xfffc6d0c>
   47d34:	20800003 	ldbu	r2,0(r4)
   47d38:	10c03fcc 	andi	r3,r2,255
   47d3c:	18c0201c 	xori	r3,r3,128
   47d40:	18ffe004 	addi	r3,r3,-128
   47d44:	18000c26 	beq	r3,zero,47d78 <strcmp+0xac>
   47d48:	29800007 	ldb	r6,0(r5)
   47d4c:	19800326 	beq	r3,r6,47d5c <strcmp+0x90>
   47d50:	00001306 	br	47da0 <strcmp+0xd4>
   47d54:	29800007 	ldb	r6,0(r5)
   47d58:	11800b1e 	bne	r2,r6,47d88 <strcmp+0xbc>
   47d5c:	21000044 	addi	r4,r4,1
   47d60:	20c00003 	ldbu	r3,0(r4)
   47d64:	29400044 	addi	r5,r5,1
   47d68:	18803fcc 	andi	r2,r3,255
   47d6c:	1080201c 	xori	r2,r2,128
   47d70:	10bfe004 	addi	r2,r2,-128
   47d74:	103ff71e 	bne	r2,zero,47d54 <__alt_mem_onchip_memory2_1+0xfffc6d54>
   47d78:	0007883a 	mov	r3,zero
   47d7c:	28800003 	ldbu	r2,0(r5)
   47d80:	1885c83a 	sub	r2,r3,r2
   47d84:	f800283a 	ret
   47d88:	28800003 	ldbu	r2,0(r5)
   47d8c:	18c03fcc 	andi	r3,r3,255
   47d90:	1885c83a 	sub	r2,r3,r2
   47d94:	f800283a 	ret
   47d98:	0005883a 	mov	r2,zero
   47d9c:	f800283a 	ret
   47da0:	10c03fcc 	andi	r3,r2,255
   47da4:	003ff506 	br	47d7c <__alt_mem_onchip_memory2_1+0xfffc6d7c>

00047da8 <__sprint_r.part.0>:
   47da8:	28801917 	ldw	r2,100(r5)
   47dac:	defff604 	addi	sp,sp,-40
   47db0:	dd400515 	stw	r21,20(sp)
   47db4:	dfc00915 	stw	ra,36(sp)
   47db8:	df000815 	stw	fp,32(sp)
   47dbc:	ddc00715 	stw	r23,28(sp)
   47dc0:	dd800615 	stw	r22,24(sp)
   47dc4:	dd000415 	stw	r20,16(sp)
   47dc8:	dcc00315 	stw	r19,12(sp)
   47dcc:	dc800215 	stw	r18,8(sp)
   47dd0:	dc400115 	stw	r17,4(sp)
   47dd4:	dc000015 	stw	r16,0(sp)
   47dd8:	1088000c 	andi	r2,r2,8192
   47ddc:	302b883a 	mov	r21,r6
   47de0:	10002e26 	beq	r2,zero,47e9c <__sprint_r.part.0+0xf4>
   47de4:	30800217 	ldw	r2,8(r6)
   47de8:	35800017 	ldw	r22,0(r6)
   47dec:	10002926 	beq	r2,zero,47e94 <__sprint_r.part.0+0xec>
   47df0:	2827883a 	mov	r19,r5
   47df4:	2029883a 	mov	r20,r4
   47df8:	b5c00104 	addi	r23,r22,4
   47dfc:	04bfffc4 	movi	r18,-1
   47e00:	bc400017 	ldw	r17,0(r23)
   47e04:	b4000017 	ldw	r16,0(r22)
   47e08:	0039883a 	mov	fp,zero
   47e0c:	8822d0ba 	srli	r17,r17,2
   47e10:	8800031e 	bne	r17,zero,47e20 <__sprint_r.part.0+0x78>
   47e14:	00001806 	br	47e78 <__sprint_r.part.0+0xd0>
   47e18:	84000104 	addi	r16,r16,4
   47e1c:	8f001526 	beq	r17,fp,47e74 <__sprint_r.part.0+0xcc>
   47e20:	81400017 	ldw	r5,0(r16)
   47e24:	980d883a 	mov	r6,r19
   47e28:	a009883a 	mov	r4,r20
   47e2c:	00497d00 	call	497d0 <_fputwc_r>
   47e30:	e7000044 	addi	fp,fp,1
   47e34:	14bff81e 	bne	r2,r18,47e18 <__alt_mem_onchip_memory2_1+0xfffc6e18>
   47e38:	9005883a 	mov	r2,r18
   47e3c:	a8000215 	stw	zero,8(r21)
   47e40:	a8000115 	stw	zero,4(r21)
   47e44:	dfc00917 	ldw	ra,36(sp)
   47e48:	df000817 	ldw	fp,32(sp)
   47e4c:	ddc00717 	ldw	r23,28(sp)
   47e50:	dd800617 	ldw	r22,24(sp)
   47e54:	dd400517 	ldw	r21,20(sp)
   47e58:	dd000417 	ldw	r20,16(sp)
   47e5c:	dcc00317 	ldw	r19,12(sp)
   47e60:	dc800217 	ldw	r18,8(sp)
   47e64:	dc400117 	ldw	r17,4(sp)
   47e68:	dc000017 	ldw	r16,0(sp)
   47e6c:	dec00a04 	addi	sp,sp,40
   47e70:	f800283a 	ret
   47e74:	a8800217 	ldw	r2,8(r21)
   47e78:	8c63883a 	add	r17,r17,r17
   47e7c:	8c63883a 	add	r17,r17,r17
   47e80:	1445c83a 	sub	r2,r2,r17
   47e84:	a8800215 	stw	r2,8(r21)
   47e88:	b5800204 	addi	r22,r22,8
   47e8c:	bdc00204 	addi	r23,r23,8
   47e90:	103fdb1e 	bne	r2,zero,47e00 <__alt_mem_onchip_memory2_1+0xfffc6e00>
   47e94:	0005883a 	mov	r2,zero
   47e98:	003fe806 	br	47e3c <__alt_mem_onchip_memory2_1+0xfffc6e3c>
   47e9c:	0044fd00 	call	44fd0 <__sfvwrite_r>
   47ea0:	003fe606 	br	47e3c <__alt_mem_onchip_memory2_1+0xfffc6e3c>

00047ea4 <__sprint_r>:
   47ea4:	30c00217 	ldw	r3,8(r6)
   47ea8:	18000126 	beq	r3,zero,47eb0 <__sprint_r+0xc>
   47eac:	0047da81 	jmpi	47da8 <__sprint_r.part.0>
   47eb0:	30000115 	stw	zero,4(r6)
   47eb4:	0005883a 	mov	r2,zero
   47eb8:	f800283a 	ret

00047ebc <___vfiprintf_internal_r>:
   47ebc:	deffc904 	addi	sp,sp,-220
   47ec0:	df003515 	stw	fp,212(sp)
   47ec4:	dd003115 	stw	r20,196(sp)
   47ec8:	dfc03615 	stw	ra,216(sp)
   47ecc:	ddc03415 	stw	r23,208(sp)
   47ed0:	dd803315 	stw	r22,204(sp)
   47ed4:	dd403215 	stw	r21,200(sp)
   47ed8:	dcc03015 	stw	r19,192(sp)
   47edc:	dc802f15 	stw	r18,188(sp)
   47ee0:	dc402e15 	stw	r17,184(sp)
   47ee4:	dc002d15 	stw	r16,180(sp)
   47ee8:	d9002015 	stw	r4,128(sp)
   47eec:	d9c02215 	stw	r7,136(sp)
   47ef0:	2829883a 	mov	r20,r5
   47ef4:	3039883a 	mov	fp,r6
   47ef8:	20000226 	beq	r4,zero,47f04 <___vfiprintf_internal_r+0x48>
   47efc:	20800e17 	ldw	r2,56(r4)
   47f00:	1000cf26 	beq	r2,zero,48240 <___vfiprintf_internal_r+0x384>
   47f04:	a080030b 	ldhu	r2,12(r20)
   47f08:	10c8000c 	andi	r3,r2,8192
   47f0c:	1800061e 	bne	r3,zero,47f28 <___vfiprintf_internal_r+0x6c>
   47f10:	a1001917 	ldw	r4,100(r20)
   47f14:	00f7ffc4 	movi	r3,-8193
   47f18:	10880014 	ori	r2,r2,8192
   47f1c:	20c6703a 	and	r3,r4,r3
   47f20:	a080030d 	sth	r2,12(r20)
   47f24:	a0c01915 	stw	r3,100(r20)
   47f28:	10c0020c 	andi	r3,r2,8
   47f2c:	1800a926 	beq	r3,zero,481d4 <___vfiprintf_internal_r+0x318>
   47f30:	a0c00417 	ldw	r3,16(r20)
   47f34:	1800a726 	beq	r3,zero,481d4 <___vfiprintf_internal_r+0x318>
   47f38:	1080068c 	andi	r2,r2,26
   47f3c:	00c00284 	movi	r3,10
   47f40:	10c0ac26 	beq	r2,r3,481f4 <___vfiprintf_internal_r+0x338>
   47f44:	da801a04 	addi	r10,sp,104
   47f48:	da801e15 	stw	r10,120(sp)
   47f4c:	d8801e17 	ldw	r2,120(sp)
   47f50:	da8019c4 	addi	r10,sp,103
   47f54:	05800174 	movhi	r22,5
   47f58:	05c00174 	movhi	r23,5
   47f5c:	da801f15 	stw	r10,124(sp)
   47f60:	1295c83a 	sub	r10,r2,r10
   47f64:	b5bef104 	addi	r22,r22,-1084
   47f68:	bdfeed04 	addi	r23,r23,-1100
   47f6c:	dec01a15 	stw	sp,104(sp)
   47f70:	d8001c15 	stw	zero,112(sp)
   47f74:	d8001b15 	stw	zero,108(sp)
   47f78:	d8002615 	stw	zero,152(sp)
   47f7c:	d8002315 	stw	zero,140(sp)
   47f80:	da802715 	stw	r10,156(sp)
   47f84:	d811883a 	mov	r8,sp
   47f88:	dd002115 	stw	r20,132(sp)
   47f8c:	e021883a 	mov	r16,fp
   47f90:	80800007 	ldb	r2,0(r16)
   47f94:	1003ea26 	beq	r2,zero,48f40 <___vfiprintf_internal_r+0x1084>
   47f98:	00c00944 	movi	r3,37
   47f9c:	8025883a 	mov	r18,r16
   47fa0:	10c0021e 	bne	r2,r3,47fac <___vfiprintf_internal_r+0xf0>
   47fa4:	00001606 	br	48000 <___vfiprintf_internal_r+0x144>
   47fa8:	10c00326 	beq	r2,r3,47fb8 <___vfiprintf_internal_r+0xfc>
   47fac:	94800044 	addi	r18,r18,1
   47fb0:	90800007 	ldb	r2,0(r18)
   47fb4:	103ffc1e 	bne	r2,zero,47fa8 <__alt_mem_onchip_memory2_1+0xfffc6fa8>
   47fb8:	9423c83a 	sub	r17,r18,r16
   47fbc:	88001026 	beq	r17,zero,48000 <___vfiprintf_internal_r+0x144>
   47fc0:	d8c01c17 	ldw	r3,112(sp)
   47fc4:	d8801b17 	ldw	r2,108(sp)
   47fc8:	44000015 	stw	r16,0(r8)
   47fcc:	88c7883a 	add	r3,r17,r3
   47fd0:	10800044 	addi	r2,r2,1
   47fd4:	44400115 	stw	r17,4(r8)
   47fd8:	d8c01c15 	stw	r3,112(sp)
   47fdc:	d8801b15 	stw	r2,108(sp)
   47fe0:	010001c4 	movi	r4,7
   47fe4:	2080760e 	bge	r4,r2,481c0 <___vfiprintf_internal_r+0x304>
   47fe8:	1803821e 	bne	r3,zero,48df4 <___vfiprintf_internal_r+0xf38>
   47fec:	da802317 	ldw	r10,140(sp)
   47ff0:	d8001b15 	stw	zero,108(sp)
   47ff4:	d811883a 	mov	r8,sp
   47ff8:	5455883a 	add	r10,r10,r17
   47ffc:	da802315 	stw	r10,140(sp)
   48000:	90800007 	ldb	r2,0(r18)
   48004:	10044626 	beq	r2,zero,49120 <___vfiprintf_internal_r+0x1264>
   48008:	90c00047 	ldb	r3,1(r18)
   4800c:	94000044 	addi	r16,r18,1
   48010:	d8001d85 	stb	zero,118(sp)
   48014:	0009883a 	mov	r4,zero
   48018:	000f883a 	mov	r7,zero
   4801c:	027fffc4 	movi	r9,-1
   48020:	0023883a 	mov	r17,zero
   48024:	0029883a 	mov	r20,zero
   48028:	01401604 	movi	r5,88
   4802c:	01800244 	movi	r6,9
   48030:	03400a84 	movi	r13,42
   48034:	03001b04 	movi	r12,108
   48038:	84000044 	addi	r16,r16,1
   4803c:	18bff804 	addi	r2,r3,-32
   48040:	28827336 	bltu	r5,r2,48a10 <___vfiprintf_internal_r+0xb54>
   48044:	100490ba 	slli	r2,r2,2
   48048:	02800174 	movhi	r10,5
   4804c:	52a01704 	addi	r10,r10,-32676
   48050:	1285883a 	add	r2,r2,r10
   48054:	10800017 	ldw	r2,0(r2)
   48058:	1000683a 	jmp	r2
   4805c:	00048744 	movi	zero,4637
   48060:	00048a10 	cmplti	zero,zero,4648
   48064:	00048a10 	cmplti	zero,zero,4648
   48068:	00048764 	muli	zero,zero,4637
   4806c:	00048a10 	cmplti	zero,zero,4648
   48070:	00048a10 	cmplti	zero,zero,4648
   48074:	00048a10 	cmplti	zero,zero,4648
   48078:	00048a10 	cmplti	zero,zero,4648
   4807c:	00048a10 	cmplti	zero,zero,4648
   48080:	00048a10 	cmplti	zero,zero,4648
   48084:	0004894c 	andi	zero,zero,4645
   48088:	00048968 	cmpgeui	zero,zero,4645
   4808c:	00048a10 	cmplti	zero,zero,4648
   48090:	00048250 	cmplti	zero,zero,4617
   48094:	00048978 	rdprs	zero,zero,4645
   48098:	00048a10 	cmplti	zero,zero,4648
   4809c:	00048770 	cmpltui	zero,zero,4637
   480a0:	0004877c 	xorhi	zero,zero,4637
   480a4:	0004877c 	xorhi	zero,zero,4637
   480a8:	0004877c 	xorhi	zero,zero,4637
   480ac:	0004877c 	xorhi	zero,zero,4637
   480b0:	0004877c 	xorhi	zero,zero,4637
   480b4:	0004877c 	xorhi	zero,zero,4637
   480b8:	0004877c 	xorhi	zero,zero,4637
   480bc:	0004877c 	xorhi	zero,zero,4637
   480c0:	0004877c 	xorhi	zero,zero,4637
   480c4:	00048a10 	cmplti	zero,zero,4648
   480c8:	00048a10 	cmplti	zero,zero,4648
   480cc:	00048a10 	cmplti	zero,zero,4648
   480d0:	00048a10 	cmplti	zero,zero,4648
   480d4:	00048a10 	cmplti	zero,zero,4648
   480d8:	00048a10 	cmplti	zero,zero,4648
   480dc:	00048a10 	cmplti	zero,zero,4648
   480e0:	00048a10 	cmplti	zero,zero,4648
   480e4:	00048a10 	cmplti	zero,zero,4648
   480e8:	00048a10 	cmplti	zero,zero,4648
   480ec:	000487a8 	cmpgeui	zero,zero,4638
   480f0:	00048a10 	cmplti	zero,zero,4648
   480f4:	00048a10 	cmplti	zero,zero,4648
   480f8:	00048a10 	cmplti	zero,zero,4648
   480fc:	00048a10 	cmplti	zero,zero,4648
   48100:	00048a10 	cmplti	zero,zero,4648
   48104:	00048a10 	cmplti	zero,zero,4648
   48108:	00048a10 	cmplti	zero,zero,4648
   4810c:	00048a10 	cmplti	zero,zero,4648
   48110:	00048a10 	cmplti	zero,zero,4648
   48114:	00048a10 	cmplti	zero,zero,4648
   48118:	000487e0 	cmpeqi	zero,zero,4639
   4811c:	00048a10 	cmplti	zero,zero,4648
   48120:	00048a10 	cmplti	zero,zero,4648
   48124:	00048a10 	cmplti	zero,zero,4648
   48128:	00048a10 	cmplti	zero,zero,4648
   4812c:	00048a10 	cmplti	zero,zero,4648
   48130:	00048838 	rdprs	zero,zero,4640
   48134:	00048a10 	cmplti	zero,zero,4648
   48138:	00048a10 	cmplti	zero,zero,4648
   4813c:	000488a8 	cmpgeui	zero,zero,4642
   48140:	00048a10 	cmplti	zero,zero,4648
   48144:	00048a10 	cmplti	zero,zero,4648
   48148:	00048a10 	cmplti	zero,zero,4648
   4814c:	00048a10 	cmplti	zero,zero,4648
   48150:	00048a10 	cmplti	zero,zero,4648
   48154:	00048a10 	cmplti	zero,zero,4648
   48158:	00048a10 	cmplti	zero,zero,4648
   4815c:	00048a10 	cmplti	zero,zero,4648
   48160:	00048a10 	cmplti	zero,zero,4648
   48164:	00048a10 	cmplti	zero,zero,4648
   48168:	00048654 	movui	zero,4633
   4816c:	00048680 	call	4868 <__reset-0x3b798>
   48170:	00048a10 	cmplti	zero,zero,4648
   48174:	00048a10 	cmplti	zero,zero,4648
   48178:	00048a10 	cmplti	zero,zero,4648
   4817c:	000489b8 	rdprs	zero,zero,4646
   48180:	00048680 	call	4868 <__reset-0x3b798>
   48184:	00048a10 	cmplti	zero,zero,4648
   48188:	00048a10 	cmplti	zero,zero,4648
   4818c:	00048514 	movui	zero,4628
   48190:	00048a10 	cmplti	zero,zero,4648
   48194:	00048524 	muli	zero,zero,4628
   48198:	00048560 	cmpeqi	zero,zero,4629
   4819c:	0004825c 	xori	zero,zero,4617
   481a0:	00048508 	cmpgei	zero,zero,4628
   481a4:	00048a10 	cmplti	zero,zero,4648
   481a8:	000488e4 	muli	zero,zero,4643
   481ac:	00048a10 	cmplti	zero,zero,4648
   481b0:	0004893c 	xorhi	zero,zero,4644
   481b4:	00048a10 	cmplti	zero,zero,4648
   481b8:	00048a10 	cmplti	zero,zero,4648
   481bc:	00048600 	call	4860 <__reset-0x3b7a0>
   481c0:	42000204 	addi	r8,r8,8
   481c4:	da802317 	ldw	r10,140(sp)
   481c8:	5455883a 	add	r10,r10,r17
   481cc:	da802315 	stw	r10,140(sp)
   481d0:	003f8b06 	br	48000 <__alt_mem_onchip_memory2_1+0xfffc7000>
   481d4:	d9002017 	ldw	r4,128(sp)
   481d8:	a00b883a 	mov	r5,r20
   481dc:	0042b780 	call	42b78 <__swsetup_r>
   481e0:	1003b11e 	bne	r2,zero,490a8 <___vfiprintf_internal_r+0x11ec>
   481e4:	a080030b 	ldhu	r2,12(r20)
   481e8:	00c00284 	movi	r3,10
   481ec:	1080068c 	andi	r2,r2,26
   481f0:	10ff541e 	bne	r2,r3,47f44 <__alt_mem_onchip_memory2_1+0xfffc6f44>
   481f4:	a080038f 	ldh	r2,14(r20)
   481f8:	103f5216 	blt	r2,zero,47f44 <__alt_mem_onchip_memory2_1+0xfffc6f44>
   481fc:	d9c02217 	ldw	r7,136(sp)
   48200:	d9002017 	ldw	r4,128(sp)
   48204:	e00d883a 	mov	r6,fp
   48208:	a00b883a 	mov	r5,r20
   4820c:	00493340 	call	49334 <__sbprintf>
   48210:	dfc03617 	ldw	ra,216(sp)
   48214:	df003517 	ldw	fp,212(sp)
   48218:	ddc03417 	ldw	r23,208(sp)
   4821c:	dd803317 	ldw	r22,204(sp)
   48220:	dd403217 	ldw	r21,200(sp)
   48224:	dd003117 	ldw	r20,196(sp)
   48228:	dcc03017 	ldw	r19,192(sp)
   4822c:	dc802f17 	ldw	r18,188(sp)
   48230:	dc402e17 	ldw	r17,184(sp)
   48234:	dc002d17 	ldw	r16,180(sp)
   48238:	dec03704 	addi	sp,sp,220
   4823c:	f800283a 	ret
   48240:	0044b4c0 	call	44b4c <__sinit>
   48244:	003f2f06 	br	47f04 <__alt_mem_onchip_memory2_1+0xfffc6f04>
   48248:	0463c83a 	sub	r17,zero,r17
   4824c:	d8802215 	stw	r2,136(sp)
   48250:	a5000114 	ori	r20,r20,4
   48254:	80c00007 	ldb	r3,0(r16)
   48258:	003f7706 	br	48038 <__alt_mem_onchip_memory2_1+0xfffc7038>
   4825c:	00800c04 	movi	r2,48
   48260:	da802217 	ldw	r10,136(sp)
   48264:	d8801d05 	stb	r2,116(sp)
   48268:	00801e04 	movi	r2,120
   4826c:	d8801d45 	stb	r2,117(sp)
   48270:	d8001d85 	stb	zero,118(sp)
   48274:	50c00104 	addi	r3,r10,4
   48278:	54800017 	ldw	r18,0(r10)
   4827c:	0027883a 	mov	r19,zero
   48280:	a0800094 	ori	r2,r20,2
   48284:	48030b16 	blt	r9,zero,48eb4 <___vfiprintf_internal_r+0xff8>
   48288:	00bfdfc4 	movi	r2,-129
   4828c:	a096703a 	and	r11,r20,r2
   48290:	d8c02215 	stw	r3,136(sp)
   48294:	5d000094 	ori	r20,r11,2
   48298:	90032b1e 	bne	r18,zero,48f48 <___vfiprintf_internal_r+0x108c>
   4829c:	00800174 	movhi	r2,5
   482a0:	10be8c04 	addi	r2,r2,-1488
   482a4:	d8802615 	stw	r2,152(sp)
   482a8:	0039883a 	mov	fp,zero
   482ac:	48017b1e 	bne	r9,zero,4889c <___vfiprintf_internal_r+0x9e0>
   482b0:	0013883a 	mov	r9,zero
   482b4:	0027883a 	mov	r19,zero
   482b8:	dd401a04 	addi	r21,sp,104
   482bc:	4825883a 	mov	r18,r9
   482c0:	4cc0010e 	bge	r9,r19,482c8 <___vfiprintf_internal_r+0x40c>
   482c4:	9825883a 	mov	r18,r19
   482c8:	e7003fcc 	andi	fp,fp,255
   482cc:	e700201c 	xori	fp,fp,128
   482d0:	e73fe004 	addi	fp,fp,-128
   482d4:	e0000126 	beq	fp,zero,482dc <___vfiprintf_internal_r+0x420>
   482d8:	94800044 	addi	r18,r18,1
   482dc:	a380008c 	andi	r14,r20,2
   482e0:	70000126 	beq	r14,zero,482e8 <___vfiprintf_internal_r+0x42c>
   482e4:	94800084 	addi	r18,r18,2
   482e8:	a700210c 	andi	fp,r20,132
   482ec:	e001df1e 	bne	fp,zero,48a6c <___vfiprintf_internal_r+0xbb0>
   482f0:	8c87c83a 	sub	r3,r17,r18
   482f4:	00c1dd0e 	bge	zero,r3,48a6c <___vfiprintf_internal_r+0xbb0>
   482f8:	01c00404 	movi	r7,16
   482fc:	d8801c17 	ldw	r2,112(sp)
   48300:	38c3ad0e 	bge	r7,r3,491b8 <___vfiprintf_internal_r+0x12fc>
   48304:	02800174 	movhi	r10,5
   48308:	52bef104 	addi	r10,r10,-1084
   4830c:	dc002915 	stw	r16,164(sp)
   48310:	d9801b17 	ldw	r6,108(sp)
   48314:	da802415 	stw	r10,144(sp)
   48318:	03c001c4 	movi	r15,7
   4831c:	da402515 	stw	r9,148(sp)
   48320:	db802815 	stw	r14,160(sp)
   48324:	1821883a 	mov	r16,r3
   48328:	00000506 	br	48340 <___vfiprintf_internal_r+0x484>
   4832c:	31400084 	addi	r5,r6,2
   48330:	42000204 	addi	r8,r8,8
   48334:	200d883a 	mov	r6,r4
   48338:	843ffc04 	addi	r16,r16,-16
   4833c:	3c000d0e 	bge	r7,r16,48374 <___vfiprintf_internal_r+0x4b8>
   48340:	10800404 	addi	r2,r2,16
   48344:	31000044 	addi	r4,r6,1
   48348:	45800015 	stw	r22,0(r8)
   4834c:	41c00115 	stw	r7,4(r8)
   48350:	d8801c15 	stw	r2,112(sp)
   48354:	d9001b15 	stw	r4,108(sp)
   48358:	793ff40e 	bge	r15,r4,4832c <__alt_mem_onchip_memory2_1+0xfffc732c>
   4835c:	1001b51e 	bne	r2,zero,48a34 <___vfiprintf_internal_r+0xb78>
   48360:	843ffc04 	addi	r16,r16,-16
   48364:	000d883a 	mov	r6,zero
   48368:	01400044 	movi	r5,1
   4836c:	d811883a 	mov	r8,sp
   48370:	3c3ff316 	blt	r7,r16,48340 <__alt_mem_onchip_memory2_1+0xfffc7340>
   48374:	8007883a 	mov	r3,r16
   48378:	da402517 	ldw	r9,148(sp)
   4837c:	db802817 	ldw	r14,160(sp)
   48380:	dc002917 	ldw	r16,164(sp)
   48384:	da802417 	ldw	r10,144(sp)
   48388:	1885883a 	add	r2,r3,r2
   4838c:	40c00115 	stw	r3,4(r8)
   48390:	42800015 	stw	r10,0(r8)
   48394:	d8801c15 	stw	r2,112(sp)
   48398:	d9401b15 	stw	r5,108(sp)
   4839c:	00c001c4 	movi	r3,7
   483a0:	19426016 	blt	r3,r5,48d24 <___vfiprintf_internal_r+0xe68>
   483a4:	d8c01d87 	ldb	r3,118(sp)
   483a8:	42000204 	addi	r8,r8,8
   483ac:	29000044 	addi	r4,r5,1
   483b0:	1801b31e 	bne	r3,zero,48a80 <___vfiprintf_internal_r+0xbc4>
   483b4:	7001c026 	beq	r14,zero,48ab8 <___vfiprintf_internal_r+0xbfc>
   483b8:	d8c01d04 	addi	r3,sp,116
   483bc:	10800084 	addi	r2,r2,2
   483c0:	40c00015 	stw	r3,0(r8)
   483c4:	00c00084 	movi	r3,2
   483c8:	40c00115 	stw	r3,4(r8)
   483cc:	d8801c15 	stw	r2,112(sp)
   483d0:	d9001b15 	stw	r4,108(sp)
   483d4:	00c001c4 	movi	r3,7
   483d8:	1902650e 	bge	r3,r4,48d70 <___vfiprintf_internal_r+0xeb4>
   483dc:	10029a1e 	bne	r2,zero,48e48 <___vfiprintf_internal_r+0xf8c>
   483e0:	00c02004 	movi	r3,128
   483e4:	01000044 	movi	r4,1
   483e8:	000b883a 	mov	r5,zero
   483ec:	d811883a 	mov	r8,sp
   483f0:	e0c1b31e 	bne	fp,r3,48ac0 <___vfiprintf_internal_r+0xc04>
   483f4:	8cb9c83a 	sub	fp,r17,r18
   483f8:	0701b10e 	bge	zero,fp,48ac0 <___vfiprintf_internal_r+0xc04>
   483fc:	01c00404 	movi	r7,16
   48400:	3f03890e 	bge	r7,fp,49228 <___vfiprintf_internal_r+0x136c>
   48404:	00c00174 	movhi	r3,5
   48408:	18feed04 	addi	r3,r3,-1100
   4840c:	d8c02415 	stw	r3,144(sp)
   48410:	8007883a 	mov	r3,r16
   48414:	034001c4 	movi	r13,7
   48418:	e021883a 	mov	r16,fp
   4841c:	da402515 	stw	r9,148(sp)
   48420:	1839883a 	mov	fp,r3
   48424:	00000506 	br	4843c <___vfiprintf_internal_r+0x580>
   48428:	29800084 	addi	r6,r5,2
   4842c:	42000204 	addi	r8,r8,8
   48430:	180b883a 	mov	r5,r3
   48434:	843ffc04 	addi	r16,r16,-16
   48438:	3c000d0e 	bge	r7,r16,48470 <___vfiprintf_internal_r+0x5b4>
   4843c:	10800404 	addi	r2,r2,16
   48440:	28c00044 	addi	r3,r5,1
   48444:	45c00015 	stw	r23,0(r8)
   48448:	41c00115 	stw	r7,4(r8)
   4844c:	d8801c15 	stw	r2,112(sp)
   48450:	d8c01b15 	stw	r3,108(sp)
   48454:	68fff40e 	bge	r13,r3,48428 <__alt_mem_onchip_memory2_1+0xfffc7428>
   48458:	1002241e 	bne	r2,zero,48cec <___vfiprintf_internal_r+0xe30>
   4845c:	843ffc04 	addi	r16,r16,-16
   48460:	01800044 	movi	r6,1
   48464:	000b883a 	mov	r5,zero
   48468:	d811883a 	mov	r8,sp
   4846c:	3c3ff316 	blt	r7,r16,4843c <__alt_mem_onchip_memory2_1+0xfffc743c>
   48470:	da402517 	ldw	r9,148(sp)
   48474:	e007883a 	mov	r3,fp
   48478:	8039883a 	mov	fp,r16
   4847c:	1821883a 	mov	r16,r3
   48480:	d8c02417 	ldw	r3,144(sp)
   48484:	1705883a 	add	r2,r2,fp
   48488:	47000115 	stw	fp,4(r8)
   4848c:	40c00015 	stw	r3,0(r8)
   48490:	d8801c15 	stw	r2,112(sp)
   48494:	d9801b15 	stw	r6,108(sp)
   48498:	00c001c4 	movi	r3,7
   4849c:	19827616 	blt	r3,r6,48e78 <___vfiprintf_internal_r+0xfbc>
   484a0:	4cf9c83a 	sub	fp,r9,r19
   484a4:	42000204 	addi	r8,r8,8
   484a8:	31000044 	addi	r4,r6,1
   484ac:	300b883a 	mov	r5,r6
   484b0:	07018516 	blt	zero,fp,48ac8 <___vfiprintf_internal_r+0xc0c>
   484b4:	9885883a 	add	r2,r19,r2
   484b8:	45400015 	stw	r21,0(r8)
   484bc:	44c00115 	stw	r19,4(r8)
   484c0:	d8801c15 	stw	r2,112(sp)
   484c4:	d9001b15 	stw	r4,108(sp)
   484c8:	00c001c4 	movi	r3,7
   484cc:	1901dd0e 	bge	r3,r4,48c44 <___vfiprintf_internal_r+0xd88>
   484d0:	1002401e 	bne	r2,zero,48dd4 <___vfiprintf_internal_r+0xf18>
   484d4:	d8001b15 	stw	zero,108(sp)
   484d8:	a2c0010c 	andi	r11,r20,4
   484dc:	58000226 	beq	r11,zero,484e8 <___vfiprintf_internal_r+0x62c>
   484e0:	8ca7c83a 	sub	r19,r17,r18
   484e4:	04c2f216 	blt	zero,r19,490b0 <___vfiprintf_internal_r+0x11f4>
   484e8:	8c80010e 	bge	r17,r18,484f0 <___vfiprintf_internal_r+0x634>
   484ec:	9023883a 	mov	r17,r18
   484f0:	da802317 	ldw	r10,140(sp)
   484f4:	5455883a 	add	r10,r10,r17
   484f8:	da802315 	stw	r10,140(sp)
   484fc:	d8001b15 	stw	zero,108(sp)
   48500:	d811883a 	mov	r8,sp
   48504:	003ea206 	br	47f90 <__alt_mem_onchip_memory2_1+0xfffc6f90>
   48508:	a5000814 	ori	r20,r20,32
   4850c:	80c00007 	ldb	r3,0(r16)
   48510:	003ec906 	br	48038 <__alt_mem_onchip_memory2_1+0xfffc7038>
   48514:	80c00007 	ldb	r3,0(r16)
   48518:	1b030926 	beq	r3,r12,49140 <___vfiprintf_internal_r+0x1284>
   4851c:	a5000414 	ori	r20,r20,16
   48520:	003ec506 	br	48038 <__alt_mem_onchip_memory2_1+0xfffc7038>
   48524:	21003fcc 	andi	r4,r4,255
   48528:	20035e1e 	bne	r4,zero,492a4 <___vfiprintf_internal_r+0x13e8>
   4852c:	a080080c 	andi	r2,r20,32
   48530:	1002a526 	beq	r2,zero,48fc8 <___vfiprintf_internal_r+0x110c>
   48534:	da802217 	ldw	r10,136(sp)
   48538:	50800017 	ldw	r2,0(r10)
   4853c:	da802317 	ldw	r10,140(sp)
   48540:	5007d7fa 	srai	r3,r10,31
   48544:	da802217 	ldw	r10,136(sp)
   48548:	10c00115 	stw	r3,4(r2)
   4854c:	52800104 	addi	r10,r10,4
   48550:	da802215 	stw	r10,136(sp)
   48554:	da802317 	ldw	r10,140(sp)
   48558:	12800015 	stw	r10,0(r2)
   4855c:	003e8c06 	br	47f90 <__alt_mem_onchip_memory2_1+0xfffc6f90>
   48560:	21003fcc 	andi	r4,r4,255
   48564:	2003511e 	bne	r4,zero,492ac <___vfiprintf_internal_r+0x13f0>
   48568:	a080080c 	andi	r2,r20,32
   4856c:	1000a126 	beq	r2,zero,487f4 <___vfiprintf_internal_r+0x938>
   48570:	da802217 	ldw	r10,136(sp)
   48574:	d8001d85 	stb	zero,118(sp)
   48578:	50800204 	addi	r2,r10,8
   4857c:	54800017 	ldw	r18,0(r10)
   48580:	54c00117 	ldw	r19,4(r10)
   48584:	4802b416 	blt	r9,zero,49058 <___vfiprintf_internal_r+0x119c>
   48588:	013fdfc4 	movi	r4,-129
   4858c:	94c6b03a 	or	r3,r18,r19
   48590:	d8802215 	stw	r2,136(sp)
   48594:	a128703a 	and	r20,r20,r4
   48598:	1800a226 	beq	r3,zero,48824 <___vfiprintf_internal_r+0x968>
   4859c:	0039883a 	mov	fp,zero
   485a0:	dd401a04 	addi	r21,sp,104
   485a4:	9006d0fa 	srli	r3,r18,3
   485a8:	9808977a 	slli	r4,r19,29
   485ac:	9826d0fa 	srli	r19,r19,3
   485b0:	948001cc 	andi	r18,r18,7
   485b4:	90800c04 	addi	r2,r18,48
   485b8:	ad7fffc4 	addi	r21,r21,-1
   485bc:	20e4b03a 	or	r18,r4,r3
   485c0:	a8800005 	stb	r2,0(r21)
   485c4:	94c6b03a 	or	r3,r18,r19
   485c8:	183ff61e 	bne	r3,zero,485a4 <__alt_mem_onchip_memory2_1+0xfffc75a4>
   485cc:	a0c0004c 	andi	r3,r20,1
   485d0:	18005926 	beq	r3,zero,48738 <___vfiprintf_internal_r+0x87c>
   485d4:	10803fcc 	andi	r2,r2,255
   485d8:	1080201c 	xori	r2,r2,128
   485dc:	10bfe004 	addi	r2,r2,-128
   485e0:	00c00c04 	movi	r3,48
   485e4:	10c05426 	beq	r2,r3,48738 <___vfiprintf_internal_r+0x87c>
   485e8:	da801e17 	ldw	r10,120(sp)
   485ec:	a8bfffc4 	addi	r2,r21,-1
   485f0:	a8ffffc5 	stb	r3,-1(r21)
   485f4:	50a7c83a 	sub	r19,r10,r2
   485f8:	102b883a 	mov	r21,r2
   485fc:	003f2f06 	br	482bc <__alt_mem_onchip_memory2_1+0xfffc72bc>
   48600:	21003fcc 	andi	r4,r4,255
   48604:	2003421e 	bne	r4,zero,49310 <___vfiprintf_internal_r+0x1454>
   48608:	00800174 	movhi	r2,5
   4860c:	10be8c04 	addi	r2,r2,-1488
   48610:	d8802615 	stw	r2,152(sp)
   48614:	a080080c 	andi	r2,r20,32
   48618:	1000aa26 	beq	r2,zero,488c4 <___vfiprintf_internal_r+0xa08>
   4861c:	da802217 	ldw	r10,136(sp)
   48620:	54800017 	ldw	r18,0(r10)
   48624:	54c00117 	ldw	r19,4(r10)
   48628:	52800204 	addi	r10,r10,8
   4862c:	da802215 	stw	r10,136(sp)
   48630:	a080004c 	andi	r2,r20,1
   48634:	1001d226 	beq	r2,zero,48d80 <___vfiprintf_internal_r+0xec4>
   48638:	94c4b03a 	or	r2,r18,r19
   4863c:	1002351e 	bne	r2,zero,48f14 <___vfiprintf_internal_r+0x1058>
   48640:	d8001d85 	stb	zero,118(sp)
   48644:	48022216 	blt	r9,zero,48ed0 <___vfiprintf_internal_r+0x1014>
   48648:	00bfdfc4 	movi	r2,-129
   4864c:	a0a8703a 	and	r20,r20,r2
   48650:	003f1506 	br	482a8 <__alt_mem_onchip_memory2_1+0xfffc72a8>
   48654:	da802217 	ldw	r10,136(sp)
   48658:	04800044 	movi	r18,1
   4865c:	d8001d85 	stb	zero,118(sp)
   48660:	50800017 	ldw	r2,0(r10)
   48664:	52800104 	addi	r10,r10,4
   48668:	da802215 	stw	r10,136(sp)
   4866c:	d8801005 	stb	r2,64(sp)
   48670:	9027883a 	mov	r19,r18
   48674:	dd401004 	addi	r21,sp,64
   48678:	0013883a 	mov	r9,zero
   4867c:	003f1706 	br	482dc <__alt_mem_onchip_memory2_1+0xfffc72dc>
   48680:	21003fcc 	andi	r4,r4,255
   48684:	2003201e 	bne	r4,zero,49308 <___vfiprintf_internal_r+0x144c>
   48688:	a080080c 	andi	r2,r20,32
   4868c:	10004b26 	beq	r2,zero,487bc <___vfiprintf_internal_r+0x900>
   48690:	da802217 	ldw	r10,136(sp)
   48694:	50800117 	ldw	r2,4(r10)
   48698:	54800017 	ldw	r18,0(r10)
   4869c:	52800204 	addi	r10,r10,8
   486a0:	da802215 	stw	r10,136(sp)
   486a4:	1027883a 	mov	r19,r2
   486a8:	10022c16 	blt	r2,zero,48f5c <___vfiprintf_internal_r+0x10a0>
   486ac:	df001d83 	ldbu	fp,118(sp)
   486b0:	48007216 	blt	r9,zero,4887c <___vfiprintf_internal_r+0x9c0>
   486b4:	00ffdfc4 	movi	r3,-129
   486b8:	94c4b03a 	or	r2,r18,r19
   486bc:	a0e8703a 	and	r20,r20,r3
   486c0:	1000cc26 	beq	r2,zero,489f4 <___vfiprintf_internal_r+0xb38>
   486c4:	98021026 	beq	r19,zero,48f08 <___vfiprintf_internal_r+0x104c>
   486c8:	dc402415 	stw	r17,144(sp)
   486cc:	dc002515 	stw	r16,148(sp)
   486d0:	9823883a 	mov	r17,r19
   486d4:	9021883a 	mov	r16,r18
   486d8:	dd401a04 	addi	r21,sp,104
   486dc:	4825883a 	mov	r18,r9
   486e0:	4027883a 	mov	r19,r8
   486e4:	8009883a 	mov	r4,r16
   486e8:	880b883a 	mov	r5,r17
   486ec:	01800284 	movi	r6,10
   486f0:	000f883a 	mov	r7,zero
   486f4:	004a29c0 	call	4a29c <__umoddi3>
   486f8:	10800c04 	addi	r2,r2,48
   486fc:	ad7fffc4 	addi	r21,r21,-1
   48700:	8009883a 	mov	r4,r16
   48704:	880b883a 	mov	r5,r17
   48708:	a8800005 	stb	r2,0(r21)
   4870c:	01800284 	movi	r6,10
   48710:	000f883a 	mov	r7,zero
   48714:	0049d240 	call	49d24 <__udivdi3>
   48718:	1021883a 	mov	r16,r2
   4871c:	10c4b03a 	or	r2,r2,r3
   48720:	1823883a 	mov	r17,r3
   48724:	103fef1e 	bne	r2,zero,486e4 <__alt_mem_onchip_memory2_1+0xfffc76e4>
   48728:	dc402417 	ldw	r17,144(sp)
   4872c:	dc002517 	ldw	r16,148(sp)
   48730:	9013883a 	mov	r9,r18
   48734:	9811883a 	mov	r8,r19
   48738:	da801e17 	ldw	r10,120(sp)
   4873c:	5567c83a 	sub	r19,r10,r21
   48740:	003ede06 	br	482bc <__alt_mem_onchip_memory2_1+0xfffc72bc>
   48744:	38803fcc 	andi	r2,r7,255
   48748:	1080201c 	xori	r2,r2,128
   4874c:	10bfe004 	addi	r2,r2,-128
   48750:	1002371e 	bne	r2,zero,49030 <___vfiprintf_internal_r+0x1174>
   48754:	01000044 	movi	r4,1
   48758:	01c00804 	movi	r7,32
   4875c:	80c00007 	ldb	r3,0(r16)
   48760:	003e3506 	br	48038 <__alt_mem_onchip_memory2_1+0xfffc7038>
   48764:	a5000054 	ori	r20,r20,1
   48768:	80c00007 	ldb	r3,0(r16)
   4876c:	003e3206 	br	48038 <__alt_mem_onchip_memory2_1+0xfffc7038>
   48770:	a5002014 	ori	r20,r20,128
   48774:	80c00007 	ldb	r3,0(r16)
   48778:	003e2f06 	br	48038 <__alt_mem_onchip_memory2_1+0xfffc7038>
   4877c:	8015883a 	mov	r10,r16
   48780:	0023883a 	mov	r17,zero
   48784:	18bff404 	addi	r2,r3,-48
   48788:	50c00007 	ldb	r3,0(r10)
   4878c:	8c4002a4 	muli	r17,r17,10
   48790:	84000044 	addi	r16,r16,1
   48794:	8015883a 	mov	r10,r16
   48798:	1463883a 	add	r17,r2,r17
   4879c:	18bff404 	addi	r2,r3,-48
   487a0:	30bff92e 	bgeu	r6,r2,48788 <__alt_mem_onchip_memory2_1+0xfffc7788>
   487a4:	003e2506 	br	4803c <__alt_mem_onchip_memory2_1+0xfffc703c>
   487a8:	21003fcc 	andi	r4,r4,255
   487ac:	2002d41e 	bne	r4,zero,49300 <___vfiprintf_internal_r+0x1444>
   487b0:	a5000414 	ori	r20,r20,16
   487b4:	a080080c 	andi	r2,r20,32
   487b8:	103fb51e 	bne	r2,zero,48690 <__alt_mem_onchip_memory2_1+0xfffc7690>
   487bc:	a080040c 	andi	r2,r20,16
   487c0:	1001f826 	beq	r2,zero,48fa4 <___vfiprintf_internal_r+0x10e8>
   487c4:	da802217 	ldw	r10,136(sp)
   487c8:	54800017 	ldw	r18,0(r10)
   487cc:	52800104 	addi	r10,r10,4
   487d0:	da802215 	stw	r10,136(sp)
   487d4:	9027d7fa 	srai	r19,r18,31
   487d8:	9805883a 	mov	r2,r19
   487dc:	003fb206 	br	486a8 <__alt_mem_onchip_memory2_1+0xfffc76a8>
   487e0:	21003fcc 	andi	r4,r4,255
   487e4:	2002c41e 	bne	r4,zero,492f8 <___vfiprintf_internal_r+0x143c>
   487e8:	a5000414 	ori	r20,r20,16
   487ec:	a080080c 	andi	r2,r20,32
   487f0:	103f5f1e 	bne	r2,zero,48570 <__alt_mem_onchip_memory2_1+0xfffc7570>
   487f4:	a080040c 	andi	r2,r20,16
   487f8:	10020f26 	beq	r2,zero,49038 <___vfiprintf_internal_r+0x117c>
   487fc:	da802217 	ldw	r10,136(sp)
   48800:	d8001d85 	stb	zero,118(sp)
   48804:	0027883a 	mov	r19,zero
   48808:	50800104 	addi	r2,r10,4
   4880c:	54800017 	ldw	r18,0(r10)
   48810:	48021116 	blt	r9,zero,49058 <___vfiprintf_internal_r+0x119c>
   48814:	00ffdfc4 	movi	r3,-129
   48818:	d8802215 	stw	r2,136(sp)
   4881c:	a0e8703a 	and	r20,r20,r3
   48820:	903f5e1e 	bne	r18,zero,4859c <__alt_mem_onchip_memory2_1+0xfffc759c>
   48824:	0039883a 	mov	fp,zero
   48828:	4802a626 	beq	r9,zero,492c4 <___vfiprintf_internal_r+0x1408>
   4882c:	0025883a 	mov	r18,zero
   48830:	0027883a 	mov	r19,zero
   48834:	003f5a06 	br	485a0 <__alt_mem_onchip_memory2_1+0xfffc75a0>
   48838:	21003fcc 	andi	r4,r4,255
   4883c:	20029f1e 	bne	r4,zero,492bc <___vfiprintf_internal_r+0x1400>
   48840:	a5000414 	ori	r20,r20,16
   48844:	a080080c 	andi	r2,r20,32
   48848:	10005e1e 	bne	r2,zero,489c4 <___vfiprintf_internal_r+0xb08>
   4884c:	a080040c 	andi	r2,r20,16
   48850:	1001a21e 	bne	r2,zero,48edc <___vfiprintf_internal_r+0x1020>
   48854:	a080100c 	andi	r2,r20,64
   48858:	d8001d85 	stb	zero,118(sp)
   4885c:	da802217 	ldw	r10,136(sp)
   48860:	1002231e 	bne	r2,zero,490f0 <___vfiprintf_internal_r+0x1234>
   48864:	50800104 	addi	r2,r10,4
   48868:	54800017 	ldw	r18,0(r10)
   4886c:	0027883a 	mov	r19,zero
   48870:	4801a00e 	bge	r9,zero,48ef4 <___vfiprintf_internal_r+0x1038>
   48874:	d8802215 	stw	r2,136(sp)
   48878:	0039883a 	mov	fp,zero
   4887c:	94c4b03a 	or	r2,r18,r19
   48880:	103f901e 	bne	r2,zero,486c4 <__alt_mem_onchip_memory2_1+0xfffc76c4>
   48884:	00800044 	movi	r2,1
   48888:	10803fcc 	andi	r2,r2,255
   4888c:	00c00044 	movi	r3,1
   48890:	10c05926 	beq	r2,r3,489f8 <___vfiprintf_internal_r+0xb3c>
   48894:	00c00084 	movi	r3,2
   48898:	10ffe41e 	bne	r2,r3,4882c <__alt_mem_onchip_memory2_1+0xfffc782c>
   4889c:	0025883a 	mov	r18,zero
   488a0:	0027883a 	mov	r19,zero
   488a4:	00013d06 	br	48d9c <___vfiprintf_internal_r+0xee0>
   488a8:	21003fcc 	andi	r4,r4,255
   488ac:	2002811e 	bne	r4,zero,492b4 <___vfiprintf_internal_r+0x13f8>
   488b0:	00800174 	movhi	r2,5
   488b4:	10be8704 	addi	r2,r2,-1508
   488b8:	d8802615 	stw	r2,152(sp)
   488bc:	a080080c 	andi	r2,r20,32
   488c0:	103f561e 	bne	r2,zero,4861c <__alt_mem_onchip_memory2_1+0xfffc761c>
   488c4:	a080040c 	andi	r2,r20,16
   488c8:	1001d126 	beq	r2,zero,49010 <___vfiprintf_internal_r+0x1154>
   488cc:	da802217 	ldw	r10,136(sp)
   488d0:	0027883a 	mov	r19,zero
   488d4:	54800017 	ldw	r18,0(r10)
   488d8:	52800104 	addi	r10,r10,4
   488dc:	da802215 	stw	r10,136(sp)
   488e0:	003f5306 	br	48630 <__alt_mem_onchip_memory2_1+0xfffc7630>
   488e4:	da802217 	ldw	r10,136(sp)
   488e8:	d8001d85 	stb	zero,118(sp)
   488ec:	55400017 	ldw	r21,0(r10)
   488f0:	50c00104 	addi	r3,r10,4
   488f4:	a8024226 	beq	r21,zero,49200 <___vfiprintf_internal_r+0x1344>
   488f8:	48021816 	blt	r9,zero,4915c <___vfiprintf_internal_r+0x12a0>
   488fc:	480d883a 	mov	r6,r9
   48900:	000b883a 	mov	r5,zero
   48904:	a809883a 	mov	r4,r21
   48908:	d8c02a15 	stw	r3,168(sp)
   4890c:	da002b15 	stw	r8,172(sp)
   48910:	da402c15 	stw	r9,176(sp)
   48914:	00460b80 	call	460b8 <memchr>
   48918:	d8c02a17 	ldw	r3,168(sp)
   4891c:	da002b17 	ldw	r8,172(sp)
   48920:	da402c17 	ldw	r9,176(sp)
   48924:	10024826 	beq	r2,zero,49248 <___vfiprintf_internal_r+0x138c>
   48928:	1567c83a 	sub	r19,r2,r21
   4892c:	df001d83 	ldbu	fp,118(sp)
   48930:	d8c02215 	stw	r3,136(sp)
   48934:	0013883a 	mov	r9,zero
   48938:	003e6006 	br	482bc <__alt_mem_onchip_memory2_1+0xfffc72bc>
   4893c:	21003fcc 	andi	r4,r4,255
   48940:	203fc026 	beq	r4,zero,48844 <__alt_mem_onchip_memory2_1+0xfffc7844>
   48944:	d9c01d85 	stb	r7,118(sp)
   48948:	003fbe06 	br	48844 <__alt_mem_onchip_memory2_1+0xfffc7844>
   4894c:	da802217 	ldw	r10,136(sp)
   48950:	54400017 	ldw	r17,0(r10)
   48954:	50800104 	addi	r2,r10,4
   48958:	883e3b16 	blt	r17,zero,48248 <__alt_mem_onchip_memory2_1+0xfffc7248>
   4895c:	d8802215 	stw	r2,136(sp)
   48960:	80c00007 	ldb	r3,0(r16)
   48964:	003db406 	br	48038 <__alt_mem_onchip_memory2_1+0xfffc7038>
   48968:	01000044 	movi	r4,1
   4896c:	01c00ac4 	movi	r7,43
   48970:	80c00007 	ldb	r3,0(r16)
   48974:	003db006 	br	48038 <__alt_mem_onchip_memory2_1+0xfffc7038>
   48978:	80c00007 	ldb	r3,0(r16)
   4897c:	82800044 	addi	r10,r16,1
   48980:	1b423c26 	beq	r3,r13,49274 <___vfiprintf_internal_r+0x13b8>
   48984:	18bff404 	addi	r2,r3,-48
   48988:	0013883a 	mov	r9,zero
   4898c:	30822b36 	bltu	r6,r2,4923c <___vfiprintf_internal_r+0x1380>
   48990:	50c00007 	ldb	r3,0(r10)
   48994:	4a4002a4 	muli	r9,r9,10
   48998:	54000044 	addi	r16,r10,1
   4899c:	8015883a 	mov	r10,r16
   489a0:	4893883a 	add	r9,r9,r2
   489a4:	18bff404 	addi	r2,r3,-48
   489a8:	30bff92e 	bgeu	r6,r2,48990 <__alt_mem_onchip_memory2_1+0xfffc7990>
   489ac:	483da30e 	bge	r9,zero,4803c <__alt_mem_onchip_memory2_1+0xfffc703c>
   489b0:	027fffc4 	movi	r9,-1
   489b4:	003da106 	br	4803c <__alt_mem_onchip_memory2_1+0xfffc703c>
   489b8:	a5001014 	ori	r20,r20,64
   489bc:	80c00007 	ldb	r3,0(r16)
   489c0:	003d9d06 	br	48038 <__alt_mem_onchip_memory2_1+0xfffc7038>
   489c4:	da802217 	ldw	r10,136(sp)
   489c8:	d8001d85 	stb	zero,118(sp)
   489cc:	50c00204 	addi	r3,r10,8
   489d0:	54800017 	ldw	r18,0(r10)
   489d4:	54c00117 	ldw	r19,4(r10)
   489d8:	4801ca16 	blt	r9,zero,49104 <___vfiprintf_internal_r+0x1248>
   489dc:	013fdfc4 	movi	r4,-129
   489e0:	94c4b03a 	or	r2,r18,r19
   489e4:	d8c02215 	stw	r3,136(sp)
   489e8:	a128703a 	and	r20,r20,r4
   489ec:	0039883a 	mov	fp,zero
   489f0:	103f341e 	bne	r2,zero,486c4 <__alt_mem_onchip_memory2_1+0xfffc76c4>
   489f4:	483e2e26 	beq	r9,zero,482b0 <__alt_mem_onchip_memory2_1+0xfffc72b0>
   489f8:	0025883a 	mov	r18,zero
   489fc:	94800c04 	addi	r18,r18,48
   48a00:	dc8019c5 	stb	r18,103(sp)
   48a04:	dcc02717 	ldw	r19,156(sp)
   48a08:	dd4019c4 	addi	r21,sp,103
   48a0c:	003e2b06 	br	482bc <__alt_mem_onchip_memory2_1+0xfffc72bc>
   48a10:	21003fcc 	andi	r4,r4,255
   48a14:	2002361e 	bne	r4,zero,492f0 <___vfiprintf_internal_r+0x1434>
   48a18:	1801c126 	beq	r3,zero,49120 <___vfiprintf_internal_r+0x1264>
   48a1c:	04800044 	movi	r18,1
   48a20:	d8c01005 	stb	r3,64(sp)
   48a24:	d8001d85 	stb	zero,118(sp)
   48a28:	9027883a 	mov	r19,r18
   48a2c:	dd401004 	addi	r21,sp,64
   48a30:	003f1106 	br	48678 <__alt_mem_onchip_memory2_1+0xfffc7678>
   48a34:	d9402117 	ldw	r5,132(sp)
   48a38:	d9002017 	ldw	r4,128(sp)
   48a3c:	d9801a04 	addi	r6,sp,104
   48a40:	d9c02b15 	stw	r7,172(sp)
   48a44:	dbc02a15 	stw	r15,168(sp)
   48a48:	0047da80 	call	47da8 <__sprint_r.part.0>
   48a4c:	d9c02b17 	ldw	r7,172(sp)
   48a50:	dbc02a17 	ldw	r15,168(sp)
   48a54:	10006d1e 	bne	r2,zero,48c0c <___vfiprintf_internal_r+0xd50>
   48a58:	d9801b17 	ldw	r6,108(sp)
   48a5c:	d8801c17 	ldw	r2,112(sp)
   48a60:	d811883a 	mov	r8,sp
   48a64:	31400044 	addi	r5,r6,1
   48a68:	003e3306 	br	48338 <__alt_mem_onchip_memory2_1+0xfffc7338>
   48a6c:	d9401b17 	ldw	r5,108(sp)
   48a70:	d8801c17 	ldw	r2,112(sp)
   48a74:	29000044 	addi	r4,r5,1
   48a78:	d8c01d87 	ldb	r3,118(sp)
   48a7c:	183e4d26 	beq	r3,zero,483b4 <__alt_mem_onchip_memory2_1+0xfffc73b4>
   48a80:	00c00044 	movi	r3,1
   48a84:	d9401d84 	addi	r5,sp,118
   48a88:	10c5883a 	add	r2,r2,r3
   48a8c:	41400015 	stw	r5,0(r8)
   48a90:	40c00115 	stw	r3,4(r8)
   48a94:	d8801c15 	stw	r2,112(sp)
   48a98:	d9001b15 	stw	r4,108(sp)
   48a9c:	014001c4 	movi	r5,7
   48aa0:	2900a90e 	bge	r5,r4,48d48 <___vfiprintf_internal_r+0xe8c>
   48aa4:	1000da1e 	bne	r2,zero,48e10 <___vfiprintf_internal_r+0xf54>
   48aa8:	7000ab1e 	bne	r14,zero,48d58 <___vfiprintf_internal_r+0xe9c>
   48aac:	000b883a 	mov	r5,zero
   48ab0:	1809883a 	mov	r4,r3
   48ab4:	d811883a 	mov	r8,sp
   48ab8:	00c02004 	movi	r3,128
   48abc:	e0fe4d26 	beq	fp,r3,483f4 <__alt_mem_onchip_memory2_1+0xfffc73f4>
   48ac0:	4cf9c83a 	sub	fp,r9,r19
   48ac4:	073e7b0e 	bge	zero,fp,484b4 <__alt_mem_onchip_memory2_1+0xfffc74b4>
   48ac8:	01c00404 	movi	r7,16
   48acc:	3f01900e 	bge	r7,fp,49110 <___vfiprintf_internal_r+0x1254>
   48ad0:	00c00174 	movhi	r3,5
   48ad4:	18feed04 	addi	r3,r3,-1100
   48ad8:	d8c02415 	stw	r3,144(sp)
   48adc:	034001c4 	movi	r13,7
   48ae0:	00000506 	br	48af8 <___vfiprintf_internal_r+0xc3c>
   48ae4:	29000084 	addi	r4,r5,2
   48ae8:	42000204 	addi	r8,r8,8
   48aec:	180b883a 	mov	r5,r3
   48af0:	e73ffc04 	addi	fp,fp,-16
   48af4:	3f000d0e 	bge	r7,fp,48b2c <___vfiprintf_internal_r+0xc70>
   48af8:	10800404 	addi	r2,r2,16
   48afc:	28c00044 	addi	r3,r5,1
   48b00:	45c00015 	stw	r23,0(r8)
   48b04:	41c00115 	stw	r7,4(r8)
   48b08:	d8801c15 	stw	r2,112(sp)
   48b0c:	d8c01b15 	stw	r3,108(sp)
   48b10:	68fff40e 	bge	r13,r3,48ae4 <__alt_mem_onchip_memory2_1+0xfffc7ae4>
   48b14:	1000101e 	bne	r2,zero,48b58 <___vfiprintf_internal_r+0xc9c>
   48b18:	e73ffc04 	addi	fp,fp,-16
   48b1c:	01000044 	movi	r4,1
   48b20:	000b883a 	mov	r5,zero
   48b24:	d811883a 	mov	r8,sp
   48b28:	3f3ff316 	blt	r7,fp,48af8 <__alt_mem_onchip_memory2_1+0xfffc7af8>
   48b2c:	da802417 	ldw	r10,144(sp)
   48b30:	1705883a 	add	r2,r2,fp
   48b34:	47000115 	stw	fp,4(r8)
   48b38:	42800015 	stw	r10,0(r8)
   48b3c:	d8801c15 	stw	r2,112(sp)
   48b40:	d9001b15 	stw	r4,108(sp)
   48b44:	00c001c4 	movi	r3,7
   48b48:	19003616 	blt	r3,r4,48c24 <___vfiprintf_internal_r+0xd68>
   48b4c:	42000204 	addi	r8,r8,8
   48b50:	21000044 	addi	r4,r4,1
   48b54:	003e5706 	br	484b4 <__alt_mem_onchip_memory2_1+0xfffc74b4>
   48b58:	d9402117 	ldw	r5,132(sp)
   48b5c:	d9002017 	ldw	r4,128(sp)
   48b60:	d9801a04 	addi	r6,sp,104
   48b64:	d9c02b15 	stw	r7,172(sp)
   48b68:	db402a15 	stw	r13,168(sp)
   48b6c:	0047da80 	call	47da8 <__sprint_r.part.0>
   48b70:	d9c02b17 	ldw	r7,172(sp)
   48b74:	db402a17 	ldw	r13,168(sp)
   48b78:	1000241e 	bne	r2,zero,48c0c <___vfiprintf_internal_r+0xd50>
   48b7c:	d9401b17 	ldw	r5,108(sp)
   48b80:	d8801c17 	ldw	r2,112(sp)
   48b84:	d811883a 	mov	r8,sp
   48b88:	29000044 	addi	r4,r5,1
   48b8c:	003fd806 	br	48af0 <__alt_mem_onchip_memory2_1+0xfffc7af0>
   48b90:	d9401b17 	ldw	r5,108(sp)
   48b94:	00c00174 	movhi	r3,5
   48b98:	18fef104 	addi	r3,r3,-1084
   48b9c:	d8c02415 	stw	r3,144(sp)
   48ba0:	29400044 	addi	r5,r5,1
   48ba4:	d8c02417 	ldw	r3,144(sp)
   48ba8:	14c5883a 	add	r2,r2,r19
   48bac:	44c00115 	stw	r19,4(r8)
   48bb0:	40c00015 	stw	r3,0(r8)
   48bb4:	d8801c15 	stw	r2,112(sp)
   48bb8:	d9401b15 	stw	r5,108(sp)
   48bbc:	00c001c4 	movi	r3,7
   48bc0:	1940070e 	bge	r3,r5,48be0 <___vfiprintf_internal_r+0xd24>
   48bc4:	103e4826 	beq	r2,zero,484e8 <__alt_mem_onchip_memory2_1+0xfffc74e8>
   48bc8:	d9402117 	ldw	r5,132(sp)
   48bcc:	d9002017 	ldw	r4,128(sp)
   48bd0:	d9801a04 	addi	r6,sp,104
   48bd4:	0047da80 	call	47da8 <__sprint_r.part.0>
   48bd8:	10000c1e 	bne	r2,zero,48c0c <___vfiprintf_internal_r+0xd50>
   48bdc:	d8801c17 	ldw	r2,112(sp)
   48be0:	8c80010e 	bge	r17,r18,48be8 <___vfiprintf_internal_r+0xd2c>
   48be4:	9023883a 	mov	r17,r18
   48be8:	da802317 	ldw	r10,140(sp)
   48bec:	5455883a 	add	r10,r10,r17
   48bf0:	da802315 	stw	r10,140(sp)
   48bf4:	103e4126 	beq	r2,zero,484fc <__alt_mem_onchip_memory2_1+0xfffc74fc>
   48bf8:	d9402117 	ldw	r5,132(sp)
   48bfc:	d9002017 	ldw	r4,128(sp)
   48c00:	d9801a04 	addi	r6,sp,104
   48c04:	0047da80 	call	47da8 <__sprint_r.part.0>
   48c08:	103e3c26 	beq	r2,zero,484fc <__alt_mem_onchip_memory2_1+0xfffc74fc>
   48c0c:	dd002117 	ldw	r20,132(sp)
   48c10:	a080030b 	ldhu	r2,12(r20)
   48c14:	1080100c 	andi	r2,r2,64
   48c18:	1001231e 	bne	r2,zero,490a8 <___vfiprintf_internal_r+0x11ec>
   48c1c:	d8802317 	ldw	r2,140(sp)
   48c20:	003d7b06 	br	48210 <__alt_mem_onchip_memory2_1+0xfffc7210>
   48c24:	1000991e 	bne	r2,zero,48e8c <___vfiprintf_internal_r+0xfd0>
   48c28:	00c00044 	movi	r3,1
   48c2c:	9805883a 	mov	r2,r19
   48c30:	dd400015 	stw	r21,0(sp)
   48c34:	dcc00115 	stw	r19,4(sp)
   48c38:	dcc01c15 	stw	r19,112(sp)
   48c3c:	d8c01b15 	stw	r3,108(sp)
   48c40:	d811883a 	mov	r8,sp
   48c44:	42000204 	addi	r8,r8,8
   48c48:	a2c0010c 	andi	r11,r20,4
   48c4c:	583fe426 	beq	r11,zero,48be0 <__alt_mem_onchip_memory2_1+0xfffc7be0>
   48c50:	8ca7c83a 	sub	r19,r17,r18
   48c54:	04ffe20e 	bge	zero,r19,48be0 <__alt_mem_onchip_memory2_1+0xfffc7be0>
   48c58:	01c00404 	movi	r7,16
   48c5c:	3cffcc0e 	bge	r7,r19,48b90 <__alt_mem_onchip_memory2_1+0xfffc7b90>
   48c60:	02800174 	movhi	r10,5
   48c64:	52bef104 	addi	r10,r10,-1084
   48c68:	d9001b17 	ldw	r4,108(sp)
   48c6c:	da802415 	stw	r10,144(sp)
   48c70:	382b883a 	mov	r21,r7
   48c74:	050001c4 	movi	r20,7
   48c78:	df002017 	ldw	fp,128(sp)
   48c7c:	00000506 	br	48c94 <___vfiprintf_internal_r+0xdd8>
   48c80:	21400084 	addi	r5,r4,2
   48c84:	42000204 	addi	r8,r8,8
   48c88:	1809883a 	mov	r4,r3
   48c8c:	9cfffc04 	addi	r19,r19,-16
   48c90:	acffc40e 	bge	r21,r19,48ba4 <__alt_mem_onchip_memory2_1+0xfffc7ba4>
   48c94:	10800404 	addi	r2,r2,16
   48c98:	20c00044 	addi	r3,r4,1
   48c9c:	45800015 	stw	r22,0(r8)
   48ca0:	45400115 	stw	r21,4(r8)
   48ca4:	d8801c15 	stw	r2,112(sp)
   48ca8:	d8c01b15 	stw	r3,108(sp)
   48cac:	a0fff40e 	bge	r20,r3,48c80 <__alt_mem_onchip_memory2_1+0xfffc7c80>
   48cb0:	1000041e 	bne	r2,zero,48cc4 <___vfiprintf_internal_r+0xe08>
   48cb4:	01400044 	movi	r5,1
   48cb8:	0009883a 	mov	r4,zero
   48cbc:	d811883a 	mov	r8,sp
   48cc0:	003ff206 	br	48c8c <__alt_mem_onchip_memory2_1+0xfffc7c8c>
   48cc4:	d9402117 	ldw	r5,132(sp)
   48cc8:	d9801a04 	addi	r6,sp,104
   48ccc:	e009883a 	mov	r4,fp
   48cd0:	0047da80 	call	47da8 <__sprint_r.part.0>
   48cd4:	103fcd1e 	bne	r2,zero,48c0c <__alt_mem_onchip_memory2_1+0xfffc7c0c>
   48cd8:	d9001b17 	ldw	r4,108(sp)
   48cdc:	d8801c17 	ldw	r2,112(sp)
   48ce0:	d811883a 	mov	r8,sp
   48ce4:	21400044 	addi	r5,r4,1
   48ce8:	003fe806 	br	48c8c <__alt_mem_onchip_memory2_1+0xfffc7c8c>
   48cec:	d9402117 	ldw	r5,132(sp)
   48cf0:	d9002017 	ldw	r4,128(sp)
   48cf4:	d9801a04 	addi	r6,sp,104
   48cf8:	d9c02b15 	stw	r7,172(sp)
   48cfc:	db402a15 	stw	r13,168(sp)
   48d00:	0047da80 	call	47da8 <__sprint_r.part.0>
   48d04:	d9c02b17 	ldw	r7,172(sp)
   48d08:	db402a17 	ldw	r13,168(sp)
   48d0c:	103fbf1e 	bne	r2,zero,48c0c <__alt_mem_onchip_memory2_1+0xfffc7c0c>
   48d10:	d9401b17 	ldw	r5,108(sp)
   48d14:	d8801c17 	ldw	r2,112(sp)
   48d18:	d811883a 	mov	r8,sp
   48d1c:	29800044 	addi	r6,r5,1
   48d20:	003dc406 	br	48434 <__alt_mem_onchip_memory2_1+0xfffc7434>
   48d24:	1000d21e 	bne	r2,zero,49070 <___vfiprintf_internal_r+0x11b4>
   48d28:	d8c01d87 	ldb	r3,118(sp)
   48d2c:	18009526 	beq	r3,zero,48f84 <___vfiprintf_internal_r+0x10c8>
   48d30:	00800044 	movi	r2,1
   48d34:	d8c01d84 	addi	r3,sp,118
   48d38:	1009883a 	mov	r4,r2
   48d3c:	d8c00015 	stw	r3,0(sp)
   48d40:	d8800115 	stw	r2,4(sp)
   48d44:	d811883a 	mov	r8,sp
   48d48:	200b883a 	mov	r5,r4
   48d4c:	42000204 	addi	r8,r8,8
   48d50:	21000044 	addi	r4,r4,1
   48d54:	003d9706 	br	483b4 <__alt_mem_onchip_memory2_1+0xfffc73b4>
   48d58:	d9001d04 	addi	r4,sp,116
   48d5c:	00800084 	movi	r2,2
   48d60:	d9000015 	stw	r4,0(sp)
   48d64:	d8800115 	stw	r2,4(sp)
   48d68:	1809883a 	mov	r4,r3
   48d6c:	d811883a 	mov	r8,sp
   48d70:	200b883a 	mov	r5,r4
   48d74:	42000204 	addi	r8,r8,8
   48d78:	21000044 	addi	r4,r4,1
   48d7c:	003f4e06 	br	48ab8 <__alt_mem_onchip_memory2_1+0xfffc7ab8>
   48d80:	d8001d85 	stb	zero,118(sp)
   48d84:	48005016 	blt	r9,zero,48ec8 <___vfiprintf_internal_r+0x100c>
   48d88:	00ffdfc4 	movi	r3,-129
   48d8c:	94c4b03a 	or	r2,r18,r19
   48d90:	a0e8703a 	and	r20,r20,r3
   48d94:	103d4426 	beq	r2,zero,482a8 <__alt_mem_onchip_memory2_1+0xfffc72a8>
   48d98:	0039883a 	mov	fp,zero
   48d9c:	d9002617 	ldw	r4,152(sp)
   48da0:	dd401a04 	addi	r21,sp,104
   48da4:	908003cc 	andi	r2,r18,15
   48da8:	9806973a 	slli	r3,r19,28
   48dac:	2085883a 	add	r2,r4,r2
   48db0:	9024d13a 	srli	r18,r18,4
   48db4:	10800003 	ldbu	r2,0(r2)
   48db8:	9826d13a 	srli	r19,r19,4
   48dbc:	ad7fffc4 	addi	r21,r21,-1
   48dc0:	1ca4b03a 	or	r18,r3,r18
   48dc4:	a8800005 	stb	r2,0(r21)
   48dc8:	94c4b03a 	or	r2,r18,r19
   48dcc:	103ff51e 	bne	r2,zero,48da4 <__alt_mem_onchip_memory2_1+0xfffc7da4>
   48dd0:	003e5906 	br	48738 <__alt_mem_onchip_memory2_1+0xfffc7738>
   48dd4:	d9402117 	ldw	r5,132(sp)
   48dd8:	d9002017 	ldw	r4,128(sp)
   48ddc:	d9801a04 	addi	r6,sp,104
   48de0:	0047da80 	call	47da8 <__sprint_r.part.0>
   48de4:	103f891e 	bne	r2,zero,48c0c <__alt_mem_onchip_memory2_1+0xfffc7c0c>
   48de8:	d8801c17 	ldw	r2,112(sp)
   48dec:	d811883a 	mov	r8,sp
   48df0:	003f9506 	br	48c48 <__alt_mem_onchip_memory2_1+0xfffc7c48>
   48df4:	d9402117 	ldw	r5,132(sp)
   48df8:	d9002017 	ldw	r4,128(sp)
   48dfc:	d9801a04 	addi	r6,sp,104
   48e00:	0047da80 	call	47da8 <__sprint_r.part.0>
   48e04:	103f811e 	bne	r2,zero,48c0c <__alt_mem_onchip_memory2_1+0xfffc7c0c>
   48e08:	d811883a 	mov	r8,sp
   48e0c:	003ced06 	br	481c4 <__alt_mem_onchip_memory2_1+0xfffc71c4>
   48e10:	d9402117 	ldw	r5,132(sp)
   48e14:	d9002017 	ldw	r4,128(sp)
   48e18:	d9801a04 	addi	r6,sp,104
   48e1c:	da402c15 	stw	r9,176(sp)
   48e20:	db802a15 	stw	r14,168(sp)
   48e24:	0047da80 	call	47da8 <__sprint_r.part.0>
   48e28:	da402c17 	ldw	r9,176(sp)
   48e2c:	db802a17 	ldw	r14,168(sp)
   48e30:	103f761e 	bne	r2,zero,48c0c <__alt_mem_onchip_memory2_1+0xfffc7c0c>
   48e34:	d9401b17 	ldw	r5,108(sp)
   48e38:	d8801c17 	ldw	r2,112(sp)
   48e3c:	d811883a 	mov	r8,sp
   48e40:	29000044 	addi	r4,r5,1
   48e44:	003d5b06 	br	483b4 <__alt_mem_onchip_memory2_1+0xfffc73b4>
   48e48:	d9402117 	ldw	r5,132(sp)
   48e4c:	d9002017 	ldw	r4,128(sp)
   48e50:	d9801a04 	addi	r6,sp,104
   48e54:	da402c15 	stw	r9,176(sp)
   48e58:	0047da80 	call	47da8 <__sprint_r.part.0>
   48e5c:	da402c17 	ldw	r9,176(sp)
   48e60:	103f6a1e 	bne	r2,zero,48c0c <__alt_mem_onchip_memory2_1+0xfffc7c0c>
   48e64:	d9401b17 	ldw	r5,108(sp)
   48e68:	d8801c17 	ldw	r2,112(sp)
   48e6c:	d811883a 	mov	r8,sp
   48e70:	29000044 	addi	r4,r5,1
   48e74:	003f1006 	br	48ab8 <__alt_mem_onchip_memory2_1+0xfffc7ab8>
   48e78:	1000c31e 	bne	r2,zero,49188 <___vfiprintf_internal_r+0x12cc>
   48e7c:	01000044 	movi	r4,1
   48e80:	000b883a 	mov	r5,zero
   48e84:	d811883a 	mov	r8,sp
   48e88:	003f0d06 	br	48ac0 <__alt_mem_onchip_memory2_1+0xfffc7ac0>
   48e8c:	d9402117 	ldw	r5,132(sp)
   48e90:	d9002017 	ldw	r4,128(sp)
   48e94:	d9801a04 	addi	r6,sp,104
   48e98:	0047da80 	call	47da8 <__sprint_r.part.0>
   48e9c:	103f5b1e 	bne	r2,zero,48c0c <__alt_mem_onchip_memory2_1+0xfffc7c0c>
   48ea0:	d9001b17 	ldw	r4,108(sp)
   48ea4:	d8801c17 	ldw	r2,112(sp)
   48ea8:	d811883a 	mov	r8,sp
   48eac:	21000044 	addi	r4,r4,1
   48eb0:	003d8006 	br	484b4 <__alt_mem_onchip_memory2_1+0xfffc74b4>
   48eb4:	01000174 	movhi	r4,5
   48eb8:	213e8c04 	addi	r4,r4,-1488
   48ebc:	d9002615 	stw	r4,152(sp)
   48ec0:	d8c02215 	stw	r3,136(sp)
   48ec4:	1029883a 	mov	r20,r2
   48ec8:	94c4b03a 	or	r2,r18,r19
   48ecc:	103fb21e 	bne	r2,zero,48d98 <__alt_mem_onchip_memory2_1+0xfffc7d98>
   48ed0:	0039883a 	mov	fp,zero
   48ed4:	00800084 	movi	r2,2
   48ed8:	003e6b06 	br	48888 <__alt_mem_onchip_memory2_1+0xfffc7888>
   48edc:	da802217 	ldw	r10,136(sp)
   48ee0:	d8001d85 	stb	zero,118(sp)
   48ee4:	0027883a 	mov	r19,zero
   48ee8:	50800104 	addi	r2,r10,4
   48eec:	54800017 	ldw	r18,0(r10)
   48ef0:	483e6016 	blt	r9,zero,48874 <__alt_mem_onchip_memory2_1+0xfffc7874>
   48ef4:	00ffdfc4 	movi	r3,-129
   48ef8:	d8802215 	stw	r2,136(sp)
   48efc:	a0e8703a 	and	r20,r20,r3
   48f00:	0039883a 	mov	fp,zero
   48f04:	903ebb26 	beq	r18,zero,489f4 <__alt_mem_onchip_memory2_1+0xfffc79f4>
   48f08:	00800244 	movi	r2,9
   48f0c:	14bdee36 	bltu	r2,r18,486c8 <__alt_mem_onchip_memory2_1+0xfffc76c8>
   48f10:	003eba06 	br	489fc <__alt_mem_onchip_memory2_1+0xfffc79fc>
   48f14:	00800c04 	movi	r2,48
   48f18:	d8c01d45 	stb	r3,117(sp)
   48f1c:	d8801d05 	stb	r2,116(sp)
   48f20:	d8001d85 	stb	zero,118(sp)
   48f24:	a0c00094 	ori	r3,r20,2
   48f28:	4800a916 	blt	r9,zero,491d0 <___vfiprintf_internal_r+0x1314>
   48f2c:	00bfdfc4 	movi	r2,-129
   48f30:	a096703a 	and	r11,r20,r2
   48f34:	5d000094 	ori	r20,r11,2
   48f38:	0039883a 	mov	fp,zero
   48f3c:	003f9706 	br	48d9c <__alt_mem_onchip_memory2_1+0xfffc7d9c>
   48f40:	8025883a 	mov	r18,r16
   48f44:	003c2e06 	br	48000 <__alt_mem_onchip_memory2_1+0xfffc7000>
   48f48:	00800174 	movhi	r2,5
   48f4c:	10be8c04 	addi	r2,r2,-1488
   48f50:	0039883a 	mov	fp,zero
   48f54:	d8802615 	stw	r2,152(sp)
   48f58:	003f9006 	br	48d9c <__alt_mem_onchip_memory2_1+0xfffc7d9c>
   48f5c:	04a5c83a 	sub	r18,zero,r18
   48f60:	07000b44 	movi	fp,45
   48f64:	9004c03a 	cmpne	r2,r18,zero
   48f68:	04e7c83a 	sub	r19,zero,r19
   48f6c:	df001d85 	stb	fp,118(sp)
   48f70:	98a7c83a 	sub	r19,r19,r2
   48f74:	48009f16 	blt	r9,zero,491f4 <___vfiprintf_internal_r+0x1338>
   48f78:	00bfdfc4 	movi	r2,-129
   48f7c:	a0a8703a 	and	r20,r20,r2
   48f80:	003dd006 	br	486c4 <__alt_mem_onchip_memory2_1+0xfffc76c4>
   48f84:	70004c26 	beq	r14,zero,490b8 <___vfiprintf_internal_r+0x11fc>
   48f88:	00800084 	movi	r2,2
   48f8c:	d8c01d04 	addi	r3,sp,116
   48f90:	d8c00015 	stw	r3,0(sp)
   48f94:	d8800115 	stw	r2,4(sp)
   48f98:	01000044 	movi	r4,1
   48f9c:	d811883a 	mov	r8,sp
   48fa0:	003f7306 	br	48d70 <__alt_mem_onchip_memory2_1+0xfffc7d70>
   48fa4:	a080100c 	andi	r2,r20,64
   48fa8:	da802217 	ldw	r10,136(sp)
   48fac:	103e0626 	beq	r2,zero,487c8 <__alt_mem_onchip_memory2_1+0xfffc77c8>
   48fb0:	5480000f 	ldh	r18,0(r10)
   48fb4:	52800104 	addi	r10,r10,4
   48fb8:	da802215 	stw	r10,136(sp)
   48fbc:	9027d7fa 	srai	r19,r18,31
   48fc0:	9805883a 	mov	r2,r19
   48fc4:	003db806 	br	486a8 <__alt_mem_onchip_memory2_1+0xfffc76a8>
   48fc8:	a080040c 	andi	r2,r20,16
   48fcc:	1000091e 	bne	r2,zero,48ff4 <___vfiprintf_internal_r+0x1138>
   48fd0:	a2c0100c 	andi	r11,r20,64
   48fd4:	58000726 	beq	r11,zero,48ff4 <___vfiprintf_internal_r+0x1138>
   48fd8:	da802217 	ldw	r10,136(sp)
   48fdc:	50800017 	ldw	r2,0(r10)
   48fe0:	52800104 	addi	r10,r10,4
   48fe4:	da802215 	stw	r10,136(sp)
   48fe8:	da802317 	ldw	r10,140(sp)
   48fec:	1280000d 	sth	r10,0(r2)
   48ff0:	003be706 	br	47f90 <__alt_mem_onchip_memory2_1+0xfffc6f90>
   48ff4:	da802217 	ldw	r10,136(sp)
   48ff8:	50800017 	ldw	r2,0(r10)
   48ffc:	52800104 	addi	r10,r10,4
   49000:	da802215 	stw	r10,136(sp)
   49004:	da802317 	ldw	r10,140(sp)
   49008:	12800015 	stw	r10,0(r2)
   4900c:	003be006 	br	47f90 <__alt_mem_onchip_memory2_1+0xfffc6f90>
   49010:	a080100c 	andi	r2,r20,64
   49014:	da802217 	ldw	r10,136(sp)
   49018:	10003026 	beq	r2,zero,490dc <___vfiprintf_internal_r+0x1220>
   4901c:	5480000b 	ldhu	r18,0(r10)
   49020:	52800104 	addi	r10,r10,4
   49024:	0027883a 	mov	r19,zero
   49028:	da802215 	stw	r10,136(sp)
   4902c:	003d8006 	br	48630 <__alt_mem_onchip_memory2_1+0xfffc7630>
   49030:	80c00007 	ldb	r3,0(r16)
   49034:	003c0006 	br	48038 <__alt_mem_onchip_memory2_1+0xfffc7038>
   49038:	a080100c 	andi	r2,r20,64
   4903c:	d8001d85 	stb	zero,118(sp)
   49040:	da802217 	ldw	r10,136(sp)
   49044:	1000201e 	bne	r2,zero,490c8 <___vfiprintf_internal_r+0x120c>
   49048:	50800104 	addi	r2,r10,4
   4904c:	54800017 	ldw	r18,0(r10)
   49050:	0027883a 	mov	r19,zero
   49054:	483def0e 	bge	r9,zero,48814 <__alt_mem_onchip_memory2_1+0xfffc7814>
   49058:	94c6b03a 	or	r3,r18,r19
   4905c:	d8802215 	stw	r2,136(sp)
   49060:	183d4e1e 	bne	r3,zero,4859c <__alt_mem_onchip_memory2_1+0xfffc759c>
   49064:	0039883a 	mov	fp,zero
   49068:	0005883a 	mov	r2,zero
   4906c:	003e0606 	br	48888 <__alt_mem_onchip_memory2_1+0xfffc7888>
   49070:	d9402117 	ldw	r5,132(sp)
   49074:	d9002017 	ldw	r4,128(sp)
   49078:	d9801a04 	addi	r6,sp,104
   4907c:	da402c15 	stw	r9,176(sp)
   49080:	db802a15 	stw	r14,168(sp)
   49084:	0047da80 	call	47da8 <__sprint_r.part.0>
   49088:	da402c17 	ldw	r9,176(sp)
   4908c:	db802a17 	ldw	r14,168(sp)
   49090:	103ede1e 	bne	r2,zero,48c0c <__alt_mem_onchip_memory2_1+0xfffc7c0c>
   49094:	d9401b17 	ldw	r5,108(sp)
   49098:	d8801c17 	ldw	r2,112(sp)
   4909c:	d811883a 	mov	r8,sp
   490a0:	29000044 	addi	r4,r5,1
   490a4:	003e7406 	br	48a78 <__alt_mem_onchip_memory2_1+0xfffc7a78>
   490a8:	00bfffc4 	movi	r2,-1
   490ac:	003c5806 	br	48210 <__alt_mem_onchip_memory2_1+0xfffc7210>
   490b0:	d811883a 	mov	r8,sp
   490b4:	003ee806 	br	48c58 <__alt_mem_onchip_memory2_1+0xfffc7c58>
   490b8:	000b883a 	mov	r5,zero
   490bc:	01000044 	movi	r4,1
   490c0:	d811883a 	mov	r8,sp
   490c4:	003e7c06 	br	48ab8 <__alt_mem_onchip_memory2_1+0xfffc7ab8>
   490c8:	50800104 	addi	r2,r10,4
   490cc:	5480000b 	ldhu	r18,0(r10)
   490d0:	0027883a 	mov	r19,zero
   490d4:	483dcf0e 	bge	r9,zero,48814 <__alt_mem_onchip_memory2_1+0xfffc7814>
   490d8:	003fdf06 	br	49058 <__alt_mem_onchip_memory2_1+0xfffc8058>
   490dc:	54800017 	ldw	r18,0(r10)
   490e0:	52800104 	addi	r10,r10,4
   490e4:	0027883a 	mov	r19,zero
   490e8:	da802215 	stw	r10,136(sp)
   490ec:	003d5006 	br	48630 <__alt_mem_onchip_memory2_1+0xfffc7630>
   490f0:	50800104 	addi	r2,r10,4
   490f4:	5480000b 	ldhu	r18,0(r10)
   490f8:	0027883a 	mov	r19,zero
   490fc:	483f7d0e 	bge	r9,zero,48ef4 <__alt_mem_onchip_memory2_1+0xfffc7ef4>
   49100:	003ddc06 	br	48874 <__alt_mem_onchip_memory2_1+0xfffc7874>
   49104:	d8c02215 	stw	r3,136(sp)
   49108:	0039883a 	mov	fp,zero
   4910c:	003ddb06 	br	4887c <__alt_mem_onchip_memory2_1+0xfffc787c>
   49110:	02800174 	movhi	r10,5
   49114:	52beed04 	addi	r10,r10,-1100
   49118:	da802415 	stw	r10,144(sp)
   4911c:	003e8306 	br	48b2c <__alt_mem_onchip_memory2_1+0xfffc7b2c>
   49120:	d8801c17 	ldw	r2,112(sp)
   49124:	dd002117 	ldw	r20,132(sp)
   49128:	103eb926 	beq	r2,zero,48c10 <__alt_mem_onchip_memory2_1+0xfffc7c10>
   4912c:	d9002017 	ldw	r4,128(sp)
   49130:	d9801a04 	addi	r6,sp,104
   49134:	a00b883a 	mov	r5,r20
   49138:	0047da80 	call	47da8 <__sprint_r.part.0>
   4913c:	003eb406 	br	48c10 <__alt_mem_onchip_memory2_1+0xfffc7c10>
   49140:	80c00043 	ldbu	r3,1(r16)
   49144:	a5000814 	ori	r20,r20,32
   49148:	84000044 	addi	r16,r16,1
   4914c:	18c03fcc 	andi	r3,r3,255
   49150:	18c0201c 	xori	r3,r3,128
   49154:	18ffe004 	addi	r3,r3,-128
   49158:	003bb706 	br	48038 <__alt_mem_onchip_memory2_1+0xfffc7038>
   4915c:	a809883a 	mov	r4,r21
   49160:	d8c02a15 	stw	r3,168(sp)
   49164:	da002b15 	stw	r8,172(sp)
   49168:	00408100 	call	40810 <strlen>
   4916c:	d8c02a17 	ldw	r3,168(sp)
   49170:	1027883a 	mov	r19,r2
   49174:	df001d83 	ldbu	fp,118(sp)
   49178:	d8c02215 	stw	r3,136(sp)
   4917c:	0013883a 	mov	r9,zero
   49180:	da002b17 	ldw	r8,172(sp)
   49184:	003c4d06 	br	482bc <__alt_mem_onchip_memory2_1+0xfffc72bc>
   49188:	d9402117 	ldw	r5,132(sp)
   4918c:	d9002017 	ldw	r4,128(sp)
   49190:	d9801a04 	addi	r6,sp,104
   49194:	da402c15 	stw	r9,176(sp)
   49198:	0047da80 	call	47da8 <__sprint_r.part.0>
   4919c:	da402c17 	ldw	r9,176(sp)
   491a0:	103e9a1e 	bne	r2,zero,48c0c <__alt_mem_onchip_memory2_1+0xfffc7c0c>
   491a4:	d9401b17 	ldw	r5,108(sp)
   491a8:	d8801c17 	ldw	r2,112(sp)
   491ac:	d811883a 	mov	r8,sp
   491b0:	29000044 	addi	r4,r5,1
   491b4:	003e4206 	br	48ac0 <__alt_mem_onchip_memory2_1+0xfffc7ac0>
   491b8:	d9401b17 	ldw	r5,108(sp)
   491bc:	01000174 	movhi	r4,5
   491c0:	213ef104 	addi	r4,r4,-1084
   491c4:	d9002415 	stw	r4,144(sp)
   491c8:	29400044 	addi	r5,r5,1
   491cc:	003c6d06 	br	48384 <__alt_mem_onchip_memory2_1+0xfffc7384>
   491d0:	0039883a 	mov	fp,zero
   491d4:	00800084 	movi	r2,2
   491d8:	10803fcc 	andi	r2,r2,255
   491dc:	01000044 	movi	r4,1
   491e0:	11001e26 	beq	r2,r4,4925c <___vfiprintf_internal_r+0x13a0>
   491e4:	01000084 	movi	r4,2
   491e8:	11001e1e 	bne	r2,r4,49264 <___vfiprintf_internal_r+0x13a8>
   491ec:	1829883a 	mov	r20,r3
   491f0:	003eea06 	br	48d9c <__alt_mem_onchip_memory2_1+0xfffc7d9c>
   491f4:	a007883a 	mov	r3,r20
   491f8:	00800044 	movi	r2,1
   491fc:	003ff606 	br	491d8 <__alt_mem_onchip_memory2_1+0xfffc81d8>
   49200:	00800184 	movi	r2,6
   49204:	1240012e 	bgeu	r2,r9,4920c <___vfiprintf_internal_r+0x1350>
   49208:	1013883a 	mov	r9,r2
   4920c:	4827883a 	mov	r19,r9
   49210:	4825883a 	mov	r18,r9
   49214:	48001516 	blt	r9,zero,4926c <___vfiprintf_internal_r+0x13b0>
   49218:	05400174 	movhi	r21,5
   4921c:	d8c02215 	stw	r3,136(sp)
   49220:	ad7e9104 	addi	r21,r21,-1468
   49224:	003d1406 	br	48678 <__alt_mem_onchip_memory2_1+0xfffc7678>
   49228:	02800174 	movhi	r10,5
   4922c:	52beed04 	addi	r10,r10,-1100
   49230:	da802415 	stw	r10,144(sp)
   49234:	200d883a 	mov	r6,r4
   49238:	003c9106 	br	48480 <__alt_mem_onchip_memory2_1+0xfffc7480>
   4923c:	5021883a 	mov	r16,r10
   49240:	0013883a 	mov	r9,zero
   49244:	003b7d06 	br	4803c <__alt_mem_onchip_memory2_1+0xfffc703c>
   49248:	4827883a 	mov	r19,r9
   4924c:	df001d83 	ldbu	fp,118(sp)
   49250:	d8c02215 	stw	r3,136(sp)
   49254:	0013883a 	mov	r9,zero
   49258:	003c1806 	br	482bc <__alt_mem_onchip_memory2_1+0xfffc72bc>
   4925c:	1829883a 	mov	r20,r3
   49260:	003d1806 	br	486c4 <__alt_mem_onchip_memory2_1+0xfffc76c4>
   49264:	1829883a 	mov	r20,r3
   49268:	003ccd06 	br	485a0 <__alt_mem_onchip_memory2_1+0xfffc75a0>
   4926c:	0025883a 	mov	r18,zero
   49270:	003fe906 	br	49218 <__alt_mem_onchip_memory2_1+0xfffc8218>
   49274:	d8802217 	ldw	r2,136(sp)
   49278:	80c00043 	ldbu	r3,1(r16)
   4927c:	5021883a 	mov	r16,r10
   49280:	12400017 	ldw	r9,0(r2)
   49284:	10800104 	addi	r2,r2,4
   49288:	d8802215 	stw	r2,136(sp)
   4928c:	483faf0e 	bge	r9,zero,4914c <__alt_mem_onchip_memory2_1+0xfffc814c>
   49290:	18c03fcc 	andi	r3,r3,255
   49294:	18c0201c 	xori	r3,r3,128
   49298:	027fffc4 	movi	r9,-1
   4929c:	18ffe004 	addi	r3,r3,-128
   492a0:	003b6506 	br	48038 <__alt_mem_onchip_memory2_1+0xfffc7038>
   492a4:	d9c01d85 	stb	r7,118(sp)
   492a8:	003ca006 	br	4852c <__alt_mem_onchip_memory2_1+0xfffc752c>
   492ac:	d9c01d85 	stb	r7,118(sp)
   492b0:	003cad06 	br	48568 <__alt_mem_onchip_memory2_1+0xfffc7568>
   492b4:	d9c01d85 	stb	r7,118(sp)
   492b8:	003d7d06 	br	488b0 <__alt_mem_onchip_memory2_1+0xfffc78b0>
   492bc:	d9c01d85 	stb	r7,118(sp)
   492c0:	003d5f06 	br	48840 <__alt_mem_onchip_memory2_1+0xfffc7840>
   492c4:	a080004c 	andi	r2,r20,1
   492c8:	0039883a 	mov	fp,zero
   492cc:	10000526 	beq	r2,zero,492e4 <___vfiprintf_internal_r+0x1428>
   492d0:	00800c04 	movi	r2,48
   492d4:	d88019c5 	stb	r2,103(sp)
   492d8:	dcc02717 	ldw	r19,156(sp)
   492dc:	dd4019c4 	addi	r21,sp,103
   492e0:	003bf606 	br	482bc <__alt_mem_onchip_memory2_1+0xfffc72bc>
   492e4:	0027883a 	mov	r19,zero
   492e8:	dd401a04 	addi	r21,sp,104
   492ec:	003bf306 	br	482bc <__alt_mem_onchip_memory2_1+0xfffc72bc>
   492f0:	d9c01d85 	stb	r7,118(sp)
   492f4:	003dc806 	br	48a18 <__alt_mem_onchip_memory2_1+0xfffc7a18>
   492f8:	d9c01d85 	stb	r7,118(sp)
   492fc:	003d3a06 	br	487e8 <__alt_mem_onchip_memory2_1+0xfffc77e8>
   49300:	d9c01d85 	stb	r7,118(sp)
   49304:	003d2a06 	br	487b0 <__alt_mem_onchip_memory2_1+0xfffc77b0>
   49308:	d9c01d85 	stb	r7,118(sp)
   4930c:	003cde06 	br	48688 <__alt_mem_onchip_memory2_1+0xfffc7688>
   49310:	d9c01d85 	stb	r7,118(sp)
   49314:	003cbc06 	br	48608 <__alt_mem_onchip_memory2_1+0xfffc7608>

00049318 <__vfiprintf_internal>:
   49318:	00800174 	movhi	r2,5
   4931c:	1085ee04 	addi	r2,r2,6072
   49320:	300f883a 	mov	r7,r6
   49324:	280d883a 	mov	r6,r5
   49328:	200b883a 	mov	r5,r4
   4932c:	11000017 	ldw	r4,0(r2)
   49330:	0047ebc1 	jmpi	47ebc <___vfiprintf_internal_r>

00049334 <__sbprintf>:
   49334:	2880030b 	ldhu	r2,12(r5)
   49338:	2ac01917 	ldw	r11,100(r5)
   4933c:	2a80038b 	ldhu	r10,14(r5)
   49340:	2a400717 	ldw	r9,28(r5)
   49344:	2a000917 	ldw	r8,36(r5)
   49348:	defee204 	addi	sp,sp,-1144
   4934c:	00c10004 	movi	r3,1024
   49350:	dc011a15 	stw	r16,1128(sp)
   49354:	10bfff4c 	andi	r2,r2,65533
   49358:	2821883a 	mov	r16,r5
   4935c:	d8cb883a 	add	r5,sp,r3
   49360:	dc811c15 	stw	r18,1136(sp)
   49364:	dc411b15 	stw	r17,1132(sp)
   49368:	dfc11d15 	stw	ra,1140(sp)
   4936c:	2025883a 	mov	r18,r4
   49370:	d881030d 	sth	r2,1036(sp)
   49374:	dac11915 	stw	r11,1124(sp)
   49378:	da81038d 	sth	r10,1038(sp)
   4937c:	da410715 	stw	r9,1052(sp)
   49380:	da010915 	stw	r8,1060(sp)
   49384:	dec10015 	stw	sp,1024(sp)
   49388:	dec10415 	stw	sp,1040(sp)
   4938c:	d8c10215 	stw	r3,1032(sp)
   49390:	d8c10515 	stw	r3,1044(sp)
   49394:	d8010615 	stw	zero,1048(sp)
   49398:	0047ebc0 	call	47ebc <___vfiprintf_internal_r>
   4939c:	1023883a 	mov	r17,r2
   493a0:	10000416 	blt	r2,zero,493b4 <__sbprintf+0x80>
   493a4:	d9410004 	addi	r5,sp,1024
   493a8:	9009883a 	mov	r4,r18
   493ac:	00447700 	call	44770 <_fflush_r>
   493b0:	10000d1e 	bne	r2,zero,493e8 <__sbprintf+0xb4>
   493b4:	d881030b 	ldhu	r2,1036(sp)
   493b8:	1080100c 	andi	r2,r2,64
   493bc:	10000326 	beq	r2,zero,493cc <__sbprintf+0x98>
   493c0:	8080030b 	ldhu	r2,12(r16)
   493c4:	10801014 	ori	r2,r2,64
   493c8:	8080030d 	sth	r2,12(r16)
   493cc:	8805883a 	mov	r2,r17
   493d0:	dfc11d17 	ldw	ra,1140(sp)
   493d4:	dc811c17 	ldw	r18,1136(sp)
   493d8:	dc411b17 	ldw	r17,1132(sp)
   493dc:	dc011a17 	ldw	r16,1128(sp)
   493e0:	dec11e04 	addi	sp,sp,1144
   493e4:	f800283a 	ret
   493e8:	047fffc4 	movi	r17,-1
   493ec:	003ff106 	br	493b4 <__alt_mem_onchip_memory2_1+0xfffc83b4>

000493f0 <_write_r>:
   493f0:	defffd04 	addi	sp,sp,-12
   493f4:	2805883a 	mov	r2,r5
   493f8:	dc000015 	stw	r16,0(sp)
   493fc:	04000174 	movhi	r16,5
   49400:	dc400115 	stw	r17,4(sp)
   49404:	300b883a 	mov	r5,r6
   49408:	840cbf04 	addi	r16,r16,13052
   4940c:	2023883a 	mov	r17,r4
   49410:	380d883a 	mov	r6,r7
   49414:	1009883a 	mov	r4,r2
   49418:	dfc00215 	stw	ra,8(sp)
   4941c:	80000015 	stw	zero,0(r16)
   49420:	004db0c0 	call	4db0c <write>
   49424:	00ffffc4 	movi	r3,-1
   49428:	10c00526 	beq	r2,r3,49440 <_write_r+0x50>
   4942c:	dfc00217 	ldw	ra,8(sp)
   49430:	dc400117 	ldw	r17,4(sp)
   49434:	dc000017 	ldw	r16,0(sp)
   49438:	dec00304 	addi	sp,sp,12
   4943c:	f800283a 	ret
   49440:	80c00017 	ldw	r3,0(r16)
   49444:	183ff926 	beq	r3,zero,4942c <__alt_mem_onchip_memory2_1+0xfffc842c>
   49448:	88c00015 	stw	r3,0(r17)
   4944c:	003ff706 	br	4942c <__alt_mem_onchip_memory2_1+0xfffc842c>

00049450 <_close_r>:
   49450:	defffd04 	addi	sp,sp,-12
   49454:	dc000015 	stw	r16,0(sp)
   49458:	04000174 	movhi	r16,5
   4945c:	dc400115 	stw	r17,4(sp)
   49460:	840cbf04 	addi	r16,r16,13052
   49464:	2023883a 	mov	r17,r4
   49468:	2809883a 	mov	r4,r5
   4946c:	dfc00215 	stw	ra,8(sp)
   49470:	80000015 	stw	zero,0(r16)
   49474:	004d02c0 	call	4d02c <close>
   49478:	00ffffc4 	movi	r3,-1
   4947c:	10c00526 	beq	r2,r3,49494 <_close_r+0x44>
   49480:	dfc00217 	ldw	ra,8(sp)
   49484:	dc400117 	ldw	r17,4(sp)
   49488:	dc000017 	ldw	r16,0(sp)
   4948c:	dec00304 	addi	sp,sp,12
   49490:	f800283a 	ret
   49494:	80c00017 	ldw	r3,0(r16)
   49498:	183ff926 	beq	r3,zero,49480 <__alt_mem_onchip_memory2_1+0xfffc8480>
   4949c:	88c00015 	stw	r3,0(r17)
   494a0:	003ff706 	br	49480 <__alt_mem_onchip_memory2_1+0xfffc8480>

000494a4 <_calloc_r>:
   494a4:	298b383a 	mul	r5,r5,r6
   494a8:	defffe04 	addi	sp,sp,-8
   494ac:	dfc00115 	stw	ra,4(sp)
   494b0:	dc000015 	stw	r16,0(sp)
   494b4:	00458ac0 	call	458ac <_malloc_r>
   494b8:	10002926 	beq	r2,zero,49560 <_calloc_r+0xbc>
   494bc:	11bfff17 	ldw	r6,-4(r2)
   494c0:	1021883a 	mov	r16,r2
   494c4:	00bfff04 	movi	r2,-4
   494c8:	308c703a 	and	r6,r6,r2
   494cc:	00c00904 	movi	r3,36
   494d0:	308d883a 	add	r6,r6,r2
   494d4:	19801636 	bltu	r3,r6,49530 <_calloc_r+0x8c>
   494d8:	008004c4 	movi	r2,19
   494dc:	11800b2e 	bgeu	r2,r6,4950c <_calloc_r+0x68>
   494e0:	80000015 	stw	zero,0(r16)
   494e4:	80000115 	stw	zero,4(r16)
   494e8:	008006c4 	movi	r2,27
   494ec:	11801a2e 	bgeu	r2,r6,49558 <_calloc_r+0xb4>
   494f0:	80000215 	stw	zero,8(r16)
   494f4:	80000315 	stw	zero,12(r16)
   494f8:	30c0151e 	bne	r6,r3,49550 <_calloc_r+0xac>
   494fc:	80000415 	stw	zero,16(r16)
   49500:	80800604 	addi	r2,r16,24
   49504:	80000515 	stw	zero,20(r16)
   49508:	00000106 	br	49510 <_calloc_r+0x6c>
   4950c:	8005883a 	mov	r2,r16
   49510:	10000015 	stw	zero,0(r2)
   49514:	10000115 	stw	zero,4(r2)
   49518:	10000215 	stw	zero,8(r2)
   4951c:	8005883a 	mov	r2,r16
   49520:	dfc00117 	ldw	ra,4(sp)
   49524:	dc000017 	ldw	r16,0(sp)
   49528:	dec00204 	addi	sp,sp,8
   4952c:	f800283a 	ret
   49530:	000b883a 	mov	r5,zero
   49534:	8009883a 	mov	r4,r16
   49538:	00464400 	call	46440 <memset>
   4953c:	8005883a 	mov	r2,r16
   49540:	dfc00117 	ldw	ra,4(sp)
   49544:	dc000017 	ldw	r16,0(sp)
   49548:	dec00204 	addi	sp,sp,8
   4954c:	f800283a 	ret
   49550:	80800404 	addi	r2,r16,16
   49554:	003fee06 	br	49510 <__alt_mem_onchip_memory2_1+0xfffc8510>
   49558:	80800204 	addi	r2,r16,8
   4955c:	003fec06 	br	49510 <__alt_mem_onchip_memory2_1+0xfffc8510>
   49560:	0005883a 	mov	r2,zero
   49564:	003fee06 	br	49520 <__alt_mem_onchip_memory2_1+0xfffc8520>

00049568 <_fclose_r>:
   49568:	28003926 	beq	r5,zero,49650 <_fclose_r+0xe8>
   4956c:	defffc04 	addi	sp,sp,-16
   49570:	dc400115 	stw	r17,4(sp)
   49574:	dc000015 	stw	r16,0(sp)
   49578:	dfc00315 	stw	ra,12(sp)
   4957c:	dc800215 	stw	r18,8(sp)
   49580:	2023883a 	mov	r17,r4
   49584:	2821883a 	mov	r16,r5
   49588:	20000226 	beq	r4,zero,49594 <_fclose_r+0x2c>
   4958c:	20800e17 	ldw	r2,56(r4)
   49590:	10002726 	beq	r2,zero,49630 <_fclose_r+0xc8>
   49594:	8080030f 	ldh	r2,12(r16)
   49598:	1000071e 	bne	r2,zero,495b8 <_fclose_r+0x50>
   4959c:	0005883a 	mov	r2,zero
   495a0:	dfc00317 	ldw	ra,12(sp)
   495a4:	dc800217 	ldw	r18,8(sp)
   495a8:	dc400117 	ldw	r17,4(sp)
   495ac:	dc000017 	ldw	r16,0(sp)
   495b0:	dec00404 	addi	sp,sp,16
   495b4:	f800283a 	ret
   495b8:	800b883a 	mov	r5,r16
   495bc:	8809883a 	mov	r4,r17
   495c0:	00445540 	call	44554 <__sflush_r>
   495c4:	1025883a 	mov	r18,r2
   495c8:	80800b17 	ldw	r2,44(r16)
   495cc:	10000426 	beq	r2,zero,495e0 <_fclose_r+0x78>
   495d0:	81400717 	ldw	r5,28(r16)
   495d4:	8809883a 	mov	r4,r17
   495d8:	103ee83a 	callr	r2
   495dc:	10001616 	blt	r2,zero,49638 <_fclose_r+0xd0>
   495e0:	8080030b 	ldhu	r2,12(r16)
   495e4:	1080200c 	andi	r2,r2,128
   495e8:	1000151e 	bne	r2,zero,49640 <_fclose_r+0xd8>
   495ec:	81400c17 	ldw	r5,48(r16)
   495f0:	28000526 	beq	r5,zero,49608 <_fclose_r+0xa0>
   495f4:	80801004 	addi	r2,r16,64
   495f8:	28800226 	beq	r5,r2,49604 <_fclose_r+0x9c>
   495fc:	8809883a 	mov	r4,r17
   49600:	0044cc00 	call	44cc0 <_free_r>
   49604:	80000c15 	stw	zero,48(r16)
   49608:	81401117 	ldw	r5,68(r16)
   4960c:	28000326 	beq	r5,zero,4961c <_fclose_r+0xb4>
   49610:	8809883a 	mov	r4,r17
   49614:	0044cc00 	call	44cc0 <_free_r>
   49618:	80001115 	stw	zero,68(r16)
   4961c:	0044b5c0 	call	44b5c <__sfp_lock_acquire>
   49620:	8000030d 	sth	zero,12(r16)
   49624:	0044b600 	call	44b60 <__sfp_lock_release>
   49628:	9005883a 	mov	r2,r18
   4962c:	003fdc06 	br	495a0 <__alt_mem_onchip_memory2_1+0xfffc85a0>
   49630:	0044b4c0 	call	44b4c <__sinit>
   49634:	003fd706 	br	49594 <__alt_mem_onchip_memory2_1+0xfffc8594>
   49638:	04bfffc4 	movi	r18,-1
   4963c:	003fe806 	br	495e0 <__alt_mem_onchip_memory2_1+0xfffc85e0>
   49640:	81400417 	ldw	r5,16(r16)
   49644:	8809883a 	mov	r4,r17
   49648:	0044cc00 	call	44cc0 <_free_r>
   4964c:	003fe706 	br	495ec <__alt_mem_onchip_memory2_1+0xfffc85ec>
   49650:	0005883a 	mov	r2,zero
   49654:	f800283a 	ret

00049658 <fclose>:
   49658:	00800174 	movhi	r2,5
   4965c:	1085ee04 	addi	r2,r2,6072
   49660:	200b883a 	mov	r5,r4
   49664:	11000017 	ldw	r4,0(r2)
   49668:	00495681 	jmpi	49568 <_fclose_r>

0004966c <__fputwc>:
   4966c:	defff804 	addi	sp,sp,-32
   49670:	dcc00415 	stw	r19,16(sp)
   49674:	dc800315 	stw	r18,12(sp)
   49678:	dc000115 	stw	r16,4(sp)
   4967c:	dfc00715 	stw	ra,28(sp)
   49680:	dd400615 	stw	r21,24(sp)
   49684:	dd000515 	stw	r20,20(sp)
   49688:	dc400215 	stw	r17,8(sp)
   4968c:	2027883a 	mov	r19,r4
   49690:	2825883a 	mov	r18,r5
   49694:	3021883a 	mov	r16,r6
   49698:	004569c0 	call	4569c <__locale_mb_cur_max>
   4969c:	00c00044 	movi	r3,1
   496a0:	10c03e26 	beq	r2,r3,4979c <__fputwc+0x130>
   496a4:	81c01704 	addi	r7,r16,92
   496a8:	900d883a 	mov	r6,r18
   496ac:	d80b883a 	mov	r5,sp
   496b0:	9809883a 	mov	r4,r19
   496b4:	0049b3c0 	call	49b3c <_wcrtomb_r>
   496b8:	1029883a 	mov	r20,r2
   496bc:	00bfffc4 	movi	r2,-1
   496c0:	a0802026 	beq	r20,r2,49744 <__fputwc+0xd8>
   496c4:	d9400003 	ldbu	r5,0(sp)
   496c8:	a0001c26 	beq	r20,zero,4973c <__fputwc+0xd0>
   496cc:	0023883a 	mov	r17,zero
   496d0:	05400284 	movi	r21,10
   496d4:	00000906 	br	496fc <__fputwc+0x90>
   496d8:	80800017 	ldw	r2,0(r16)
   496dc:	11400005 	stb	r5,0(r2)
   496e0:	80c00017 	ldw	r3,0(r16)
   496e4:	18c00044 	addi	r3,r3,1
   496e8:	80c00015 	stw	r3,0(r16)
   496ec:	8c400044 	addi	r17,r17,1
   496f0:	dc45883a 	add	r2,sp,r17
   496f4:	8d00112e 	bgeu	r17,r20,4973c <__fputwc+0xd0>
   496f8:	11400003 	ldbu	r5,0(r2)
   496fc:	80c00217 	ldw	r3,8(r16)
   49700:	18ffffc4 	addi	r3,r3,-1
   49704:	80c00215 	stw	r3,8(r16)
   49708:	183ff30e 	bge	r3,zero,496d8 <__alt_mem_onchip_memory2_1+0xfffc86d8>
   4970c:	80800617 	ldw	r2,24(r16)
   49710:	18801916 	blt	r3,r2,49778 <__fputwc+0x10c>
   49714:	80800017 	ldw	r2,0(r16)
   49718:	11400005 	stb	r5,0(r2)
   4971c:	80800017 	ldw	r2,0(r16)
   49720:	10c00003 	ldbu	r3,0(r2)
   49724:	10800044 	addi	r2,r2,1
   49728:	1d402326 	beq	r3,r21,497b8 <__fputwc+0x14c>
   4972c:	80800015 	stw	r2,0(r16)
   49730:	8c400044 	addi	r17,r17,1
   49734:	dc45883a 	add	r2,sp,r17
   49738:	8d3fef36 	bltu	r17,r20,496f8 <__alt_mem_onchip_memory2_1+0xfffc86f8>
   4973c:	9005883a 	mov	r2,r18
   49740:	00000406 	br	49754 <__fputwc+0xe8>
   49744:	80c0030b 	ldhu	r3,12(r16)
   49748:	a005883a 	mov	r2,r20
   4974c:	18c01014 	ori	r3,r3,64
   49750:	80c0030d 	sth	r3,12(r16)
   49754:	dfc00717 	ldw	ra,28(sp)
   49758:	dd400617 	ldw	r21,24(sp)
   4975c:	dd000517 	ldw	r20,20(sp)
   49760:	dcc00417 	ldw	r19,16(sp)
   49764:	dc800317 	ldw	r18,12(sp)
   49768:	dc400217 	ldw	r17,8(sp)
   4976c:	dc000117 	ldw	r16,4(sp)
   49770:	dec00804 	addi	sp,sp,32
   49774:	f800283a 	ret
   49778:	800d883a 	mov	r6,r16
   4977c:	29403fcc 	andi	r5,r5,255
   49780:	9809883a 	mov	r4,r19
   49784:	00499e40 	call	499e4 <__swbuf_r>
   49788:	10bfffe0 	cmpeqi	r2,r2,-1
   4978c:	10803fcc 	andi	r2,r2,255
   49790:	103fd626 	beq	r2,zero,496ec <__alt_mem_onchip_memory2_1+0xfffc86ec>
   49794:	00bfffc4 	movi	r2,-1
   49798:	003fee06 	br	49754 <__alt_mem_onchip_memory2_1+0xfffc8754>
   4979c:	90ffffc4 	addi	r3,r18,-1
   497a0:	01003f84 	movi	r4,254
   497a4:	20ffbf36 	bltu	r4,r3,496a4 <__alt_mem_onchip_memory2_1+0xfffc86a4>
   497a8:	900b883a 	mov	r5,r18
   497ac:	dc800005 	stb	r18,0(sp)
   497b0:	1029883a 	mov	r20,r2
   497b4:	003fc506 	br	496cc <__alt_mem_onchip_memory2_1+0xfffc86cc>
   497b8:	800d883a 	mov	r6,r16
   497bc:	a80b883a 	mov	r5,r21
   497c0:	9809883a 	mov	r4,r19
   497c4:	00499e40 	call	499e4 <__swbuf_r>
   497c8:	10bfffe0 	cmpeqi	r2,r2,-1
   497cc:	003fef06 	br	4978c <__alt_mem_onchip_memory2_1+0xfffc878c>

000497d0 <_fputwc_r>:
   497d0:	3080030b 	ldhu	r2,12(r6)
   497d4:	10c8000c 	andi	r3,r2,8192
   497d8:	1800051e 	bne	r3,zero,497f0 <_fputwc_r+0x20>
   497dc:	30c01917 	ldw	r3,100(r6)
   497e0:	10880014 	ori	r2,r2,8192
   497e4:	3080030d 	sth	r2,12(r6)
   497e8:	18880014 	ori	r2,r3,8192
   497ec:	30801915 	stw	r2,100(r6)
   497f0:	004966c1 	jmpi	4966c <__fputwc>

000497f4 <fputwc>:
   497f4:	00800174 	movhi	r2,5
   497f8:	defffc04 	addi	sp,sp,-16
   497fc:	1085ee04 	addi	r2,r2,6072
   49800:	dc000115 	stw	r16,4(sp)
   49804:	14000017 	ldw	r16,0(r2)
   49808:	dc400215 	stw	r17,8(sp)
   4980c:	dfc00315 	stw	ra,12(sp)
   49810:	2023883a 	mov	r17,r4
   49814:	80000226 	beq	r16,zero,49820 <fputwc+0x2c>
   49818:	80800e17 	ldw	r2,56(r16)
   4981c:	10001026 	beq	r2,zero,49860 <fputwc+0x6c>
   49820:	2880030b 	ldhu	r2,12(r5)
   49824:	10c8000c 	andi	r3,r2,8192
   49828:	1800051e 	bne	r3,zero,49840 <fputwc+0x4c>
   4982c:	28c01917 	ldw	r3,100(r5)
   49830:	10880014 	ori	r2,r2,8192
   49834:	2880030d 	sth	r2,12(r5)
   49838:	18880014 	ori	r2,r3,8192
   4983c:	28801915 	stw	r2,100(r5)
   49840:	280d883a 	mov	r6,r5
   49844:	8009883a 	mov	r4,r16
   49848:	880b883a 	mov	r5,r17
   4984c:	dfc00317 	ldw	ra,12(sp)
   49850:	dc400217 	ldw	r17,8(sp)
   49854:	dc000117 	ldw	r16,4(sp)
   49858:	dec00404 	addi	sp,sp,16
   4985c:	004966c1 	jmpi	4966c <__fputwc>
   49860:	8009883a 	mov	r4,r16
   49864:	d9400015 	stw	r5,0(sp)
   49868:	0044b4c0 	call	44b4c <__sinit>
   4986c:	d9400017 	ldw	r5,0(sp)
   49870:	003feb06 	br	49820 <__alt_mem_onchip_memory2_1+0xfffc8820>

00049874 <_fstat_r>:
   49874:	defffd04 	addi	sp,sp,-12
   49878:	2805883a 	mov	r2,r5
   4987c:	dc000015 	stw	r16,0(sp)
   49880:	04000174 	movhi	r16,5
   49884:	dc400115 	stw	r17,4(sp)
   49888:	840cbf04 	addi	r16,r16,13052
   4988c:	2023883a 	mov	r17,r4
   49890:	300b883a 	mov	r5,r6
   49894:	1009883a 	mov	r4,r2
   49898:	dfc00215 	stw	ra,8(sp)
   4989c:	80000015 	stw	zero,0(r16)
   498a0:	004d1640 	call	4d164 <fstat>
   498a4:	00ffffc4 	movi	r3,-1
   498a8:	10c00526 	beq	r2,r3,498c0 <_fstat_r+0x4c>
   498ac:	dfc00217 	ldw	ra,8(sp)
   498b0:	dc400117 	ldw	r17,4(sp)
   498b4:	dc000017 	ldw	r16,0(sp)
   498b8:	dec00304 	addi	sp,sp,12
   498bc:	f800283a 	ret
   498c0:	80c00017 	ldw	r3,0(r16)
   498c4:	183ff926 	beq	r3,zero,498ac <__alt_mem_onchip_memory2_1+0xfffc88ac>
   498c8:	88c00015 	stw	r3,0(r17)
   498cc:	003ff706 	br	498ac <__alt_mem_onchip_memory2_1+0xfffc88ac>

000498d0 <_isatty_r>:
   498d0:	defffd04 	addi	sp,sp,-12
   498d4:	dc000015 	stw	r16,0(sp)
   498d8:	04000174 	movhi	r16,5
   498dc:	dc400115 	stw	r17,4(sp)
   498e0:	840cbf04 	addi	r16,r16,13052
   498e4:	2023883a 	mov	r17,r4
   498e8:	2809883a 	mov	r4,r5
   498ec:	dfc00215 	stw	ra,8(sp)
   498f0:	80000015 	stw	zero,0(r16)
   498f4:	004d4f00 	call	4d4f0 <isatty>
   498f8:	00ffffc4 	movi	r3,-1
   498fc:	10c00526 	beq	r2,r3,49914 <_isatty_r+0x44>
   49900:	dfc00217 	ldw	ra,8(sp)
   49904:	dc400117 	ldw	r17,4(sp)
   49908:	dc000017 	ldw	r16,0(sp)
   4990c:	dec00304 	addi	sp,sp,12
   49910:	f800283a 	ret
   49914:	80c00017 	ldw	r3,0(r16)
   49918:	183ff926 	beq	r3,zero,49900 <__alt_mem_onchip_memory2_1+0xfffc8900>
   4991c:	88c00015 	stw	r3,0(r17)
   49920:	003ff706 	br	49900 <__alt_mem_onchip_memory2_1+0xfffc8900>

00049924 <_lseek_r>:
   49924:	defffd04 	addi	sp,sp,-12
   49928:	2805883a 	mov	r2,r5
   4992c:	dc000015 	stw	r16,0(sp)
   49930:	04000174 	movhi	r16,5
   49934:	dc400115 	stw	r17,4(sp)
   49938:	300b883a 	mov	r5,r6
   4993c:	840cbf04 	addi	r16,r16,13052
   49940:	2023883a 	mov	r17,r4
   49944:	380d883a 	mov	r6,r7
   49948:	1009883a 	mov	r4,r2
   4994c:	dfc00215 	stw	ra,8(sp)
   49950:	80000015 	stw	zero,0(r16)
   49954:	004d6bc0 	call	4d6bc <lseek>
   49958:	00ffffc4 	movi	r3,-1
   4995c:	10c00526 	beq	r2,r3,49974 <_lseek_r+0x50>
   49960:	dfc00217 	ldw	ra,8(sp)
   49964:	dc400117 	ldw	r17,4(sp)
   49968:	dc000017 	ldw	r16,0(sp)
   4996c:	dec00304 	addi	sp,sp,12
   49970:	f800283a 	ret
   49974:	80c00017 	ldw	r3,0(r16)
   49978:	183ff926 	beq	r3,zero,49960 <__alt_mem_onchip_memory2_1+0xfffc8960>
   4997c:	88c00015 	stw	r3,0(r17)
   49980:	003ff706 	br	49960 <__alt_mem_onchip_memory2_1+0xfffc8960>

00049984 <_read_r>:
   49984:	defffd04 	addi	sp,sp,-12
   49988:	2805883a 	mov	r2,r5
   4998c:	dc000015 	stw	r16,0(sp)
   49990:	04000174 	movhi	r16,5
   49994:	dc400115 	stw	r17,4(sp)
   49998:	300b883a 	mov	r5,r6
   4999c:	840cbf04 	addi	r16,r16,13052
   499a0:	2023883a 	mov	r17,r4
   499a4:	380d883a 	mov	r6,r7
   499a8:	1009883a 	mov	r4,r2
   499ac:	dfc00215 	stw	ra,8(sp)
   499b0:	80000015 	stw	zero,0(r16)
   499b4:	004d8900 	call	4d890 <read>
   499b8:	00ffffc4 	movi	r3,-1
   499bc:	10c00526 	beq	r2,r3,499d4 <_read_r+0x50>
   499c0:	dfc00217 	ldw	ra,8(sp)
   499c4:	dc400117 	ldw	r17,4(sp)
   499c8:	dc000017 	ldw	r16,0(sp)
   499cc:	dec00304 	addi	sp,sp,12
   499d0:	f800283a 	ret
   499d4:	80c00017 	ldw	r3,0(r16)
   499d8:	183ff926 	beq	r3,zero,499c0 <__alt_mem_onchip_memory2_1+0xfffc89c0>
   499dc:	88c00015 	stw	r3,0(r17)
   499e0:	003ff706 	br	499c0 <__alt_mem_onchip_memory2_1+0xfffc89c0>

000499e4 <__swbuf_r>:
   499e4:	defffb04 	addi	sp,sp,-20
   499e8:	dcc00315 	stw	r19,12(sp)
   499ec:	dc800215 	stw	r18,8(sp)
   499f0:	dc000015 	stw	r16,0(sp)
   499f4:	dfc00415 	stw	ra,16(sp)
   499f8:	dc400115 	stw	r17,4(sp)
   499fc:	2025883a 	mov	r18,r4
   49a00:	2827883a 	mov	r19,r5
   49a04:	3021883a 	mov	r16,r6
   49a08:	20000226 	beq	r4,zero,49a14 <__swbuf_r+0x30>
   49a0c:	20800e17 	ldw	r2,56(r4)
   49a10:	10004226 	beq	r2,zero,49b1c <__swbuf_r+0x138>
   49a14:	80800617 	ldw	r2,24(r16)
   49a18:	8100030b 	ldhu	r4,12(r16)
   49a1c:	80800215 	stw	r2,8(r16)
   49a20:	2080020c 	andi	r2,r4,8
   49a24:	10003626 	beq	r2,zero,49b00 <__swbuf_r+0x11c>
   49a28:	80c00417 	ldw	r3,16(r16)
   49a2c:	18003426 	beq	r3,zero,49b00 <__swbuf_r+0x11c>
   49a30:	2088000c 	andi	r2,r4,8192
   49a34:	9c403fcc 	andi	r17,r19,255
   49a38:	10001a26 	beq	r2,zero,49aa4 <__swbuf_r+0xc0>
   49a3c:	80800017 	ldw	r2,0(r16)
   49a40:	81000517 	ldw	r4,20(r16)
   49a44:	10c7c83a 	sub	r3,r2,r3
   49a48:	1900200e 	bge	r3,r4,49acc <__swbuf_r+0xe8>
   49a4c:	18c00044 	addi	r3,r3,1
   49a50:	81000217 	ldw	r4,8(r16)
   49a54:	11400044 	addi	r5,r2,1
   49a58:	81400015 	stw	r5,0(r16)
   49a5c:	213fffc4 	addi	r4,r4,-1
   49a60:	81000215 	stw	r4,8(r16)
   49a64:	14c00005 	stb	r19,0(r2)
   49a68:	80800517 	ldw	r2,20(r16)
   49a6c:	10c01e26 	beq	r2,r3,49ae8 <__swbuf_r+0x104>
   49a70:	8080030b 	ldhu	r2,12(r16)
   49a74:	1080004c 	andi	r2,r2,1
   49a78:	10000226 	beq	r2,zero,49a84 <__swbuf_r+0xa0>
   49a7c:	00800284 	movi	r2,10
   49a80:	88801926 	beq	r17,r2,49ae8 <__swbuf_r+0x104>
   49a84:	8805883a 	mov	r2,r17
   49a88:	dfc00417 	ldw	ra,16(sp)
   49a8c:	dcc00317 	ldw	r19,12(sp)
   49a90:	dc800217 	ldw	r18,8(sp)
   49a94:	dc400117 	ldw	r17,4(sp)
   49a98:	dc000017 	ldw	r16,0(sp)
   49a9c:	dec00504 	addi	sp,sp,20
   49aa0:	f800283a 	ret
   49aa4:	81401917 	ldw	r5,100(r16)
   49aa8:	00b7ffc4 	movi	r2,-8193
   49aac:	21080014 	ori	r4,r4,8192
   49ab0:	2884703a 	and	r2,r5,r2
   49ab4:	80801915 	stw	r2,100(r16)
   49ab8:	80800017 	ldw	r2,0(r16)
   49abc:	8100030d 	sth	r4,12(r16)
   49ac0:	81000517 	ldw	r4,20(r16)
   49ac4:	10c7c83a 	sub	r3,r2,r3
   49ac8:	193fe016 	blt	r3,r4,49a4c <__alt_mem_onchip_memory2_1+0xfffc8a4c>
   49acc:	800b883a 	mov	r5,r16
   49ad0:	9009883a 	mov	r4,r18
   49ad4:	00447700 	call	44770 <_fflush_r>
   49ad8:	1000071e 	bne	r2,zero,49af8 <__swbuf_r+0x114>
   49adc:	80800017 	ldw	r2,0(r16)
   49ae0:	00c00044 	movi	r3,1
   49ae4:	003fda06 	br	49a50 <__alt_mem_onchip_memory2_1+0xfffc8a50>
   49ae8:	800b883a 	mov	r5,r16
   49aec:	9009883a 	mov	r4,r18
   49af0:	00447700 	call	44770 <_fflush_r>
   49af4:	103fe326 	beq	r2,zero,49a84 <__alt_mem_onchip_memory2_1+0xfffc8a84>
   49af8:	00bfffc4 	movi	r2,-1
   49afc:	003fe206 	br	49a88 <__alt_mem_onchip_memory2_1+0xfffc8a88>
   49b00:	800b883a 	mov	r5,r16
   49b04:	9009883a 	mov	r4,r18
   49b08:	0042b780 	call	42b78 <__swsetup_r>
   49b0c:	103ffa1e 	bne	r2,zero,49af8 <__alt_mem_onchip_memory2_1+0xfffc8af8>
   49b10:	8100030b 	ldhu	r4,12(r16)
   49b14:	80c00417 	ldw	r3,16(r16)
   49b18:	003fc506 	br	49a30 <__alt_mem_onchip_memory2_1+0xfffc8a30>
   49b1c:	0044b4c0 	call	44b4c <__sinit>
   49b20:	003fbc06 	br	49a14 <__alt_mem_onchip_memory2_1+0xfffc8a14>

00049b24 <__swbuf>:
   49b24:	00800174 	movhi	r2,5
   49b28:	1085ee04 	addi	r2,r2,6072
   49b2c:	280d883a 	mov	r6,r5
   49b30:	200b883a 	mov	r5,r4
   49b34:	11000017 	ldw	r4,0(r2)
   49b38:	00499e41 	jmpi	499e4 <__swbuf_r>

00049b3c <_wcrtomb_r>:
   49b3c:	defff604 	addi	sp,sp,-40
   49b40:	00800174 	movhi	r2,5
   49b44:	dc800815 	stw	r18,32(sp)
   49b48:	dc400715 	stw	r17,28(sp)
   49b4c:	dc000615 	stw	r16,24(sp)
   49b50:	1085f204 	addi	r2,r2,6088
   49b54:	dfc00915 	stw	ra,36(sp)
   49b58:	2021883a 	mov	r16,r4
   49b5c:	3823883a 	mov	r17,r7
   49b60:	14800017 	ldw	r18,0(r2)
   49b64:	28001426 	beq	r5,zero,49bb8 <_wcrtomb_r+0x7c>
   49b68:	d9400415 	stw	r5,16(sp)
   49b6c:	d9800515 	stw	r6,20(sp)
   49b70:	00456900 	call	45690 <__locale_charset>
   49b74:	d9800517 	ldw	r6,20(sp)
   49b78:	d9400417 	ldw	r5,16(sp)
   49b7c:	100f883a 	mov	r7,r2
   49b80:	dc400015 	stw	r17,0(sp)
   49b84:	8009883a 	mov	r4,r16
   49b88:	903ee83a 	callr	r18
   49b8c:	00ffffc4 	movi	r3,-1
   49b90:	10c0031e 	bne	r2,r3,49ba0 <_wcrtomb_r+0x64>
   49b94:	88000015 	stw	zero,0(r17)
   49b98:	00c02284 	movi	r3,138
   49b9c:	80c00015 	stw	r3,0(r16)
   49ba0:	dfc00917 	ldw	ra,36(sp)
   49ba4:	dc800817 	ldw	r18,32(sp)
   49ba8:	dc400717 	ldw	r17,28(sp)
   49bac:	dc000617 	ldw	r16,24(sp)
   49bb0:	dec00a04 	addi	sp,sp,40
   49bb4:	f800283a 	ret
   49bb8:	00456900 	call	45690 <__locale_charset>
   49bbc:	100f883a 	mov	r7,r2
   49bc0:	dc400015 	stw	r17,0(sp)
   49bc4:	000d883a 	mov	r6,zero
   49bc8:	d9400104 	addi	r5,sp,4
   49bcc:	8009883a 	mov	r4,r16
   49bd0:	903ee83a 	callr	r18
   49bd4:	003fed06 	br	49b8c <__alt_mem_onchip_memory2_1+0xfffc8b8c>

00049bd8 <wcrtomb>:
   49bd8:	defff604 	addi	sp,sp,-40
   49bdc:	00800174 	movhi	r2,5
   49be0:	dc800615 	stw	r18,24(sp)
   49be4:	dc400515 	stw	r17,20(sp)
   49be8:	1085ee04 	addi	r2,r2,6072
   49bec:	dfc00915 	stw	ra,36(sp)
   49bf0:	dd000815 	stw	r20,32(sp)
   49bf4:	dcc00715 	stw	r19,28(sp)
   49bf8:	dc000415 	stw	r16,16(sp)
   49bfc:	3025883a 	mov	r18,r6
   49c00:	14400017 	ldw	r17,0(r2)
   49c04:	20001926 	beq	r4,zero,49c6c <wcrtomb+0x94>
   49c08:	00800174 	movhi	r2,5
   49c0c:	1085f204 	addi	r2,r2,6088
   49c10:	15000017 	ldw	r20,0(r2)
   49c14:	2021883a 	mov	r16,r4
   49c18:	2827883a 	mov	r19,r5
   49c1c:	00456900 	call	45690 <__locale_charset>
   49c20:	100f883a 	mov	r7,r2
   49c24:	dc800015 	stw	r18,0(sp)
   49c28:	980d883a 	mov	r6,r19
   49c2c:	800b883a 	mov	r5,r16
   49c30:	8809883a 	mov	r4,r17
   49c34:	a03ee83a 	callr	r20
   49c38:	00ffffc4 	movi	r3,-1
   49c3c:	10c0031e 	bne	r2,r3,49c4c <wcrtomb+0x74>
   49c40:	90000015 	stw	zero,0(r18)
   49c44:	00c02284 	movi	r3,138
   49c48:	88c00015 	stw	r3,0(r17)
   49c4c:	dfc00917 	ldw	ra,36(sp)
   49c50:	dd000817 	ldw	r20,32(sp)
   49c54:	dcc00717 	ldw	r19,28(sp)
   49c58:	dc800617 	ldw	r18,24(sp)
   49c5c:	dc400517 	ldw	r17,20(sp)
   49c60:	dc000417 	ldw	r16,16(sp)
   49c64:	dec00a04 	addi	sp,sp,40
   49c68:	f800283a 	ret
   49c6c:	00800174 	movhi	r2,5
   49c70:	1085f204 	addi	r2,r2,6088
   49c74:	14000017 	ldw	r16,0(r2)
   49c78:	00456900 	call	45690 <__locale_charset>
   49c7c:	100f883a 	mov	r7,r2
   49c80:	dc800015 	stw	r18,0(sp)
   49c84:	000d883a 	mov	r6,zero
   49c88:	d9400104 	addi	r5,sp,4
   49c8c:	8809883a 	mov	r4,r17
   49c90:	803ee83a 	callr	r16
   49c94:	003fe806 	br	49c38 <__alt_mem_onchip_memory2_1+0xfffc8c38>

00049c98 <__ascii_wctomb>:
   49c98:	28000526 	beq	r5,zero,49cb0 <__ascii_wctomb+0x18>
   49c9c:	00803fc4 	movi	r2,255
   49ca0:	11800536 	bltu	r2,r6,49cb8 <__ascii_wctomb+0x20>
   49ca4:	29800005 	stb	r6,0(r5)
   49ca8:	00800044 	movi	r2,1
   49cac:	f800283a 	ret
   49cb0:	0005883a 	mov	r2,zero
   49cb4:	f800283a 	ret
   49cb8:	00802284 	movi	r2,138
   49cbc:	20800015 	stw	r2,0(r4)
   49cc0:	00bfffc4 	movi	r2,-1
   49cc4:	f800283a 	ret

00049cc8 <_wctomb_r>:
   49cc8:	00800174 	movhi	r2,5
   49ccc:	defff904 	addi	sp,sp,-28
   49cd0:	1085f204 	addi	r2,r2,6088
   49cd4:	dfc00615 	stw	ra,24(sp)
   49cd8:	dc400515 	stw	r17,20(sp)
   49cdc:	dc000415 	stw	r16,16(sp)
   49ce0:	3823883a 	mov	r17,r7
   49ce4:	14000017 	ldw	r16,0(r2)
   49ce8:	d9000115 	stw	r4,4(sp)
   49cec:	d9400215 	stw	r5,8(sp)
   49cf0:	d9800315 	stw	r6,12(sp)
   49cf4:	00456900 	call	45690 <__locale_charset>
   49cf8:	d9800317 	ldw	r6,12(sp)
   49cfc:	d9400217 	ldw	r5,8(sp)
   49d00:	d9000117 	ldw	r4,4(sp)
   49d04:	100f883a 	mov	r7,r2
   49d08:	dc400015 	stw	r17,0(sp)
   49d0c:	803ee83a 	callr	r16
   49d10:	dfc00617 	ldw	ra,24(sp)
   49d14:	dc400517 	ldw	r17,20(sp)
   49d18:	dc000417 	ldw	r16,16(sp)
   49d1c:	dec00704 	addi	sp,sp,28
   49d20:	f800283a 	ret

00049d24 <__udivdi3>:
   49d24:	defff504 	addi	sp,sp,-44
   49d28:	dcc00415 	stw	r19,16(sp)
   49d2c:	dc000115 	stw	r16,4(sp)
   49d30:	dfc00a15 	stw	ra,40(sp)
   49d34:	df000915 	stw	fp,36(sp)
   49d38:	ddc00815 	stw	r23,32(sp)
   49d3c:	dd800715 	stw	r22,28(sp)
   49d40:	dd400615 	stw	r21,24(sp)
   49d44:	dd000515 	stw	r20,20(sp)
   49d48:	dc800315 	stw	r18,12(sp)
   49d4c:	dc400215 	stw	r17,8(sp)
   49d50:	2027883a 	mov	r19,r4
   49d54:	2821883a 	mov	r16,r5
   49d58:	3800411e 	bne	r7,zero,49e60 <__udivdi3+0x13c>
   49d5c:	3023883a 	mov	r17,r6
   49d60:	2025883a 	mov	r18,r4
   49d64:	2980522e 	bgeu	r5,r6,49eb0 <__udivdi3+0x18c>
   49d68:	00bfffd4 	movui	r2,65535
   49d6c:	282d883a 	mov	r22,r5
   49d70:	1180a836 	bltu	r2,r6,4a014 <__udivdi3+0x2f0>
   49d74:	00803fc4 	movi	r2,255
   49d78:	1185803a 	cmpltu	r2,r2,r6
   49d7c:	100490fa 	slli	r2,r2,3
   49d80:	3086d83a 	srl	r3,r6,r2
   49d84:	01000174 	movhi	r4,5
   49d88:	213ef504 	addi	r4,r4,-1068
   49d8c:	20c7883a 	add	r3,r4,r3
   49d90:	18c00003 	ldbu	r3,0(r3)
   49d94:	1885883a 	add	r2,r3,r2
   49d98:	00c00804 	movi	r3,32
   49d9c:	1887c83a 	sub	r3,r3,r2
   49da0:	18000526 	beq	r3,zero,49db8 <__udivdi3+0x94>
   49da4:	80e0983a 	sll	r16,r16,r3
   49da8:	9884d83a 	srl	r2,r19,r2
   49dac:	30e2983a 	sll	r17,r6,r3
   49db0:	98e4983a 	sll	r18,r19,r3
   49db4:	142cb03a 	or	r22,r2,r16
   49db8:	882ad43a 	srli	r21,r17,16
   49dbc:	b009883a 	mov	r4,r22
   49dc0:	8d3fffcc 	andi	r20,r17,65535
   49dc4:	a80b883a 	mov	r5,r21
   49dc8:	004a9300 	call	4a930 <__umodsi3>
   49dcc:	b009883a 	mov	r4,r22
   49dd0:	a80b883a 	mov	r5,r21
   49dd4:	1027883a 	mov	r19,r2
   49dd8:	004a8cc0 	call	4a8cc <__udivsi3>
   49ddc:	102d883a 	mov	r22,r2
   49de0:	9826943a 	slli	r19,r19,16
   49de4:	9004d43a 	srli	r2,r18,16
   49de8:	a5a1383a 	mul	r16,r20,r22
   49dec:	14c4b03a 	or	r2,r2,r19
   49df0:	1400052e 	bgeu	r2,r16,49e08 <__udivdi3+0xe4>
   49df4:	1445883a 	add	r2,r2,r17
   49df8:	b0ffffc4 	addi	r3,r22,-1
   49dfc:	14400136 	bltu	r2,r17,49e04 <__udivdi3+0xe0>
   49e00:	14012336 	bltu	r2,r16,4a290 <__udivdi3+0x56c>
   49e04:	182d883a 	mov	r22,r3
   49e08:	1421c83a 	sub	r16,r2,r16
   49e0c:	a80b883a 	mov	r5,r21
   49e10:	8009883a 	mov	r4,r16
   49e14:	004a9300 	call	4a930 <__umodsi3>
   49e18:	1027883a 	mov	r19,r2
   49e1c:	a80b883a 	mov	r5,r21
   49e20:	8009883a 	mov	r4,r16
   49e24:	004a8cc0 	call	4a8cc <__udivsi3>
   49e28:	9826943a 	slli	r19,r19,16
   49e2c:	a0a9383a 	mul	r20,r20,r2
   49e30:	94bfffcc 	andi	r18,r18,65535
   49e34:	94e4b03a 	or	r18,r18,r19
   49e38:	9500052e 	bgeu	r18,r20,49e50 <__udivdi3+0x12c>
   49e3c:	8ca5883a 	add	r18,r17,r18
   49e40:	10ffffc4 	addi	r3,r2,-1
   49e44:	9440f136 	bltu	r18,r17,4a20c <__udivdi3+0x4e8>
   49e48:	9500f02e 	bgeu	r18,r20,4a20c <__udivdi3+0x4e8>
   49e4c:	10bfff84 	addi	r2,r2,-2
   49e50:	b00c943a 	slli	r6,r22,16
   49e54:	0007883a 	mov	r3,zero
   49e58:	3084b03a 	or	r2,r6,r2
   49e5c:	00005906 	br	49fc4 <__udivdi3+0x2a0>
   49e60:	29c05636 	bltu	r5,r7,49fbc <__udivdi3+0x298>
   49e64:	00bfffd4 	movui	r2,65535
   49e68:	11c0622e 	bgeu	r2,r7,49ff4 <__udivdi3+0x2d0>
   49e6c:	00804034 	movhi	r2,256
   49e70:	10bfffc4 	addi	r2,r2,-1
   49e74:	11c0ee36 	bltu	r2,r7,4a230 <__udivdi3+0x50c>
   49e78:	00800404 	movi	r2,16
   49e7c:	3886d83a 	srl	r3,r7,r2
   49e80:	01000174 	movhi	r4,5
   49e84:	213ef504 	addi	r4,r4,-1068
   49e88:	20c7883a 	add	r3,r4,r3
   49e8c:	18c00003 	ldbu	r3,0(r3)
   49e90:	05400804 	movi	r21,32
   49e94:	1885883a 	add	r2,r3,r2
   49e98:	a8abc83a 	sub	r21,r21,r2
   49e9c:	a800621e 	bne	r21,zero,4a028 <__udivdi3+0x304>
   49ea0:	3c00e936 	bltu	r7,r16,4a248 <__udivdi3+0x524>
   49ea4:	9985403a 	cmpgeu	r2,r19,r6
   49ea8:	0007883a 	mov	r3,zero
   49eac:	00004506 	br	49fc4 <__udivdi3+0x2a0>
   49eb0:	3000041e 	bne	r6,zero,49ec4 <__udivdi3+0x1a0>
   49eb4:	000b883a 	mov	r5,zero
   49eb8:	01000044 	movi	r4,1
   49ebc:	004a8cc0 	call	4a8cc <__udivsi3>
   49ec0:	1023883a 	mov	r17,r2
   49ec4:	00bfffd4 	movui	r2,65535
   49ec8:	14404e2e 	bgeu	r2,r17,4a004 <__udivdi3+0x2e0>
   49ecc:	00804034 	movhi	r2,256
   49ed0:	10bfffc4 	addi	r2,r2,-1
   49ed4:	1440d836 	bltu	r2,r17,4a238 <__udivdi3+0x514>
   49ed8:	00800404 	movi	r2,16
   49edc:	8886d83a 	srl	r3,r17,r2
   49ee0:	01000174 	movhi	r4,5
   49ee4:	213ef504 	addi	r4,r4,-1068
   49ee8:	20c7883a 	add	r3,r4,r3
   49eec:	18c00003 	ldbu	r3,0(r3)
   49ef0:	1885883a 	add	r2,r3,r2
   49ef4:	00c00804 	movi	r3,32
   49ef8:	1887c83a 	sub	r3,r3,r2
   49efc:	18008f1e 	bne	r3,zero,4a13c <__udivdi3+0x418>
   49f00:	882ad43a 	srli	r21,r17,16
   49f04:	8461c83a 	sub	r16,r16,r17
   49f08:	8d3fffcc 	andi	r20,r17,65535
   49f0c:	00c00044 	movi	r3,1
   49f10:	8009883a 	mov	r4,r16
   49f14:	a80b883a 	mov	r5,r21
   49f18:	d8c00015 	stw	r3,0(sp)
   49f1c:	004a9300 	call	4a930 <__umodsi3>
   49f20:	8009883a 	mov	r4,r16
   49f24:	a80b883a 	mov	r5,r21
   49f28:	1027883a 	mov	r19,r2
   49f2c:	004a8cc0 	call	4a8cc <__udivsi3>
   49f30:	9826943a 	slli	r19,r19,16
   49f34:	9008d43a 	srli	r4,r18,16
   49f38:	1521383a 	mul	r16,r2,r20
   49f3c:	102d883a 	mov	r22,r2
   49f40:	24c8b03a 	or	r4,r4,r19
   49f44:	d8c00017 	ldw	r3,0(sp)
   49f48:	2400052e 	bgeu	r4,r16,49f60 <__udivdi3+0x23c>
   49f4c:	2449883a 	add	r4,r4,r17
   49f50:	b0bfffc4 	addi	r2,r22,-1
   49f54:	24400136 	bltu	r4,r17,49f5c <__udivdi3+0x238>
   49f58:	2400ca36 	bltu	r4,r16,4a284 <__udivdi3+0x560>
   49f5c:	102d883a 	mov	r22,r2
   49f60:	2421c83a 	sub	r16,r4,r16
   49f64:	a80b883a 	mov	r5,r21
   49f68:	8009883a 	mov	r4,r16
   49f6c:	d8c00015 	stw	r3,0(sp)
   49f70:	004a9300 	call	4a930 <__umodsi3>
   49f74:	1027883a 	mov	r19,r2
   49f78:	a80b883a 	mov	r5,r21
   49f7c:	8009883a 	mov	r4,r16
   49f80:	004a8cc0 	call	4a8cc <__udivsi3>
   49f84:	9826943a 	slli	r19,r19,16
   49f88:	1529383a 	mul	r20,r2,r20
   49f8c:	94bfffcc 	andi	r18,r18,65535
   49f90:	94e4b03a 	or	r18,r18,r19
   49f94:	d8c00017 	ldw	r3,0(sp)
   49f98:	9500052e 	bgeu	r18,r20,49fb0 <__udivdi3+0x28c>
   49f9c:	8ca5883a 	add	r18,r17,r18
   49fa0:	113fffc4 	addi	r4,r2,-1
   49fa4:	94409736 	bltu	r18,r17,4a204 <__udivdi3+0x4e0>
   49fa8:	9500962e 	bgeu	r18,r20,4a204 <__udivdi3+0x4e0>
   49fac:	10bfff84 	addi	r2,r2,-2
   49fb0:	b00c943a 	slli	r6,r22,16
   49fb4:	3084b03a 	or	r2,r6,r2
   49fb8:	00000206 	br	49fc4 <__udivdi3+0x2a0>
   49fbc:	0007883a 	mov	r3,zero
   49fc0:	0005883a 	mov	r2,zero
   49fc4:	dfc00a17 	ldw	ra,40(sp)
   49fc8:	df000917 	ldw	fp,36(sp)
   49fcc:	ddc00817 	ldw	r23,32(sp)
   49fd0:	dd800717 	ldw	r22,28(sp)
   49fd4:	dd400617 	ldw	r21,24(sp)
   49fd8:	dd000517 	ldw	r20,20(sp)
   49fdc:	dcc00417 	ldw	r19,16(sp)
   49fe0:	dc800317 	ldw	r18,12(sp)
   49fe4:	dc400217 	ldw	r17,8(sp)
   49fe8:	dc000117 	ldw	r16,4(sp)
   49fec:	dec00b04 	addi	sp,sp,44
   49ff0:	f800283a 	ret
   49ff4:	00803fc4 	movi	r2,255
   49ff8:	11c5803a 	cmpltu	r2,r2,r7
   49ffc:	100490fa 	slli	r2,r2,3
   4a000:	003f9e06 	br	49e7c <__alt_mem_onchip_memory2_1+0xfffc8e7c>
   4a004:	00803fc4 	movi	r2,255
   4a008:	1445803a 	cmpltu	r2,r2,r17
   4a00c:	100490fa 	slli	r2,r2,3
   4a010:	003fb206 	br	49edc <__alt_mem_onchip_memory2_1+0xfffc8edc>
   4a014:	00804034 	movhi	r2,256
   4a018:	10bfffc4 	addi	r2,r2,-1
   4a01c:	11808836 	bltu	r2,r6,4a240 <__udivdi3+0x51c>
   4a020:	00800404 	movi	r2,16
   4a024:	003f5606 	br	49d80 <__alt_mem_onchip_memory2_1+0xfffc8d80>
   4a028:	30aed83a 	srl	r23,r6,r2
   4a02c:	3d4e983a 	sll	r7,r7,r21
   4a030:	80acd83a 	srl	r22,r16,r2
   4a034:	9884d83a 	srl	r2,r19,r2
   4a038:	3deeb03a 	or	r23,r7,r23
   4a03c:	b824d43a 	srli	r18,r23,16
   4a040:	8560983a 	sll	r16,r16,r21
   4a044:	b009883a 	mov	r4,r22
   4a048:	900b883a 	mov	r5,r18
   4a04c:	3568983a 	sll	r20,r6,r21
   4a050:	1420b03a 	or	r16,r2,r16
   4a054:	004a9300 	call	4a930 <__umodsi3>
   4a058:	b009883a 	mov	r4,r22
   4a05c:	900b883a 	mov	r5,r18
   4a060:	1023883a 	mov	r17,r2
   4a064:	004a8cc0 	call	4a8cc <__udivsi3>
   4a068:	8808943a 	slli	r4,r17,16
   4a06c:	bf3fffcc 	andi	fp,r23,65535
   4a070:	8006d43a 	srli	r3,r16,16
   4a074:	e0a3383a 	mul	r17,fp,r2
   4a078:	100d883a 	mov	r6,r2
   4a07c:	1906b03a 	or	r3,r3,r4
   4a080:	1c40042e 	bgeu	r3,r17,4a094 <__udivdi3+0x370>
   4a084:	1dc7883a 	add	r3,r3,r23
   4a088:	10bfffc4 	addi	r2,r2,-1
   4a08c:	1dc0752e 	bgeu	r3,r23,4a264 <__udivdi3+0x540>
   4a090:	100d883a 	mov	r6,r2
   4a094:	1c63c83a 	sub	r17,r3,r17
   4a098:	900b883a 	mov	r5,r18
   4a09c:	8809883a 	mov	r4,r17
   4a0a0:	d9800015 	stw	r6,0(sp)
   4a0a4:	004a9300 	call	4a930 <__umodsi3>
   4a0a8:	102d883a 	mov	r22,r2
   4a0ac:	8809883a 	mov	r4,r17
   4a0b0:	900b883a 	mov	r5,r18
   4a0b4:	004a8cc0 	call	4a8cc <__udivsi3>
   4a0b8:	b02c943a 	slli	r22,r22,16
   4a0bc:	e089383a 	mul	r4,fp,r2
   4a0c0:	843fffcc 	andi	r16,r16,65535
   4a0c4:	85a0b03a 	or	r16,r16,r22
   4a0c8:	d9800017 	ldw	r6,0(sp)
   4a0cc:	8100042e 	bgeu	r16,r4,4a0e0 <__udivdi3+0x3bc>
   4a0d0:	85e1883a 	add	r16,r16,r23
   4a0d4:	10ffffc4 	addi	r3,r2,-1
   4a0d8:	85c05e2e 	bgeu	r16,r23,4a254 <__udivdi3+0x530>
   4a0dc:	1805883a 	mov	r2,r3
   4a0e0:	300c943a 	slli	r6,r6,16
   4a0e4:	a17fffcc 	andi	r5,r20,65535
   4a0e8:	a028d43a 	srli	r20,r20,16
   4a0ec:	3084b03a 	or	r2,r6,r2
   4a0f0:	10ffffcc 	andi	r3,r2,65535
   4a0f4:	100cd43a 	srli	r6,r2,16
   4a0f8:	194f383a 	mul	r7,r3,r5
   4a0fc:	1d07383a 	mul	r3,r3,r20
   4a100:	314b383a 	mul	r5,r6,r5
   4a104:	3810d43a 	srli	r8,r7,16
   4a108:	8121c83a 	sub	r16,r16,r4
   4a10c:	1947883a 	add	r3,r3,r5
   4a110:	40c7883a 	add	r3,r8,r3
   4a114:	350d383a 	mul	r6,r6,r20
   4a118:	1940022e 	bgeu	r3,r5,4a124 <__udivdi3+0x400>
   4a11c:	01000074 	movhi	r4,1
   4a120:	310d883a 	add	r6,r6,r4
   4a124:	1828d43a 	srli	r20,r3,16
   4a128:	a18d883a 	add	r6,r20,r6
   4a12c:	81803e36 	bltu	r16,r6,4a228 <__udivdi3+0x504>
   4a130:	81803826 	beq	r16,r6,4a214 <__udivdi3+0x4f0>
   4a134:	0007883a 	mov	r3,zero
   4a138:	003fa206 	br	49fc4 <__alt_mem_onchip_memory2_1+0xfffc8fc4>
   4a13c:	88e2983a 	sll	r17,r17,r3
   4a140:	80a8d83a 	srl	r20,r16,r2
   4a144:	80e0983a 	sll	r16,r16,r3
   4a148:	882ad43a 	srli	r21,r17,16
   4a14c:	9884d83a 	srl	r2,r19,r2
   4a150:	a009883a 	mov	r4,r20
   4a154:	a80b883a 	mov	r5,r21
   4a158:	142eb03a 	or	r23,r2,r16
   4a15c:	98e4983a 	sll	r18,r19,r3
   4a160:	004a9300 	call	4a930 <__umodsi3>
   4a164:	a009883a 	mov	r4,r20
   4a168:	a80b883a 	mov	r5,r21
   4a16c:	1021883a 	mov	r16,r2
   4a170:	004a8cc0 	call	4a8cc <__udivsi3>
   4a174:	1039883a 	mov	fp,r2
   4a178:	8d3fffcc 	andi	r20,r17,65535
   4a17c:	8020943a 	slli	r16,r16,16
   4a180:	b804d43a 	srli	r2,r23,16
   4a184:	a72d383a 	mul	r22,r20,fp
   4a188:	1404b03a 	or	r2,r2,r16
   4a18c:	1580062e 	bgeu	r2,r22,4a1a8 <__udivdi3+0x484>
   4a190:	1445883a 	add	r2,r2,r17
   4a194:	e0ffffc4 	addi	r3,fp,-1
   4a198:	14403836 	bltu	r2,r17,4a27c <__udivdi3+0x558>
   4a19c:	1580372e 	bgeu	r2,r22,4a27c <__udivdi3+0x558>
   4a1a0:	e73fff84 	addi	fp,fp,-2
   4a1a4:	1445883a 	add	r2,r2,r17
   4a1a8:	15adc83a 	sub	r22,r2,r22
   4a1ac:	a80b883a 	mov	r5,r21
   4a1b0:	b009883a 	mov	r4,r22
   4a1b4:	004a9300 	call	4a930 <__umodsi3>
   4a1b8:	1027883a 	mov	r19,r2
   4a1bc:	b009883a 	mov	r4,r22
   4a1c0:	a80b883a 	mov	r5,r21
   4a1c4:	004a8cc0 	call	4a8cc <__udivsi3>
   4a1c8:	9826943a 	slli	r19,r19,16
   4a1cc:	a0a1383a 	mul	r16,r20,r2
   4a1d0:	b93fffcc 	andi	r4,r23,65535
   4a1d4:	24c8b03a 	or	r4,r4,r19
   4a1d8:	2400062e 	bgeu	r4,r16,4a1f4 <__udivdi3+0x4d0>
   4a1dc:	2449883a 	add	r4,r4,r17
   4a1e0:	10ffffc4 	addi	r3,r2,-1
   4a1e4:	24402336 	bltu	r4,r17,4a274 <__udivdi3+0x550>
   4a1e8:	2400222e 	bgeu	r4,r16,4a274 <__udivdi3+0x550>
   4a1ec:	10bfff84 	addi	r2,r2,-2
   4a1f0:	2449883a 	add	r4,r4,r17
   4a1f4:	e038943a 	slli	fp,fp,16
   4a1f8:	2421c83a 	sub	r16,r4,r16
   4a1fc:	e086b03a 	or	r3,fp,r2
   4a200:	003f4306 	br	49f10 <__alt_mem_onchip_memory2_1+0xfffc8f10>
   4a204:	2005883a 	mov	r2,r4
   4a208:	003f6906 	br	49fb0 <__alt_mem_onchip_memory2_1+0xfffc8fb0>
   4a20c:	1805883a 	mov	r2,r3
   4a210:	003f0f06 	br	49e50 <__alt_mem_onchip_memory2_1+0xfffc8e50>
   4a214:	1806943a 	slli	r3,r3,16
   4a218:	9d66983a 	sll	r19,r19,r21
   4a21c:	39ffffcc 	andi	r7,r7,65535
   4a220:	19c7883a 	add	r3,r3,r7
   4a224:	98ffc32e 	bgeu	r19,r3,4a134 <__alt_mem_onchip_memory2_1+0xfffc9134>
   4a228:	10bfffc4 	addi	r2,r2,-1
   4a22c:	003fc106 	br	4a134 <__alt_mem_onchip_memory2_1+0xfffc9134>
   4a230:	00800604 	movi	r2,24
   4a234:	003f1106 	br	49e7c <__alt_mem_onchip_memory2_1+0xfffc8e7c>
   4a238:	00800604 	movi	r2,24
   4a23c:	003f2706 	br	49edc <__alt_mem_onchip_memory2_1+0xfffc8edc>
   4a240:	00800604 	movi	r2,24
   4a244:	003ece06 	br	49d80 <__alt_mem_onchip_memory2_1+0xfffc8d80>
   4a248:	0007883a 	mov	r3,zero
   4a24c:	00800044 	movi	r2,1
   4a250:	003f5c06 	br	49fc4 <__alt_mem_onchip_memory2_1+0xfffc8fc4>
   4a254:	813fa12e 	bgeu	r16,r4,4a0dc <__alt_mem_onchip_memory2_1+0xfffc90dc>
   4a258:	10bfff84 	addi	r2,r2,-2
   4a25c:	85e1883a 	add	r16,r16,r23
   4a260:	003f9f06 	br	4a0e0 <__alt_mem_onchip_memory2_1+0xfffc90e0>
   4a264:	1c7f8a2e 	bgeu	r3,r17,4a090 <__alt_mem_onchip_memory2_1+0xfffc9090>
   4a268:	31bfff84 	addi	r6,r6,-2
   4a26c:	1dc7883a 	add	r3,r3,r23
   4a270:	003f8806 	br	4a094 <__alt_mem_onchip_memory2_1+0xfffc9094>
   4a274:	1805883a 	mov	r2,r3
   4a278:	003fde06 	br	4a1f4 <__alt_mem_onchip_memory2_1+0xfffc91f4>
   4a27c:	1839883a 	mov	fp,r3
   4a280:	003fc906 	br	4a1a8 <__alt_mem_onchip_memory2_1+0xfffc91a8>
   4a284:	b5bfff84 	addi	r22,r22,-2
   4a288:	2449883a 	add	r4,r4,r17
   4a28c:	003f3406 	br	49f60 <__alt_mem_onchip_memory2_1+0xfffc8f60>
   4a290:	b5bfff84 	addi	r22,r22,-2
   4a294:	1445883a 	add	r2,r2,r17
   4a298:	003edb06 	br	49e08 <__alt_mem_onchip_memory2_1+0xfffc8e08>

0004a29c <__umoddi3>:
   4a29c:	defff404 	addi	sp,sp,-48
   4a2a0:	df000a15 	stw	fp,40(sp)
   4a2a4:	dc400315 	stw	r17,12(sp)
   4a2a8:	dc000215 	stw	r16,8(sp)
   4a2ac:	dfc00b15 	stw	ra,44(sp)
   4a2b0:	ddc00915 	stw	r23,36(sp)
   4a2b4:	dd800815 	stw	r22,32(sp)
   4a2b8:	dd400715 	stw	r21,28(sp)
   4a2bc:	dd000615 	stw	r20,24(sp)
   4a2c0:	dcc00515 	stw	r19,20(sp)
   4a2c4:	dc800415 	stw	r18,16(sp)
   4a2c8:	2021883a 	mov	r16,r4
   4a2cc:	2823883a 	mov	r17,r5
   4a2d0:	2839883a 	mov	fp,r5
   4a2d4:	38003c1e 	bne	r7,zero,4a3c8 <__umoddi3+0x12c>
   4a2d8:	3027883a 	mov	r19,r6
   4a2dc:	2029883a 	mov	r20,r4
   4a2e0:	2980512e 	bgeu	r5,r6,4a428 <__umoddi3+0x18c>
   4a2e4:	00bfffd4 	movui	r2,65535
   4a2e8:	11809a36 	bltu	r2,r6,4a554 <__umoddi3+0x2b8>
   4a2ec:	01003fc4 	movi	r4,255
   4a2f0:	2189803a 	cmpltu	r4,r4,r6
   4a2f4:	200890fa 	slli	r4,r4,3
   4a2f8:	3104d83a 	srl	r2,r6,r4
   4a2fc:	00c00174 	movhi	r3,5
   4a300:	18fef504 	addi	r3,r3,-1068
   4a304:	1885883a 	add	r2,r3,r2
   4a308:	10c00003 	ldbu	r3,0(r2)
   4a30c:	00800804 	movi	r2,32
   4a310:	1909883a 	add	r4,r3,r4
   4a314:	1125c83a 	sub	r18,r2,r4
   4a318:	90000526 	beq	r18,zero,4a330 <__umoddi3+0x94>
   4a31c:	8ca2983a 	sll	r17,r17,r18
   4a320:	8108d83a 	srl	r4,r16,r4
   4a324:	34a6983a 	sll	r19,r6,r18
   4a328:	84a8983a 	sll	r20,r16,r18
   4a32c:	2478b03a 	or	fp,r4,r17
   4a330:	982ed43a 	srli	r23,r19,16
   4a334:	e009883a 	mov	r4,fp
   4a338:	9dbfffcc 	andi	r22,r19,65535
   4a33c:	b80b883a 	mov	r5,r23
   4a340:	004a9300 	call	4a930 <__umodsi3>
   4a344:	e009883a 	mov	r4,fp
   4a348:	b80b883a 	mov	r5,r23
   4a34c:	102b883a 	mov	r21,r2
   4a350:	004a8cc0 	call	4a8cc <__udivsi3>
   4a354:	a806943a 	slli	r3,r21,16
   4a358:	a008d43a 	srli	r4,r20,16
   4a35c:	b085383a 	mul	r2,r22,r2
   4a360:	20c8b03a 	or	r4,r4,r3
   4a364:	2080032e 	bgeu	r4,r2,4a374 <__umoddi3+0xd8>
   4a368:	24c9883a 	add	r4,r4,r19
   4a36c:	24c00136 	bltu	r4,r19,4a374 <__umoddi3+0xd8>
   4a370:	20811036 	bltu	r4,r2,4a7b4 <__umoddi3+0x518>
   4a374:	20abc83a 	sub	r21,r4,r2
   4a378:	b80b883a 	mov	r5,r23
   4a37c:	a809883a 	mov	r4,r21
   4a380:	004a9300 	call	4a930 <__umodsi3>
   4a384:	1023883a 	mov	r17,r2
   4a388:	b80b883a 	mov	r5,r23
   4a38c:	a809883a 	mov	r4,r21
   4a390:	004a8cc0 	call	4a8cc <__udivsi3>
   4a394:	8822943a 	slli	r17,r17,16
   4a398:	b085383a 	mul	r2,r22,r2
   4a39c:	a0ffffcc 	andi	r3,r20,65535
   4a3a0:	1c46b03a 	or	r3,r3,r17
   4a3a4:	1880042e 	bgeu	r3,r2,4a3b8 <__umoddi3+0x11c>
   4a3a8:	1cc7883a 	add	r3,r3,r19
   4a3ac:	1cc00236 	bltu	r3,r19,4a3b8 <__umoddi3+0x11c>
   4a3b0:	1880012e 	bgeu	r3,r2,4a3b8 <__umoddi3+0x11c>
   4a3b4:	1cc7883a 	add	r3,r3,r19
   4a3b8:	1885c83a 	sub	r2,r3,r2
   4a3bc:	1484d83a 	srl	r2,r2,r18
   4a3c0:	0007883a 	mov	r3,zero
   4a3c4:	00004f06 	br	4a504 <__umoddi3+0x268>
   4a3c8:	29c04c36 	bltu	r5,r7,4a4fc <__umoddi3+0x260>
   4a3cc:	00bfffd4 	movui	r2,65535
   4a3d0:	11c0582e 	bgeu	r2,r7,4a534 <__umoddi3+0x298>
   4a3d4:	00804034 	movhi	r2,256
   4a3d8:	10bfffc4 	addi	r2,r2,-1
   4a3dc:	11c0e736 	bltu	r2,r7,4a77c <__umoddi3+0x4e0>
   4a3e0:	01000404 	movi	r4,16
   4a3e4:	3904d83a 	srl	r2,r7,r4
   4a3e8:	00c00174 	movhi	r3,5
   4a3ec:	18fef504 	addi	r3,r3,-1068
   4a3f0:	1885883a 	add	r2,r3,r2
   4a3f4:	14c00003 	ldbu	r19,0(r2)
   4a3f8:	00c00804 	movi	r3,32
   4a3fc:	9927883a 	add	r19,r19,r4
   4a400:	1ce9c83a 	sub	r20,r3,r19
   4a404:	a000581e 	bne	r20,zero,4a568 <__umoddi3+0x2cc>
   4a408:	3c400136 	bltu	r7,r17,4a410 <__umoddi3+0x174>
   4a40c:	8180eb36 	bltu	r16,r6,4a7bc <__umoddi3+0x520>
   4a410:	8185c83a 	sub	r2,r16,r6
   4a414:	89e3c83a 	sub	r17,r17,r7
   4a418:	8089803a 	cmpltu	r4,r16,r2
   4a41c:	8939c83a 	sub	fp,r17,r4
   4a420:	e007883a 	mov	r3,fp
   4a424:	00003706 	br	4a504 <__umoddi3+0x268>
   4a428:	3000041e 	bne	r6,zero,4a43c <__umoddi3+0x1a0>
   4a42c:	000b883a 	mov	r5,zero
   4a430:	01000044 	movi	r4,1
   4a434:	004a8cc0 	call	4a8cc <__udivsi3>
   4a438:	1027883a 	mov	r19,r2
   4a43c:	00bfffd4 	movui	r2,65535
   4a440:	14c0402e 	bgeu	r2,r19,4a544 <__umoddi3+0x2a8>
   4a444:	00804034 	movhi	r2,256
   4a448:	10bfffc4 	addi	r2,r2,-1
   4a44c:	14c0cd36 	bltu	r2,r19,4a784 <__umoddi3+0x4e8>
   4a450:	00800404 	movi	r2,16
   4a454:	9886d83a 	srl	r3,r19,r2
   4a458:	01000174 	movhi	r4,5
   4a45c:	213ef504 	addi	r4,r4,-1068
   4a460:	20c7883a 	add	r3,r4,r3
   4a464:	18c00003 	ldbu	r3,0(r3)
   4a468:	1887883a 	add	r3,r3,r2
   4a46c:	00800804 	movi	r2,32
   4a470:	10e5c83a 	sub	r18,r2,r3
   4a474:	9000901e 	bne	r18,zero,4a6b8 <__umoddi3+0x41c>
   4a478:	982cd43a 	srli	r22,r19,16
   4a47c:	8ce3c83a 	sub	r17,r17,r19
   4a480:	9d7fffcc 	andi	r21,r19,65535
   4a484:	b00b883a 	mov	r5,r22
   4a488:	8809883a 	mov	r4,r17
   4a48c:	004a9300 	call	4a930 <__umodsi3>
   4a490:	8809883a 	mov	r4,r17
   4a494:	b00b883a 	mov	r5,r22
   4a498:	1021883a 	mov	r16,r2
   4a49c:	004a8cc0 	call	4a8cc <__udivsi3>
   4a4a0:	8006943a 	slli	r3,r16,16
   4a4a4:	a008d43a 	srli	r4,r20,16
   4a4a8:	1545383a 	mul	r2,r2,r21
   4a4ac:	20c8b03a 	or	r4,r4,r3
   4a4b0:	2080042e 	bgeu	r4,r2,4a4c4 <__umoddi3+0x228>
   4a4b4:	24c9883a 	add	r4,r4,r19
   4a4b8:	24c00236 	bltu	r4,r19,4a4c4 <__umoddi3+0x228>
   4a4bc:	2080012e 	bgeu	r4,r2,4a4c4 <__umoddi3+0x228>
   4a4c0:	24c9883a 	add	r4,r4,r19
   4a4c4:	20a1c83a 	sub	r16,r4,r2
   4a4c8:	b00b883a 	mov	r5,r22
   4a4cc:	8009883a 	mov	r4,r16
   4a4d0:	004a9300 	call	4a930 <__umodsi3>
   4a4d4:	1023883a 	mov	r17,r2
   4a4d8:	b00b883a 	mov	r5,r22
   4a4dc:	8009883a 	mov	r4,r16
   4a4e0:	004a8cc0 	call	4a8cc <__udivsi3>
   4a4e4:	8822943a 	slli	r17,r17,16
   4a4e8:	1545383a 	mul	r2,r2,r21
   4a4ec:	a53fffcc 	andi	r20,r20,65535
   4a4f0:	a446b03a 	or	r3,r20,r17
   4a4f4:	18bfb02e 	bgeu	r3,r2,4a3b8 <__alt_mem_onchip_memory2_1+0xfffc93b8>
   4a4f8:	003fab06 	br	4a3a8 <__alt_mem_onchip_memory2_1+0xfffc93a8>
   4a4fc:	2005883a 	mov	r2,r4
   4a500:	2807883a 	mov	r3,r5
   4a504:	dfc00b17 	ldw	ra,44(sp)
   4a508:	df000a17 	ldw	fp,40(sp)
   4a50c:	ddc00917 	ldw	r23,36(sp)
   4a510:	dd800817 	ldw	r22,32(sp)
   4a514:	dd400717 	ldw	r21,28(sp)
   4a518:	dd000617 	ldw	r20,24(sp)
   4a51c:	dcc00517 	ldw	r19,20(sp)
   4a520:	dc800417 	ldw	r18,16(sp)
   4a524:	dc400317 	ldw	r17,12(sp)
   4a528:	dc000217 	ldw	r16,8(sp)
   4a52c:	dec00c04 	addi	sp,sp,48
   4a530:	f800283a 	ret
   4a534:	04c03fc4 	movi	r19,255
   4a538:	99c9803a 	cmpltu	r4,r19,r7
   4a53c:	200890fa 	slli	r4,r4,3
   4a540:	003fa806 	br	4a3e4 <__alt_mem_onchip_memory2_1+0xfffc93e4>
   4a544:	00803fc4 	movi	r2,255
   4a548:	14c5803a 	cmpltu	r2,r2,r19
   4a54c:	100490fa 	slli	r2,r2,3
   4a550:	003fc006 	br	4a454 <__alt_mem_onchip_memory2_1+0xfffc9454>
   4a554:	00804034 	movhi	r2,256
   4a558:	10bfffc4 	addi	r2,r2,-1
   4a55c:	11808b36 	bltu	r2,r6,4a78c <__umoddi3+0x4f0>
   4a560:	01000404 	movi	r4,16
   4a564:	003f6406 	br	4a2f8 <__alt_mem_onchip_memory2_1+0xfffc92f8>
   4a568:	34c4d83a 	srl	r2,r6,r19
   4a56c:	3d0e983a 	sll	r7,r7,r20
   4a570:	8cf8d83a 	srl	fp,r17,r19
   4a574:	8d10983a 	sll	r8,r17,r20
   4a578:	38aab03a 	or	r21,r7,r2
   4a57c:	a82cd43a 	srli	r22,r21,16
   4a580:	84e2d83a 	srl	r17,r16,r19
   4a584:	e009883a 	mov	r4,fp
   4a588:	b00b883a 	mov	r5,r22
   4a58c:	8a22b03a 	or	r17,r17,r8
   4a590:	3524983a 	sll	r18,r6,r20
   4a594:	004a9300 	call	4a930 <__umodsi3>
   4a598:	e009883a 	mov	r4,fp
   4a59c:	b00b883a 	mov	r5,r22
   4a5a0:	102f883a 	mov	r23,r2
   4a5a4:	004a8cc0 	call	4a8cc <__udivsi3>
   4a5a8:	100d883a 	mov	r6,r2
   4a5ac:	b808943a 	slli	r4,r23,16
   4a5b0:	aa3fffcc 	andi	r8,r21,65535
   4a5b4:	8804d43a 	srli	r2,r17,16
   4a5b8:	41af383a 	mul	r23,r8,r6
   4a5bc:	8520983a 	sll	r16,r16,r20
   4a5c0:	1104b03a 	or	r2,r2,r4
   4a5c4:	15c0042e 	bgeu	r2,r23,4a5d8 <__umoddi3+0x33c>
   4a5c8:	1545883a 	add	r2,r2,r21
   4a5cc:	30ffffc4 	addi	r3,r6,-1
   4a5d0:	1540742e 	bgeu	r2,r21,4a7a4 <__umoddi3+0x508>
   4a5d4:	180d883a 	mov	r6,r3
   4a5d8:	15efc83a 	sub	r23,r2,r23
   4a5dc:	b00b883a 	mov	r5,r22
   4a5e0:	b809883a 	mov	r4,r23
   4a5e4:	d9800115 	stw	r6,4(sp)
   4a5e8:	da000015 	stw	r8,0(sp)
   4a5ec:	004a9300 	call	4a930 <__umodsi3>
   4a5f0:	b00b883a 	mov	r5,r22
   4a5f4:	b809883a 	mov	r4,r23
   4a5f8:	1039883a 	mov	fp,r2
   4a5fc:	004a8cc0 	call	4a8cc <__udivsi3>
   4a600:	da000017 	ldw	r8,0(sp)
   4a604:	e038943a 	slli	fp,fp,16
   4a608:	100b883a 	mov	r5,r2
   4a60c:	4089383a 	mul	r4,r8,r2
   4a610:	8a3fffcc 	andi	r8,r17,65535
   4a614:	4710b03a 	or	r8,r8,fp
   4a618:	d9800117 	ldw	r6,4(sp)
   4a61c:	4100042e 	bgeu	r8,r4,4a630 <__umoddi3+0x394>
   4a620:	4551883a 	add	r8,r8,r21
   4a624:	10bfffc4 	addi	r2,r2,-1
   4a628:	45405a2e 	bgeu	r8,r21,4a794 <__umoddi3+0x4f8>
   4a62c:	100b883a 	mov	r5,r2
   4a630:	300c943a 	slli	r6,r6,16
   4a634:	91ffffcc 	andi	r7,r18,65535
   4a638:	9004d43a 	srli	r2,r18,16
   4a63c:	314cb03a 	or	r6,r6,r5
   4a640:	317fffcc 	andi	r5,r6,65535
   4a644:	300cd43a 	srli	r6,r6,16
   4a648:	29d3383a 	mul	r9,r5,r7
   4a64c:	288b383a 	mul	r5,r5,r2
   4a650:	31cf383a 	mul	r7,r6,r7
   4a654:	4806d43a 	srli	r3,r9,16
   4a658:	4111c83a 	sub	r8,r8,r4
   4a65c:	29cb883a 	add	r5,r5,r7
   4a660:	194b883a 	add	r5,r3,r5
   4a664:	3085383a 	mul	r2,r6,r2
   4a668:	29c0022e 	bgeu	r5,r7,4a674 <__umoddi3+0x3d8>
   4a66c:	00c00074 	movhi	r3,1
   4a670:	10c5883a 	add	r2,r2,r3
   4a674:	2808d43a 	srli	r4,r5,16
   4a678:	280a943a 	slli	r5,r5,16
   4a67c:	4a7fffcc 	andi	r9,r9,65535
   4a680:	2085883a 	add	r2,r4,r2
   4a684:	2a4b883a 	add	r5,r5,r9
   4a688:	40803636 	bltu	r8,r2,4a764 <__umoddi3+0x4c8>
   4a68c:	40804d26 	beq	r8,r2,4a7c4 <__umoddi3+0x528>
   4a690:	4089c83a 	sub	r4,r8,r2
   4a694:	280f883a 	mov	r7,r5
   4a698:	81cfc83a 	sub	r7,r16,r7
   4a69c:	81c7803a 	cmpltu	r3,r16,r7
   4a6a0:	20c7c83a 	sub	r3,r4,r3
   4a6a4:	1cc4983a 	sll	r2,r3,r19
   4a6a8:	3d0ed83a 	srl	r7,r7,r20
   4a6ac:	1d06d83a 	srl	r3,r3,r20
   4a6b0:	11c4b03a 	or	r2,r2,r7
   4a6b4:	003f9306 	br	4a504 <__alt_mem_onchip_memory2_1+0xfffc9504>
   4a6b8:	9ca6983a 	sll	r19,r19,r18
   4a6bc:	88e8d83a 	srl	r20,r17,r3
   4a6c0:	80c4d83a 	srl	r2,r16,r3
   4a6c4:	982cd43a 	srli	r22,r19,16
   4a6c8:	8ca2983a 	sll	r17,r17,r18
   4a6cc:	a009883a 	mov	r4,r20
   4a6d0:	b00b883a 	mov	r5,r22
   4a6d4:	1478b03a 	or	fp,r2,r17
   4a6d8:	004a9300 	call	4a930 <__umodsi3>
   4a6dc:	a009883a 	mov	r4,r20
   4a6e0:	b00b883a 	mov	r5,r22
   4a6e4:	1023883a 	mov	r17,r2
   4a6e8:	004a8cc0 	call	4a8cc <__udivsi3>
   4a6ec:	9d7fffcc 	andi	r21,r19,65535
   4a6f0:	880a943a 	slli	r5,r17,16
   4a6f4:	e008d43a 	srli	r4,fp,16
   4a6f8:	a885383a 	mul	r2,r21,r2
   4a6fc:	84a8983a 	sll	r20,r16,r18
   4a700:	2148b03a 	or	r4,r4,r5
   4a704:	2080042e 	bgeu	r4,r2,4a718 <__umoddi3+0x47c>
   4a708:	24c9883a 	add	r4,r4,r19
   4a70c:	24c00236 	bltu	r4,r19,4a718 <__umoddi3+0x47c>
   4a710:	2080012e 	bgeu	r4,r2,4a718 <__umoddi3+0x47c>
   4a714:	24c9883a 	add	r4,r4,r19
   4a718:	20a3c83a 	sub	r17,r4,r2
   4a71c:	b00b883a 	mov	r5,r22
   4a720:	8809883a 	mov	r4,r17
   4a724:	004a9300 	call	4a930 <__umodsi3>
   4a728:	102f883a 	mov	r23,r2
   4a72c:	8809883a 	mov	r4,r17
   4a730:	b00b883a 	mov	r5,r22
   4a734:	004a8cc0 	call	4a8cc <__udivsi3>
   4a738:	b82e943a 	slli	r23,r23,16
   4a73c:	a885383a 	mul	r2,r21,r2
   4a740:	e13fffcc 	andi	r4,fp,65535
   4a744:	25c8b03a 	or	r4,r4,r23
   4a748:	2080042e 	bgeu	r4,r2,4a75c <__umoddi3+0x4c0>
   4a74c:	24c9883a 	add	r4,r4,r19
   4a750:	24c00236 	bltu	r4,r19,4a75c <__umoddi3+0x4c0>
   4a754:	2080012e 	bgeu	r4,r2,4a75c <__umoddi3+0x4c0>
   4a758:	24c9883a 	add	r4,r4,r19
   4a75c:	20a3c83a 	sub	r17,r4,r2
   4a760:	003f4806 	br	4a484 <__alt_mem_onchip_memory2_1+0xfffc9484>
   4a764:	2c8fc83a 	sub	r7,r5,r18
   4a768:	1545c83a 	sub	r2,r2,r21
   4a76c:	29cb803a 	cmpltu	r5,r5,r7
   4a770:	1145c83a 	sub	r2,r2,r5
   4a774:	4089c83a 	sub	r4,r8,r2
   4a778:	003fc706 	br	4a698 <__alt_mem_onchip_memory2_1+0xfffc9698>
   4a77c:	01000604 	movi	r4,24
   4a780:	003f1806 	br	4a3e4 <__alt_mem_onchip_memory2_1+0xfffc93e4>
   4a784:	00800604 	movi	r2,24
   4a788:	003f3206 	br	4a454 <__alt_mem_onchip_memory2_1+0xfffc9454>
   4a78c:	01000604 	movi	r4,24
   4a790:	003ed906 	br	4a2f8 <__alt_mem_onchip_memory2_1+0xfffc92f8>
   4a794:	413fa52e 	bgeu	r8,r4,4a62c <__alt_mem_onchip_memory2_1+0xfffc962c>
   4a798:	297fff84 	addi	r5,r5,-2
   4a79c:	4551883a 	add	r8,r8,r21
   4a7a0:	003fa306 	br	4a630 <__alt_mem_onchip_memory2_1+0xfffc9630>
   4a7a4:	15ff8b2e 	bgeu	r2,r23,4a5d4 <__alt_mem_onchip_memory2_1+0xfffc95d4>
   4a7a8:	31bfff84 	addi	r6,r6,-2
   4a7ac:	1545883a 	add	r2,r2,r21
   4a7b0:	003f8906 	br	4a5d8 <__alt_mem_onchip_memory2_1+0xfffc95d8>
   4a7b4:	24c9883a 	add	r4,r4,r19
   4a7b8:	003eee06 	br	4a374 <__alt_mem_onchip_memory2_1+0xfffc9374>
   4a7bc:	8005883a 	mov	r2,r16
   4a7c0:	003f1706 	br	4a420 <__alt_mem_onchip_memory2_1+0xfffc9420>
   4a7c4:	817fe736 	bltu	r16,r5,4a764 <__alt_mem_onchip_memory2_1+0xfffc9764>
   4a7c8:	280f883a 	mov	r7,r5
   4a7cc:	0009883a 	mov	r4,zero
   4a7d0:	003fb106 	br	4a698 <__alt_mem_onchip_memory2_1+0xfffc9698>

0004a7d4 <__divsi3>:
   4a7d4:	20001b16 	blt	r4,zero,4a844 <__divsi3+0x70>
   4a7d8:	000f883a 	mov	r7,zero
   4a7dc:	28001616 	blt	r5,zero,4a838 <__divsi3+0x64>
   4a7e0:	200d883a 	mov	r6,r4
   4a7e4:	29001a2e 	bgeu	r5,r4,4a850 <__divsi3+0x7c>
   4a7e8:	00800804 	movi	r2,32
   4a7ec:	00c00044 	movi	r3,1
   4a7f0:	00000106 	br	4a7f8 <__divsi3+0x24>
   4a7f4:	10000d26 	beq	r2,zero,4a82c <__divsi3+0x58>
   4a7f8:	294b883a 	add	r5,r5,r5
   4a7fc:	10bfffc4 	addi	r2,r2,-1
   4a800:	18c7883a 	add	r3,r3,r3
   4a804:	293ffb36 	bltu	r5,r4,4a7f4 <__alt_mem_onchip_memory2_1+0xfffc97f4>
   4a808:	0005883a 	mov	r2,zero
   4a80c:	18000726 	beq	r3,zero,4a82c <__divsi3+0x58>
   4a810:	0005883a 	mov	r2,zero
   4a814:	31400236 	bltu	r6,r5,4a820 <__divsi3+0x4c>
   4a818:	314dc83a 	sub	r6,r6,r5
   4a81c:	10c4b03a 	or	r2,r2,r3
   4a820:	1806d07a 	srli	r3,r3,1
   4a824:	280ad07a 	srli	r5,r5,1
   4a828:	183ffa1e 	bne	r3,zero,4a814 <__alt_mem_onchip_memory2_1+0xfffc9814>
   4a82c:	38000126 	beq	r7,zero,4a834 <__divsi3+0x60>
   4a830:	0085c83a 	sub	r2,zero,r2
   4a834:	f800283a 	ret
   4a838:	014bc83a 	sub	r5,zero,r5
   4a83c:	39c0005c 	xori	r7,r7,1
   4a840:	003fe706 	br	4a7e0 <__alt_mem_onchip_memory2_1+0xfffc97e0>
   4a844:	0109c83a 	sub	r4,zero,r4
   4a848:	01c00044 	movi	r7,1
   4a84c:	003fe306 	br	4a7dc <__alt_mem_onchip_memory2_1+0xfffc97dc>
   4a850:	00c00044 	movi	r3,1
   4a854:	003fee06 	br	4a810 <__alt_mem_onchip_memory2_1+0xfffc9810>

0004a858 <__modsi3>:
   4a858:	20001716 	blt	r4,zero,4a8b8 <__modsi3+0x60>
   4a85c:	000f883a 	mov	r7,zero
   4a860:	2005883a 	mov	r2,r4
   4a864:	28001216 	blt	r5,zero,4a8b0 <__modsi3+0x58>
   4a868:	2900162e 	bgeu	r5,r4,4a8c4 <__modsi3+0x6c>
   4a86c:	01800804 	movi	r6,32
   4a870:	00c00044 	movi	r3,1
   4a874:	00000106 	br	4a87c <__modsi3+0x24>
   4a878:	30000a26 	beq	r6,zero,4a8a4 <__modsi3+0x4c>
   4a87c:	294b883a 	add	r5,r5,r5
   4a880:	31bfffc4 	addi	r6,r6,-1
   4a884:	18c7883a 	add	r3,r3,r3
   4a888:	293ffb36 	bltu	r5,r4,4a878 <__alt_mem_onchip_memory2_1+0xfffc9878>
   4a88c:	18000526 	beq	r3,zero,4a8a4 <__modsi3+0x4c>
   4a890:	1806d07a 	srli	r3,r3,1
   4a894:	11400136 	bltu	r2,r5,4a89c <__modsi3+0x44>
   4a898:	1145c83a 	sub	r2,r2,r5
   4a89c:	280ad07a 	srli	r5,r5,1
   4a8a0:	183ffb1e 	bne	r3,zero,4a890 <__alt_mem_onchip_memory2_1+0xfffc9890>
   4a8a4:	38000126 	beq	r7,zero,4a8ac <__modsi3+0x54>
   4a8a8:	0085c83a 	sub	r2,zero,r2
   4a8ac:	f800283a 	ret
   4a8b0:	014bc83a 	sub	r5,zero,r5
   4a8b4:	003fec06 	br	4a868 <__alt_mem_onchip_memory2_1+0xfffc9868>
   4a8b8:	0109c83a 	sub	r4,zero,r4
   4a8bc:	01c00044 	movi	r7,1
   4a8c0:	003fe706 	br	4a860 <__alt_mem_onchip_memory2_1+0xfffc9860>
   4a8c4:	00c00044 	movi	r3,1
   4a8c8:	003ff106 	br	4a890 <__alt_mem_onchip_memory2_1+0xfffc9890>

0004a8cc <__udivsi3>:
   4a8cc:	200d883a 	mov	r6,r4
   4a8d0:	2900152e 	bgeu	r5,r4,4a928 <__udivsi3+0x5c>
   4a8d4:	28001416 	blt	r5,zero,4a928 <__udivsi3+0x5c>
   4a8d8:	00800804 	movi	r2,32
   4a8dc:	00c00044 	movi	r3,1
   4a8e0:	00000206 	br	4a8ec <__udivsi3+0x20>
   4a8e4:	10000e26 	beq	r2,zero,4a920 <__udivsi3+0x54>
   4a8e8:	28000516 	blt	r5,zero,4a900 <__udivsi3+0x34>
   4a8ec:	294b883a 	add	r5,r5,r5
   4a8f0:	10bfffc4 	addi	r2,r2,-1
   4a8f4:	18c7883a 	add	r3,r3,r3
   4a8f8:	293ffa36 	bltu	r5,r4,4a8e4 <__alt_mem_onchip_memory2_1+0xfffc98e4>
   4a8fc:	18000826 	beq	r3,zero,4a920 <__udivsi3+0x54>
   4a900:	0005883a 	mov	r2,zero
   4a904:	31400236 	bltu	r6,r5,4a910 <__udivsi3+0x44>
   4a908:	314dc83a 	sub	r6,r6,r5
   4a90c:	10c4b03a 	or	r2,r2,r3
   4a910:	1806d07a 	srli	r3,r3,1
   4a914:	280ad07a 	srli	r5,r5,1
   4a918:	183ffa1e 	bne	r3,zero,4a904 <__alt_mem_onchip_memory2_1+0xfffc9904>
   4a91c:	f800283a 	ret
   4a920:	0005883a 	mov	r2,zero
   4a924:	f800283a 	ret
   4a928:	00c00044 	movi	r3,1
   4a92c:	003ff406 	br	4a900 <__alt_mem_onchip_memory2_1+0xfffc9900>

0004a930 <__umodsi3>:
   4a930:	2005883a 	mov	r2,r4
   4a934:	2900122e 	bgeu	r5,r4,4a980 <__umodsi3+0x50>
   4a938:	28001116 	blt	r5,zero,4a980 <__umodsi3+0x50>
   4a93c:	01800804 	movi	r6,32
   4a940:	00c00044 	movi	r3,1
   4a944:	00000206 	br	4a950 <__umodsi3+0x20>
   4a948:	30000c26 	beq	r6,zero,4a97c <__umodsi3+0x4c>
   4a94c:	28000516 	blt	r5,zero,4a964 <__umodsi3+0x34>
   4a950:	294b883a 	add	r5,r5,r5
   4a954:	31bfffc4 	addi	r6,r6,-1
   4a958:	18c7883a 	add	r3,r3,r3
   4a95c:	293ffa36 	bltu	r5,r4,4a948 <__alt_mem_onchip_memory2_1+0xfffc9948>
   4a960:	18000626 	beq	r3,zero,4a97c <__umodsi3+0x4c>
   4a964:	1806d07a 	srli	r3,r3,1
   4a968:	11400136 	bltu	r2,r5,4a970 <__umodsi3+0x40>
   4a96c:	1145c83a 	sub	r2,r2,r5
   4a970:	280ad07a 	srli	r5,r5,1
   4a974:	183ffb1e 	bne	r3,zero,4a964 <__alt_mem_onchip_memory2_1+0xfffc9964>
   4a978:	f800283a 	ret
   4a97c:	f800283a 	ret
   4a980:	00c00044 	movi	r3,1
   4a984:	003ff706 	br	4a964 <__alt_mem_onchip_memory2_1+0xfffc9964>

0004a988 <__adddf3>:
   4a988:	02c00434 	movhi	r11,16
   4a98c:	5affffc4 	addi	r11,r11,-1
   4a990:	2806d7fa 	srli	r3,r5,31
   4a994:	2ad4703a 	and	r10,r5,r11
   4a998:	3ad2703a 	and	r9,r7,r11
   4a99c:	3804d53a 	srli	r2,r7,20
   4a9a0:	3018d77a 	srli	r12,r6,29
   4a9a4:	280ad53a 	srli	r5,r5,20
   4a9a8:	501490fa 	slli	r10,r10,3
   4a9ac:	2010d77a 	srli	r8,r4,29
   4a9b0:	481290fa 	slli	r9,r9,3
   4a9b4:	380ed7fa 	srli	r7,r7,31
   4a9b8:	defffb04 	addi	sp,sp,-20
   4a9bc:	dc800215 	stw	r18,8(sp)
   4a9c0:	dc400115 	stw	r17,4(sp)
   4a9c4:	dc000015 	stw	r16,0(sp)
   4a9c8:	dfc00415 	stw	ra,16(sp)
   4a9cc:	dcc00315 	stw	r19,12(sp)
   4a9d0:	1c803fcc 	andi	r18,r3,255
   4a9d4:	2c01ffcc 	andi	r16,r5,2047
   4a9d8:	5210b03a 	or	r8,r10,r8
   4a9dc:	202290fa 	slli	r17,r4,3
   4a9e0:	1081ffcc 	andi	r2,r2,2047
   4a9e4:	4b12b03a 	or	r9,r9,r12
   4a9e8:	300c90fa 	slli	r6,r6,3
   4a9ec:	91c07526 	beq	r18,r7,4abc4 <__adddf3+0x23c>
   4a9f0:	8087c83a 	sub	r3,r16,r2
   4a9f4:	00c0ab0e 	bge	zero,r3,4aca4 <__adddf3+0x31c>
   4a9f8:	10002a1e 	bne	r2,zero,4aaa4 <__adddf3+0x11c>
   4a9fc:	4984b03a 	or	r2,r9,r6
   4aa00:	1000961e 	bne	r2,zero,4ac5c <__adddf3+0x2d4>
   4aa04:	888001cc 	andi	r2,r17,7
   4aa08:	10000726 	beq	r2,zero,4aa28 <__adddf3+0xa0>
   4aa0c:	888003cc 	andi	r2,r17,15
   4aa10:	00c00104 	movi	r3,4
   4aa14:	10c00426 	beq	r2,r3,4aa28 <__adddf3+0xa0>
   4aa18:	88c7883a 	add	r3,r17,r3
   4aa1c:	1c63803a 	cmpltu	r17,r3,r17
   4aa20:	4451883a 	add	r8,r8,r17
   4aa24:	1823883a 	mov	r17,r3
   4aa28:	4080202c 	andhi	r2,r8,128
   4aa2c:	10005926 	beq	r2,zero,4ab94 <__adddf3+0x20c>
   4aa30:	84000044 	addi	r16,r16,1
   4aa34:	0081ffc4 	movi	r2,2047
   4aa38:	8080ba26 	beq	r16,r2,4ad24 <__adddf3+0x39c>
   4aa3c:	00bfe034 	movhi	r2,65408
   4aa40:	10bfffc4 	addi	r2,r2,-1
   4aa44:	4090703a 	and	r8,r8,r2
   4aa48:	4004977a 	slli	r2,r8,29
   4aa4c:	4010927a 	slli	r8,r8,9
   4aa50:	8822d0fa 	srli	r17,r17,3
   4aa54:	8401ffcc 	andi	r16,r16,2047
   4aa58:	4010d33a 	srli	r8,r8,12
   4aa5c:	9007883a 	mov	r3,r18
   4aa60:	1444b03a 	or	r2,r2,r17
   4aa64:	8401ffcc 	andi	r16,r16,2047
   4aa68:	8020953a 	slli	r16,r16,20
   4aa6c:	18c03fcc 	andi	r3,r3,255
   4aa70:	01000434 	movhi	r4,16
   4aa74:	213fffc4 	addi	r4,r4,-1
   4aa78:	180697fa 	slli	r3,r3,31
   4aa7c:	4110703a 	and	r8,r8,r4
   4aa80:	4410b03a 	or	r8,r8,r16
   4aa84:	40c6b03a 	or	r3,r8,r3
   4aa88:	dfc00417 	ldw	ra,16(sp)
   4aa8c:	dcc00317 	ldw	r19,12(sp)
   4aa90:	dc800217 	ldw	r18,8(sp)
   4aa94:	dc400117 	ldw	r17,4(sp)
   4aa98:	dc000017 	ldw	r16,0(sp)
   4aa9c:	dec00504 	addi	sp,sp,20
   4aaa0:	f800283a 	ret
   4aaa4:	0081ffc4 	movi	r2,2047
   4aaa8:	80bfd626 	beq	r16,r2,4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4aaac:	4a402034 	orhi	r9,r9,128
   4aab0:	00800e04 	movi	r2,56
   4aab4:	10c09f16 	blt	r2,r3,4ad34 <__adddf3+0x3ac>
   4aab8:	008007c4 	movi	r2,31
   4aabc:	10c0c216 	blt	r2,r3,4adc8 <__adddf3+0x440>
   4aac0:	00800804 	movi	r2,32
   4aac4:	10c5c83a 	sub	r2,r2,r3
   4aac8:	488a983a 	sll	r5,r9,r2
   4aacc:	30c8d83a 	srl	r4,r6,r3
   4aad0:	3084983a 	sll	r2,r6,r2
   4aad4:	48c6d83a 	srl	r3,r9,r3
   4aad8:	290cb03a 	or	r6,r5,r4
   4aadc:	1004c03a 	cmpne	r2,r2,zero
   4aae0:	308cb03a 	or	r6,r6,r2
   4aae4:	898dc83a 	sub	r6,r17,r6
   4aae8:	89a3803a 	cmpltu	r17,r17,r6
   4aaec:	40d1c83a 	sub	r8,r8,r3
   4aaf0:	4451c83a 	sub	r8,r8,r17
   4aaf4:	3023883a 	mov	r17,r6
   4aaf8:	4080202c 	andhi	r2,r8,128
   4aafc:	10002326 	beq	r2,zero,4ab8c <__adddf3+0x204>
   4ab00:	04c02034 	movhi	r19,128
   4ab04:	9cffffc4 	addi	r19,r19,-1
   4ab08:	44e6703a 	and	r19,r8,r19
   4ab0c:	98007626 	beq	r19,zero,4ace8 <__adddf3+0x360>
   4ab10:	9809883a 	mov	r4,r19
   4ab14:	004cf8c0 	call	4cf8c <__clzsi2>
   4ab18:	10fffe04 	addi	r3,r2,-8
   4ab1c:	010007c4 	movi	r4,31
   4ab20:	20c07716 	blt	r4,r3,4ad00 <__adddf3+0x378>
   4ab24:	00800804 	movi	r2,32
   4ab28:	10c5c83a 	sub	r2,r2,r3
   4ab2c:	8884d83a 	srl	r2,r17,r2
   4ab30:	98d0983a 	sll	r8,r19,r3
   4ab34:	88e2983a 	sll	r17,r17,r3
   4ab38:	1204b03a 	or	r2,r2,r8
   4ab3c:	1c007416 	blt	r3,r16,4ad10 <__adddf3+0x388>
   4ab40:	1c21c83a 	sub	r16,r3,r16
   4ab44:	82000044 	addi	r8,r16,1
   4ab48:	00c007c4 	movi	r3,31
   4ab4c:	1a009116 	blt	r3,r8,4ad94 <__adddf3+0x40c>
   4ab50:	00c00804 	movi	r3,32
   4ab54:	1a07c83a 	sub	r3,r3,r8
   4ab58:	8a08d83a 	srl	r4,r17,r8
   4ab5c:	88e2983a 	sll	r17,r17,r3
   4ab60:	10c6983a 	sll	r3,r2,r3
   4ab64:	1210d83a 	srl	r8,r2,r8
   4ab68:	8804c03a 	cmpne	r2,r17,zero
   4ab6c:	1906b03a 	or	r3,r3,r4
   4ab70:	18a2b03a 	or	r17,r3,r2
   4ab74:	0021883a 	mov	r16,zero
   4ab78:	003fa206 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4ab7c:	1890b03a 	or	r8,r3,r2
   4ab80:	40017d26 	beq	r8,zero,4b178 <__adddf3+0x7f0>
   4ab84:	1011883a 	mov	r8,r2
   4ab88:	1823883a 	mov	r17,r3
   4ab8c:	888001cc 	andi	r2,r17,7
   4ab90:	103f9e1e 	bne	r2,zero,4aa0c <__alt_mem_onchip_memory2_1+0xfffc9a0c>
   4ab94:	4004977a 	slli	r2,r8,29
   4ab98:	8822d0fa 	srli	r17,r17,3
   4ab9c:	4010d0fa 	srli	r8,r8,3
   4aba0:	9007883a 	mov	r3,r18
   4aba4:	1444b03a 	or	r2,r2,r17
   4aba8:	0101ffc4 	movi	r4,2047
   4abac:	81002426 	beq	r16,r4,4ac40 <__adddf3+0x2b8>
   4abb0:	8120703a 	and	r16,r16,r4
   4abb4:	01000434 	movhi	r4,16
   4abb8:	213fffc4 	addi	r4,r4,-1
   4abbc:	4110703a 	and	r8,r8,r4
   4abc0:	003fa806 	br	4aa64 <__alt_mem_onchip_memory2_1+0xfffc9a64>
   4abc4:	8089c83a 	sub	r4,r16,r2
   4abc8:	01005e0e 	bge	zero,r4,4ad44 <__adddf3+0x3bc>
   4abcc:	10002b26 	beq	r2,zero,4ac7c <__adddf3+0x2f4>
   4abd0:	0081ffc4 	movi	r2,2047
   4abd4:	80bf8b26 	beq	r16,r2,4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4abd8:	4a402034 	orhi	r9,r9,128
   4abdc:	00800e04 	movi	r2,56
   4abe0:	1100a40e 	bge	r2,r4,4ae74 <__adddf3+0x4ec>
   4abe4:	498cb03a 	or	r6,r9,r6
   4abe8:	300ac03a 	cmpne	r5,r6,zero
   4abec:	0013883a 	mov	r9,zero
   4abf0:	2c4b883a 	add	r5,r5,r17
   4abf4:	2c63803a 	cmpltu	r17,r5,r17
   4abf8:	4a11883a 	add	r8,r9,r8
   4abfc:	8a11883a 	add	r8,r17,r8
   4ac00:	2823883a 	mov	r17,r5
   4ac04:	4080202c 	andhi	r2,r8,128
   4ac08:	103fe026 	beq	r2,zero,4ab8c <__alt_mem_onchip_memory2_1+0xfffc9b8c>
   4ac0c:	84000044 	addi	r16,r16,1
   4ac10:	0081ffc4 	movi	r2,2047
   4ac14:	8080d226 	beq	r16,r2,4af60 <__adddf3+0x5d8>
   4ac18:	00bfe034 	movhi	r2,65408
   4ac1c:	10bfffc4 	addi	r2,r2,-1
   4ac20:	4090703a 	and	r8,r8,r2
   4ac24:	880ad07a 	srli	r5,r17,1
   4ac28:	400897fa 	slli	r4,r8,31
   4ac2c:	88c0004c 	andi	r3,r17,1
   4ac30:	28e2b03a 	or	r17,r5,r3
   4ac34:	4010d07a 	srli	r8,r8,1
   4ac38:	2462b03a 	or	r17,r4,r17
   4ac3c:	003f7106 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4ac40:	4088b03a 	or	r4,r8,r2
   4ac44:	20014526 	beq	r4,zero,4b15c <__adddf3+0x7d4>
   4ac48:	01000434 	movhi	r4,16
   4ac4c:	42000234 	orhi	r8,r8,8
   4ac50:	213fffc4 	addi	r4,r4,-1
   4ac54:	4110703a 	and	r8,r8,r4
   4ac58:	003f8206 	br	4aa64 <__alt_mem_onchip_memory2_1+0xfffc9a64>
   4ac5c:	18ffffc4 	addi	r3,r3,-1
   4ac60:	1800491e 	bne	r3,zero,4ad88 <__adddf3+0x400>
   4ac64:	898bc83a 	sub	r5,r17,r6
   4ac68:	8963803a 	cmpltu	r17,r17,r5
   4ac6c:	4251c83a 	sub	r8,r8,r9
   4ac70:	4451c83a 	sub	r8,r8,r17
   4ac74:	2823883a 	mov	r17,r5
   4ac78:	003f9f06 	br	4aaf8 <__alt_mem_onchip_memory2_1+0xfffc9af8>
   4ac7c:	4984b03a 	or	r2,r9,r6
   4ac80:	103f6026 	beq	r2,zero,4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4ac84:	213fffc4 	addi	r4,r4,-1
   4ac88:	2000931e 	bne	r4,zero,4aed8 <__adddf3+0x550>
   4ac8c:	898d883a 	add	r6,r17,r6
   4ac90:	3463803a 	cmpltu	r17,r6,r17
   4ac94:	4251883a 	add	r8,r8,r9
   4ac98:	8a11883a 	add	r8,r17,r8
   4ac9c:	3023883a 	mov	r17,r6
   4aca0:	003fd806 	br	4ac04 <__alt_mem_onchip_memory2_1+0xfffc9c04>
   4aca4:	1800541e 	bne	r3,zero,4adf8 <__adddf3+0x470>
   4aca8:	80800044 	addi	r2,r16,1
   4acac:	1081ffcc 	andi	r2,r2,2047
   4acb0:	00c00044 	movi	r3,1
   4acb4:	1880a00e 	bge	r3,r2,4af38 <__adddf3+0x5b0>
   4acb8:	8989c83a 	sub	r4,r17,r6
   4acbc:	8905803a 	cmpltu	r2,r17,r4
   4acc0:	4267c83a 	sub	r19,r8,r9
   4acc4:	98a7c83a 	sub	r19,r19,r2
   4acc8:	9880202c 	andhi	r2,r19,128
   4accc:	10006326 	beq	r2,zero,4ae5c <__adddf3+0x4d4>
   4acd0:	3463c83a 	sub	r17,r6,r17
   4acd4:	4a07c83a 	sub	r3,r9,r8
   4acd8:	344d803a 	cmpltu	r6,r6,r17
   4acdc:	19a7c83a 	sub	r19,r3,r6
   4ace0:	3825883a 	mov	r18,r7
   4ace4:	983f8a1e 	bne	r19,zero,4ab10 <__alt_mem_onchip_memory2_1+0xfffc9b10>
   4ace8:	8809883a 	mov	r4,r17
   4acec:	004cf8c0 	call	4cf8c <__clzsi2>
   4acf0:	10800804 	addi	r2,r2,32
   4acf4:	10fffe04 	addi	r3,r2,-8
   4acf8:	010007c4 	movi	r4,31
   4acfc:	20ff890e 	bge	r4,r3,4ab24 <__alt_mem_onchip_memory2_1+0xfffc9b24>
   4ad00:	10bff604 	addi	r2,r2,-40
   4ad04:	8884983a 	sll	r2,r17,r2
   4ad08:	0023883a 	mov	r17,zero
   4ad0c:	1c3f8c0e 	bge	r3,r16,4ab40 <__alt_mem_onchip_memory2_1+0xfffc9b40>
   4ad10:	023fe034 	movhi	r8,65408
   4ad14:	423fffc4 	addi	r8,r8,-1
   4ad18:	80e1c83a 	sub	r16,r16,r3
   4ad1c:	1210703a 	and	r8,r2,r8
   4ad20:	003f3806 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4ad24:	9007883a 	mov	r3,r18
   4ad28:	0011883a 	mov	r8,zero
   4ad2c:	0005883a 	mov	r2,zero
   4ad30:	003f4c06 	br	4aa64 <__alt_mem_onchip_memory2_1+0xfffc9a64>
   4ad34:	498cb03a 	or	r6,r9,r6
   4ad38:	300cc03a 	cmpne	r6,r6,zero
   4ad3c:	0007883a 	mov	r3,zero
   4ad40:	003f6806 	br	4aae4 <__alt_mem_onchip_memory2_1+0xfffc9ae4>
   4ad44:	20009c1e 	bne	r4,zero,4afb8 <__adddf3+0x630>
   4ad48:	80800044 	addi	r2,r16,1
   4ad4c:	1141ffcc 	andi	r5,r2,2047
   4ad50:	01000044 	movi	r4,1
   4ad54:	2140670e 	bge	r4,r5,4aef4 <__adddf3+0x56c>
   4ad58:	0101ffc4 	movi	r4,2047
   4ad5c:	11007f26 	beq	r2,r4,4af5c <__adddf3+0x5d4>
   4ad60:	898d883a 	add	r6,r17,r6
   4ad64:	4247883a 	add	r3,r8,r9
   4ad68:	3451803a 	cmpltu	r8,r6,r17
   4ad6c:	40d1883a 	add	r8,r8,r3
   4ad70:	402297fa 	slli	r17,r8,31
   4ad74:	300cd07a 	srli	r6,r6,1
   4ad78:	4010d07a 	srli	r8,r8,1
   4ad7c:	1021883a 	mov	r16,r2
   4ad80:	89a2b03a 	or	r17,r17,r6
   4ad84:	003f1f06 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4ad88:	0081ffc4 	movi	r2,2047
   4ad8c:	80bf481e 	bne	r16,r2,4aab0 <__alt_mem_onchip_memory2_1+0xfffc9ab0>
   4ad90:	003f1c06 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4ad94:	843ff844 	addi	r16,r16,-31
   4ad98:	01000804 	movi	r4,32
   4ad9c:	1406d83a 	srl	r3,r2,r16
   4ada0:	41005026 	beq	r8,r4,4aee4 <__adddf3+0x55c>
   4ada4:	01001004 	movi	r4,64
   4ada8:	2211c83a 	sub	r8,r4,r8
   4adac:	1204983a 	sll	r2,r2,r8
   4adb0:	88a2b03a 	or	r17,r17,r2
   4adb4:	8822c03a 	cmpne	r17,r17,zero
   4adb8:	1c62b03a 	or	r17,r3,r17
   4adbc:	0011883a 	mov	r8,zero
   4adc0:	0021883a 	mov	r16,zero
   4adc4:	003f7106 	br	4ab8c <__alt_mem_onchip_memory2_1+0xfffc9b8c>
   4adc8:	193ff804 	addi	r4,r3,-32
   4adcc:	00800804 	movi	r2,32
   4add0:	4908d83a 	srl	r4,r9,r4
   4add4:	18804526 	beq	r3,r2,4aeec <__adddf3+0x564>
   4add8:	00801004 	movi	r2,64
   4addc:	10c5c83a 	sub	r2,r2,r3
   4ade0:	4886983a 	sll	r3,r9,r2
   4ade4:	198cb03a 	or	r6,r3,r6
   4ade8:	300cc03a 	cmpne	r6,r6,zero
   4adec:	218cb03a 	or	r6,r4,r6
   4adf0:	0007883a 	mov	r3,zero
   4adf4:	003f3b06 	br	4aae4 <__alt_mem_onchip_memory2_1+0xfffc9ae4>
   4adf8:	80002a26 	beq	r16,zero,4aea4 <__adddf3+0x51c>
   4adfc:	0101ffc4 	movi	r4,2047
   4ae00:	11006826 	beq	r2,r4,4afa4 <__adddf3+0x61c>
   4ae04:	00c7c83a 	sub	r3,zero,r3
   4ae08:	42002034 	orhi	r8,r8,128
   4ae0c:	01000e04 	movi	r4,56
   4ae10:	20c07c16 	blt	r4,r3,4b004 <__adddf3+0x67c>
   4ae14:	010007c4 	movi	r4,31
   4ae18:	20c0da16 	blt	r4,r3,4b184 <__adddf3+0x7fc>
   4ae1c:	01000804 	movi	r4,32
   4ae20:	20c9c83a 	sub	r4,r4,r3
   4ae24:	4114983a 	sll	r10,r8,r4
   4ae28:	88cad83a 	srl	r5,r17,r3
   4ae2c:	8908983a 	sll	r4,r17,r4
   4ae30:	40c6d83a 	srl	r3,r8,r3
   4ae34:	5162b03a 	or	r17,r10,r5
   4ae38:	2008c03a 	cmpne	r4,r4,zero
   4ae3c:	8922b03a 	or	r17,r17,r4
   4ae40:	3463c83a 	sub	r17,r6,r17
   4ae44:	48c7c83a 	sub	r3,r9,r3
   4ae48:	344d803a 	cmpltu	r6,r6,r17
   4ae4c:	1991c83a 	sub	r8,r3,r6
   4ae50:	1021883a 	mov	r16,r2
   4ae54:	3825883a 	mov	r18,r7
   4ae58:	003f2706 	br	4aaf8 <__alt_mem_onchip_memory2_1+0xfffc9af8>
   4ae5c:	24d0b03a 	or	r8,r4,r19
   4ae60:	40001b1e 	bne	r8,zero,4aed0 <__adddf3+0x548>
   4ae64:	0005883a 	mov	r2,zero
   4ae68:	0007883a 	mov	r3,zero
   4ae6c:	0021883a 	mov	r16,zero
   4ae70:	003f4d06 	br	4aba8 <__alt_mem_onchip_memory2_1+0xfffc9ba8>
   4ae74:	008007c4 	movi	r2,31
   4ae78:	11003c16 	blt	r2,r4,4af6c <__adddf3+0x5e4>
   4ae7c:	00800804 	movi	r2,32
   4ae80:	1105c83a 	sub	r2,r2,r4
   4ae84:	488e983a 	sll	r7,r9,r2
   4ae88:	310ad83a 	srl	r5,r6,r4
   4ae8c:	3084983a 	sll	r2,r6,r2
   4ae90:	4912d83a 	srl	r9,r9,r4
   4ae94:	394ab03a 	or	r5,r7,r5
   4ae98:	1004c03a 	cmpne	r2,r2,zero
   4ae9c:	288ab03a 	or	r5,r5,r2
   4aea0:	003f5306 	br	4abf0 <__alt_mem_onchip_memory2_1+0xfffc9bf0>
   4aea4:	4448b03a 	or	r4,r8,r17
   4aea8:	20003e26 	beq	r4,zero,4afa4 <__adddf3+0x61c>
   4aeac:	00c6303a 	nor	r3,zero,r3
   4aeb0:	18003a1e 	bne	r3,zero,4af9c <__adddf3+0x614>
   4aeb4:	3463c83a 	sub	r17,r6,r17
   4aeb8:	4a07c83a 	sub	r3,r9,r8
   4aebc:	344d803a 	cmpltu	r6,r6,r17
   4aec0:	1991c83a 	sub	r8,r3,r6
   4aec4:	1021883a 	mov	r16,r2
   4aec8:	3825883a 	mov	r18,r7
   4aecc:	003f0a06 	br	4aaf8 <__alt_mem_onchip_memory2_1+0xfffc9af8>
   4aed0:	2023883a 	mov	r17,r4
   4aed4:	003f0d06 	br	4ab0c <__alt_mem_onchip_memory2_1+0xfffc9b0c>
   4aed8:	0081ffc4 	movi	r2,2047
   4aedc:	80bf3f1e 	bne	r16,r2,4abdc <__alt_mem_onchip_memory2_1+0xfffc9bdc>
   4aee0:	003ec806 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4aee4:	0005883a 	mov	r2,zero
   4aee8:	003fb106 	br	4adb0 <__alt_mem_onchip_memory2_1+0xfffc9db0>
   4aeec:	0007883a 	mov	r3,zero
   4aef0:	003fbc06 	br	4ade4 <__alt_mem_onchip_memory2_1+0xfffc9de4>
   4aef4:	4444b03a 	or	r2,r8,r17
   4aef8:	8000871e 	bne	r16,zero,4b118 <__adddf3+0x790>
   4aefc:	1000ba26 	beq	r2,zero,4b1e8 <__adddf3+0x860>
   4af00:	4984b03a 	or	r2,r9,r6
   4af04:	103ebf26 	beq	r2,zero,4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4af08:	8985883a 	add	r2,r17,r6
   4af0c:	4247883a 	add	r3,r8,r9
   4af10:	1451803a 	cmpltu	r8,r2,r17
   4af14:	40d1883a 	add	r8,r8,r3
   4af18:	40c0202c 	andhi	r3,r8,128
   4af1c:	1023883a 	mov	r17,r2
   4af20:	183f1a26 	beq	r3,zero,4ab8c <__alt_mem_onchip_memory2_1+0xfffc9b8c>
   4af24:	00bfe034 	movhi	r2,65408
   4af28:	10bfffc4 	addi	r2,r2,-1
   4af2c:	2021883a 	mov	r16,r4
   4af30:	4090703a 	and	r8,r8,r2
   4af34:	003eb306 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4af38:	4444b03a 	or	r2,r8,r17
   4af3c:	8000291e 	bne	r16,zero,4afe4 <__adddf3+0x65c>
   4af40:	10004b1e 	bne	r2,zero,4b070 <__adddf3+0x6e8>
   4af44:	4990b03a 	or	r8,r9,r6
   4af48:	40008b26 	beq	r8,zero,4b178 <__adddf3+0x7f0>
   4af4c:	4811883a 	mov	r8,r9
   4af50:	3023883a 	mov	r17,r6
   4af54:	3825883a 	mov	r18,r7
   4af58:	003eaa06 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4af5c:	1021883a 	mov	r16,r2
   4af60:	0011883a 	mov	r8,zero
   4af64:	0005883a 	mov	r2,zero
   4af68:	003f0f06 	br	4aba8 <__alt_mem_onchip_memory2_1+0xfffc9ba8>
   4af6c:	217ff804 	addi	r5,r4,-32
   4af70:	00800804 	movi	r2,32
   4af74:	494ad83a 	srl	r5,r9,r5
   4af78:	20807d26 	beq	r4,r2,4b170 <__adddf3+0x7e8>
   4af7c:	00801004 	movi	r2,64
   4af80:	1109c83a 	sub	r4,r2,r4
   4af84:	4912983a 	sll	r9,r9,r4
   4af88:	498cb03a 	or	r6,r9,r6
   4af8c:	300cc03a 	cmpne	r6,r6,zero
   4af90:	298ab03a 	or	r5,r5,r6
   4af94:	0013883a 	mov	r9,zero
   4af98:	003f1506 	br	4abf0 <__alt_mem_onchip_memory2_1+0xfffc9bf0>
   4af9c:	0101ffc4 	movi	r4,2047
   4afa0:	113f9a1e 	bne	r2,r4,4ae0c <__alt_mem_onchip_memory2_1+0xfffc9e0c>
   4afa4:	4811883a 	mov	r8,r9
   4afa8:	3023883a 	mov	r17,r6
   4afac:	1021883a 	mov	r16,r2
   4afb0:	3825883a 	mov	r18,r7
   4afb4:	003e9306 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4afb8:	8000161e 	bne	r16,zero,4b014 <__adddf3+0x68c>
   4afbc:	444ab03a 	or	r5,r8,r17
   4afc0:	28005126 	beq	r5,zero,4b108 <__adddf3+0x780>
   4afc4:	0108303a 	nor	r4,zero,r4
   4afc8:	20004d1e 	bne	r4,zero,4b100 <__adddf3+0x778>
   4afcc:	89a3883a 	add	r17,r17,r6
   4afd0:	4253883a 	add	r9,r8,r9
   4afd4:	898d803a 	cmpltu	r6,r17,r6
   4afd8:	3251883a 	add	r8,r6,r9
   4afdc:	1021883a 	mov	r16,r2
   4afe0:	003f0806 	br	4ac04 <__alt_mem_onchip_memory2_1+0xfffc9c04>
   4afe4:	1000301e 	bne	r2,zero,4b0a8 <__adddf3+0x720>
   4afe8:	4984b03a 	or	r2,r9,r6
   4afec:	10007126 	beq	r2,zero,4b1b4 <__adddf3+0x82c>
   4aff0:	4811883a 	mov	r8,r9
   4aff4:	3023883a 	mov	r17,r6
   4aff8:	3825883a 	mov	r18,r7
   4affc:	0401ffc4 	movi	r16,2047
   4b000:	003e8006 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4b004:	4462b03a 	or	r17,r8,r17
   4b008:	8822c03a 	cmpne	r17,r17,zero
   4b00c:	0007883a 	mov	r3,zero
   4b010:	003f8b06 	br	4ae40 <__alt_mem_onchip_memory2_1+0xfffc9e40>
   4b014:	0141ffc4 	movi	r5,2047
   4b018:	11403b26 	beq	r2,r5,4b108 <__adddf3+0x780>
   4b01c:	0109c83a 	sub	r4,zero,r4
   4b020:	42002034 	orhi	r8,r8,128
   4b024:	01400e04 	movi	r5,56
   4b028:	29006716 	blt	r5,r4,4b1c8 <__adddf3+0x840>
   4b02c:	014007c4 	movi	r5,31
   4b030:	29007016 	blt	r5,r4,4b1f4 <__adddf3+0x86c>
   4b034:	01400804 	movi	r5,32
   4b038:	290bc83a 	sub	r5,r5,r4
   4b03c:	4154983a 	sll	r10,r8,r5
   4b040:	890ed83a 	srl	r7,r17,r4
   4b044:	894a983a 	sll	r5,r17,r5
   4b048:	4108d83a 	srl	r4,r8,r4
   4b04c:	51e2b03a 	or	r17,r10,r7
   4b050:	280ac03a 	cmpne	r5,r5,zero
   4b054:	8962b03a 	or	r17,r17,r5
   4b058:	89a3883a 	add	r17,r17,r6
   4b05c:	2253883a 	add	r9,r4,r9
   4b060:	898d803a 	cmpltu	r6,r17,r6
   4b064:	3251883a 	add	r8,r6,r9
   4b068:	1021883a 	mov	r16,r2
   4b06c:	003ee506 	br	4ac04 <__alt_mem_onchip_memory2_1+0xfffc9c04>
   4b070:	4984b03a 	or	r2,r9,r6
   4b074:	103e6326 	beq	r2,zero,4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4b078:	8987c83a 	sub	r3,r17,r6
   4b07c:	88c9803a 	cmpltu	r4,r17,r3
   4b080:	4245c83a 	sub	r2,r8,r9
   4b084:	1105c83a 	sub	r2,r2,r4
   4b088:	1100202c 	andhi	r4,r2,128
   4b08c:	203ebb26 	beq	r4,zero,4ab7c <__alt_mem_onchip_memory2_1+0xfffc9b7c>
   4b090:	3463c83a 	sub	r17,r6,r17
   4b094:	4a07c83a 	sub	r3,r9,r8
   4b098:	344d803a 	cmpltu	r6,r6,r17
   4b09c:	1991c83a 	sub	r8,r3,r6
   4b0a0:	3825883a 	mov	r18,r7
   4b0a4:	003e5706 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4b0a8:	4984b03a 	or	r2,r9,r6
   4b0ac:	10002e26 	beq	r2,zero,4b168 <__adddf3+0x7e0>
   4b0b0:	4004d0fa 	srli	r2,r8,3
   4b0b4:	8822d0fa 	srli	r17,r17,3
   4b0b8:	4010977a 	slli	r8,r8,29
   4b0bc:	10c0022c 	andhi	r3,r2,8
   4b0c0:	4462b03a 	or	r17,r8,r17
   4b0c4:	18000826 	beq	r3,zero,4b0e8 <__adddf3+0x760>
   4b0c8:	4808d0fa 	srli	r4,r9,3
   4b0cc:	20c0022c 	andhi	r3,r4,8
   4b0d0:	1800051e 	bne	r3,zero,4b0e8 <__adddf3+0x760>
   4b0d4:	300cd0fa 	srli	r6,r6,3
   4b0d8:	4806977a 	slli	r3,r9,29
   4b0dc:	2005883a 	mov	r2,r4
   4b0e0:	3825883a 	mov	r18,r7
   4b0e4:	19a2b03a 	or	r17,r3,r6
   4b0e8:	8810d77a 	srli	r8,r17,29
   4b0ec:	100490fa 	slli	r2,r2,3
   4b0f0:	882290fa 	slli	r17,r17,3
   4b0f4:	0401ffc4 	movi	r16,2047
   4b0f8:	4090b03a 	or	r8,r8,r2
   4b0fc:	003e4106 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4b100:	0141ffc4 	movi	r5,2047
   4b104:	117fc71e 	bne	r2,r5,4b024 <__alt_mem_onchip_memory2_1+0xfffca024>
   4b108:	4811883a 	mov	r8,r9
   4b10c:	3023883a 	mov	r17,r6
   4b110:	1021883a 	mov	r16,r2
   4b114:	003e3b06 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4b118:	10002f26 	beq	r2,zero,4b1d8 <__adddf3+0x850>
   4b11c:	4984b03a 	or	r2,r9,r6
   4b120:	10001126 	beq	r2,zero,4b168 <__adddf3+0x7e0>
   4b124:	4004d0fa 	srli	r2,r8,3
   4b128:	8822d0fa 	srli	r17,r17,3
   4b12c:	4010977a 	slli	r8,r8,29
   4b130:	10c0022c 	andhi	r3,r2,8
   4b134:	4462b03a 	or	r17,r8,r17
   4b138:	183feb26 	beq	r3,zero,4b0e8 <__alt_mem_onchip_memory2_1+0xfffca0e8>
   4b13c:	4808d0fa 	srli	r4,r9,3
   4b140:	20c0022c 	andhi	r3,r4,8
   4b144:	183fe81e 	bne	r3,zero,4b0e8 <__alt_mem_onchip_memory2_1+0xfffca0e8>
   4b148:	300cd0fa 	srli	r6,r6,3
   4b14c:	4806977a 	slli	r3,r9,29
   4b150:	2005883a 	mov	r2,r4
   4b154:	19a2b03a 	or	r17,r3,r6
   4b158:	003fe306 	br	4b0e8 <__alt_mem_onchip_memory2_1+0xfffca0e8>
   4b15c:	0011883a 	mov	r8,zero
   4b160:	0005883a 	mov	r2,zero
   4b164:	003e3f06 	br	4aa64 <__alt_mem_onchip_memory2_1+0xfffc9a64>
   4b168:	0401ffc4 	movi	r16,2047
   4b16c:	003e2506 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4b170:	0013883a 	mov	r9,zero
   4b174:	003f8406 	br	4af88 <__alt_mem_onchip_memory2_1+0xfffc9f88>
   4b178:	0005883a 	mov	r2,zero
   4b17c:	0007883a 	mov	r3,zero
   4b180:	003e8906 	br	4aba8 <__alt_mem_onchip_memory2_1+0xfffc9ba8>
   4b184:	197ff804 	addi	r5,r3,-32
   4b188:	01000804 	movi	r4,32
   4b18c:	414ad83a 	srl	r5,r8,r5
   4b190:	19002426 	beq	r3,r4,4b224 <__adddf3+0x89c>
   4b194:	01001004 	movi	r4,64
   4b198:	20c7c83a 	sub	r3,r4,r3
   4b19c:	40c6983a 	sll	r3,r8,r3
   4b1a0:	1c46b03a 	or	r3,r3,r17
   4b1a4:	1806c03a 	cmpne	r3,r3,zero
   4b1a8:	28e2b03a 	or	r17,r5,r3
   4b1ac:	0007883a 	mov	r3,zero
   4b1b0:	003f2306 	br	4ae40 <__alt_mem_onchip_memory2_1+0xfffc9e40>
   4b1b4:	0007883a 	mov	r3,zero
   4b1b8:	5811883a 	mov	r8,r11
   4b1bc:	00bfffc4 	movi	r2,-1
   4b1c0:	0401ffc4 	movi	r16,2047
   4b1c4:	003e7806 	br	4aba8 <__alt_mem_onchip_memory2_1+0xfffc9ba8>
   4b1c8:	4462b03a 	or	r17,r8,r17
   4b1cc:	8822c03a 	cmpne	r17,r17,zero
   4b1d0:	0009883a 	mov	r4,zero
   4b1d4:	003fa006 	br	4b058 <__alt_mem_onchip_memory2_1+0xfffca058>
   4b1d8:	4811883a 	mov	r8,r9
   4b1dc:	3023883a 	mov	r17,r6
   4b1e0:	0401ffc4 	movi	r16,2047
   4b1e4:	003e0706 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4b1e8:	4811883a 	mov	r8,r9
   4b1ec:	3023883a 	mov	r17,r6
   4b1f0:	003e0406 	br	4aa04 <__alt_mem_onchip_memory2_1+0xfffc9a04>
   4b1f4:	21fff804 	addi	r7,r4,-32
   4b1f8:	01400804 	movi	r5,32
   4b1fc:	41ced83a 	srl	r7,r8,r7
   4b200:	21400a26 	beq	r4,r5,4b22c <__adddf3+0x8a4>
   4b204:	01401004 	movi	r5,64
   4b208:	2909c83a 	sub	r4,r5,r4
   4b20c:	4108983a 	sll	r4,r8,r4
   4b210:	2448b03a 	or	r4,r4,r17
   4b214:	2008c03a 	cmpne	r4,r4,zero
   4b218:	3922b03a 	or	r17,r7,r4
   4b21c:	0009883a 	mov	r4,zero
   4b220:	003f8d06 	br	4b058 <__alt_mem_onchip_memory2_1+0xfffca058>
   4b224:	0007883a 	mov	r3,zero
   4b228:	003fdd06 	br	4b1a0 <__alt_mem_onchip_memory2_1+0xfffca1a0>
   4b22c:	0009883a 	mov	r4,zero
   4b230:	003ff706 	br	4b210 <__alt_mem_onchip_memory2_1+0xfffca210>

0004b234 <__divdf3>:
   4b234:	defff204 	addi	sp,sp,-56
   4b238:	dd400915 	stw	r21,36(sp)
   4b23c:	282ad53a 	srli	r21,r5,20
   4b240:	dd000815 	stw	r20,32(sp)
   4b244:	2828d7fa 	srli	r20,r5,31
   4b248:	dc000415 	stw	r16,16(sp)
   4b24c:	04000434 	movhi	r16,16
   4b250:	df000c15 	stw	fp,48(sp)
   4b254:	843fffc4 	addi	r16,r16,-1
   4b258:	dfc00d15 	stw	ra,52(sp)
   4b25c:	ddc00b15 	stw	r23,44(sp)
   4b260:	dd800a15 	stw	r22,40(sp)
   4b264:	dcc00715 	stw	r19,28(sp)
   4b268:	dc800615 	stw	r18,24(sp)
   4b26c:	dc400515 	stw	r17,20(sp)
   4b270:	ad41ffcc 	andi	r21,r21,2047
   4b274:	2c20703a 	and	r16,r5,r16
   4b278:	a7003fcc 	andi	fp,r20,255
   4b27c:	a8006126 	beq	r21,zero,4b404 <__divdf3+0x1d0>
   4b280:	0081ffc4 	movi	r2,2047
   4b284:	2025883a 	mov	r18,r4
   4b288:	a8803726 	beq	r21,r2,4b368 <__divdf3+0x134>
   4b28c:	80800434 	orhi	r2,r16,16
   4b290:	100490fa 	slli	r2,r2,3
   4b294:	2020d77a 	srli	r16,r4,29
   4b298:	202490fa 	slli	r18,r4,3
   4b29c:	ad7f0044 	addi	r21,r21,-1023
   4b2a0:	80a0b03a 	or	r16,r16,r2
   4b2a4:	0027883a 	mov	r19,zero
   4b2a8:	0013883a 	mov	r9,zero
   4b2ac:	3804d53a 	srli	r2,r7,20
   4b2b0:	382cd7fa 	srli	r22,r7,31
   4b2b4:	04400434 	movhi	r17,16
   4b2b8:	8c7fffc4 	addi	r17,r17,-1
   4b2bc:	1081ffcc 	andi	r2,r2,2047
   4b2c0:	3011883a 	mov	r8,r6
   4b2c4:	3c62703a 	and	r17,r7,r17
   4b2c8:	b5c03fcc 	andi	r23,r22,255
   4b2cc:	10006c26 	beq	r2,zero,4b480 <__divdf3+0x24c>
   4b2d0:	00c1ffc4 	movi	r3,2047
   4b2d4:	10c06426 	beq	r2,r3,4b468 <__divdf3+0x234>
   4b2d8:	88c00434 	orhi	r3,r17,16
   4b2dc:	180690fa 	slli	r3,r3,3
   4b2e0:	3022d77a 	srli	r17,r6,29
   4b2e4:	301090fa 	slli	r8,r6,3
   4b2e8:	10bf0044 	addi	r2,r2,-1023
   4b2ec:	88e2b03a 	or	r17,r17,r3
   4b2f0:	000f883a 	mov	r7,zero
   4b2f4:	a58cf03a 	xor	r6,r20,r22
   4b2f8:	3cc8b03a 	or	r4,r7,r19
   4b2fc:	a8abc83a 	sub	r21,r21,r2
   4b300:	008003c4 	movi	r2,15
   4b304:	3007883a 	mov	r3,r6
   4b308:	34c03fcc 	andi	r19,r6,255
   4b30c:	11009036 	bltu	r2,r4,4b550 <__divdf3+0x31c>
   4b310:	200890ba 	slli	r4,r4,2
   4b314:	00800174 	movhi	r2,5
   4b318:	10acca04 	addi	r2,r2,-19672
   4b31c:	2089883a 	add	r4,r4,r2
   4b320:	20800017 	ldw	r2,0(r4)
   4b324:	1000683a 	jmp	r2
   4b328:	0004b550 	cmplti	zero,zero,4821
   4b32c:	0004b3a0 	cmpeqi	zero,zero,4814
   4b330:	0004b540 	call	4b54 <__reset-0x3b4ac>
   4b334:	0004b394 	movui	zero,4814
   4b338:	0004b540 	call	4b54 <__reset-0x3b4ac>
   4b33c:	0004b514 	movui	zero,4820
   4b340:	0004b540 	call	4b54 <__reset-0x3b4ac>
   4b344:	0004b394 	movui	zero,4814
   4b348:	0004b3a0 	cmpeqi	zero,zero,4814
   4b34c:	0004b3a0 	cmpeqi	zero,zero,4814
   4b350:	0004b514 	movui	zero,4820
   4b354:	0004b394 	movui	zero,4814
   4b358:	0004b384 	movi	zero,4814
   4b35c:	0004b384 	movi	zero,4814
   4b360:	0004b384 	movi	zero,4814
   4b364:	0004b834 	movhi	zero,4832
   4b368:	2404b03a 	or	r2,r4,r16
   4b36c:	1000661e 	bne	r2,zero,4b508 <__divdf3+0x2d4>
   4b370:	04c00204 	movi	r19,8
   4b374:	0021883a 	mov	r16,zero
   4b378:	0025883a 	mov	r18,zero
   4b37c:	02400084 	movi	r9,2
   4b380:	003fca06 	br	4b2ac <__alt_mem_onchip_memory2_1+0xfffca2ac>
   4b384:	8023883a 	mov	r17,r16
   4b388:	9011883a 	mov	r8,r18
   4b38c:	e02f883a 	mov	r23,fp
   4b390:	480f883a 	mov	r7,r9
   4b394:	00800084 	movi	r2,2
   4b398:	3881311e 	bne	r7,r2,4b860 <__divdf3+0x62c>
   4b39c:	b827883a 	mov	r19,r23
   4b3a0:	98c0004c 	andi	r3,r19,1
   4b3a4:	0081ffc4 	movi	r2,2047
   4b3a8:	000b883a 	mov	r5,zero
   4b3ac:	0025883a 	mov	r18,zero
   4b3b0:	1004953a 	slli	r2,r2,20
   4b3b4:	18c03fcc 	andi	r3,r3,255
   4b3b8:	04400434 	movhi	r17,16
   4b3bc:	8c7fffc4 	addi	r17,r17,-1
   4b3c0:	180697fa 	slli	r3,r3,31
   4b3c4:	2c4a703a 	and	r5,r5,r17
   4b3c8:	288ab03a 	or	r5,r5,r2
   4b3cc:	28c6b03a 	or	r3,r5,r3
   4b3d0:	9005883a 	mov	r2,r18
   4b3d4:	dfc00d17 	ldw	ra,52(sp)
   4b3d8:	df000c17 	ldw	fp,48(sp)
   4b3dc:	ddc00b17 	ldw	r23,44(sp)
   4b3e0:	dd800a17 	ldw	r22,40(sp)
   4b3e4:	dd400917 	ldw	r21,36(sp)
   4b3e8:	dd000817 	ldw	r20,32(sp)
   4b3ec:	dcc00717 	ldw	r19,28(sp)
   4b3f0:	dc800617 	ldw	r18,24(sp)
   4b3f4:	dc400517 	ldw	r17,20(sp)
   4b3f8:	dc000417 	ldw	r16,16(sp)
   4b3fc:	dec00e04 	addi	sp,sp,56
   4b400:	f800283a 	ret
   4b404:	2404b03a 	or	r2,r4,r16
   4b408:	2027883a 	mov	r19,r4
   4b40c:	10003926 	beq	r2,zero,4b4f4 <__divdf3+0x2c0>
   4b410:	80012e26 	beq	r16,zero,4b8cc <__divdf3+0x698>
   4b414:	8009883a 	mov	r4,r16
   4b418:	d9800315 	stw	r6,12(sp)
   4b41c:	d9c00215 	stw	r7,8(sp)
   4b420:	004cf8c0 	call	4cf8c <__clzsi2>
   4b424:	d9800317 	ldw	r6,12(sp)
   4b428:	d9c00217 	ldw	r7,8(sp)
   4b42c:	113ffd44 	addi	r4,r2,-11
   4b430:	00c00704 	movi	r3,28
   4b434:	19012116 	blt	r3,r4,4b8bc <__divdf3+0x688>
   4b438:	00c00744 	movi	r3,29
   4b43c:	147ffe04 	addi	r17,r2,-8
   4b440:	1907c83a 	sub	r3,r3,r4
   4b444:	8460983a 	sll	r16,r16,r17
   4b448:	98c6d83a 	srl	r3,r19,r3
   4b44c:	9c64983a 	sll	r18,r19,r17
   4b450:	1c20b03a 	or	r16,r3,r16
   4b454:	1080fcc4 	addi	r2,r2,1011
   4b458:	00abc83a 	sub	r21,zero,r2
   4b45c:	0027883a 	mov	r19,zero
   4b460:	0013883a 	mov	r9,zero
   4b464:	003f9106 	br	4b2ac <__alt_mem_onchip_memory2_1+0xfffca2ac>
   4b468:	3446b03a 	or	r3,r6,r17
   4b46c:	18001f1e 	bne	r3,zero,4b4ec <__divdf3+0x2b8>
   4b470:	0023883a 	mov	r17,zero
   4b474:	0011883a 	mov	r8,zero
   4b478:	01c00084 	movi	r7,2
   4b47c:	003f9d06 	br	4b2f4 <__alt_mem_onchip_memory2_1+0xfffca2f4>
   4b480:	3446b03a 	or	r3,r6,r17
   4b484:	18001526 	beq	r3,zero,4b4dc <__divdf3+0x2a8>
   4b488:	88011b26 	beq	r17,zero,4b8f8 <__divdf3+0x6c4>
   4b48c:	8809883a 	mov	r4,r17
   4b490:	d9800315 	stw	r6,12(sp)
   4b494:	da400115 	stw	r9,4(sp)
   4b498:	004cf8c0 	call	4cf8c <__clzsi2>
   4b49c:	d9800317 	ldw	r6,12(sp)
   4b4a0:	da400117 	ldw	r9,4(sp)
   4b4a4:	113ffd44 	addi	r4,r2,-11
   4b4a8:	00c00704 	movi	r3,28
   4b4ac:	19010e16 	blt	r3,r4,4b8e8 <__divdf3+0x6b4>
   4b4b0:	00c00744 	movi	r3,29
   4b4b4:	123ffe04 	addi	r8,r2,-8
   4b4b8:	1907c83a 	sub	r3,r3,r4
   4b4bc:	8a22983a 	sll	r17,r17,r8
   4b4c0:	30c6d83a 	srl	r3,r6,r3
   4b4c4:	3210983a 	sll	r8,r6,r8
   4b4c8:	1c62b03a 	or	r17,r3,r17
   4b4cc:	1080fcc4 	addi	r2,r2,1011
   4b4d0:	0085c83a 	sub	r2,zero,r2
   4b4d4:	000f883a 	mov	r7,zero
   4b4d8:	003f8606 	br	4b2f4 <__alt_mem_onchip_memory2_1+0xfffca2f4>
   4b4dc:	0023883a 	mov	r17,zero
   4b4e0:	0011883a 	mov	r8,zero
   4b4e4:	01c00044 	movi	r7,1
   4b4e8:	003f8206 	br	4b2f4 <__alt_mem_onchip_memory2_1+0xfffca2f4>
   4b4ec:	01c000c4 	movi	r7,3
   4b4f0:	003f8006 	br	4b2f4 <__alt_mem_onchip_memory2_1+0xfffca2f4>
   4b4f4:	04c00104 	movi	r19,4
   4b4f8:	0021883a 	mov	r16,zero
   4b4fc:	0025883a 	mov	r18,zero
   4b500:	02400044 	movi	r9,1
   4b504:	003f6906 	br	4b2ac <__alt_mem_onchip_memory2_1+0xfffca2ac>
   4b508:	04c00304 	movi	r19,12
   4b50c:	024000c4 	movi	r9,3
   4b510:	003f6606 	br	4b2ac <__alt_mem_onchip_memory2_1+0xfffca2ac>
   4b514:	01400434 	movhi	r5,16
   4b518:	0007883a 	mov	r3,zero
   4b51c:	297fffc4 	addi	r5,r5,-1
   4b520:	04bfffc4 	movi	r18,-1
   4b524:	0081ffc4 	movi	r2,2047
   4b528:	003fa106 	br	4b3b0 <__alt_mem_onchip_memory2_1+0xfffca3b0>
   4b52c:	00c00044 	movi	r3,1
   4b530:	1887c83a 	sub	r3,r3,r2
   4b534:	01000e04 	movi	r4,56
   4b538:	20c1210e 	bge	r4,r3,4b9c0 <__divdf3+0x78c>
   4b53c:	98c0004c 	andi	r3,r19,1
   4b540:	0005883a 	mov	r2,zero
   4b544:	000b883a 	mov	r5,zero
   4b548:	0025883a 	mov	r18,zero
   4b54c:	003f9806 	br	4b3b0 <__alt_mem_onchip_memory2_1+0xfffca3b0>
   4b550:	8c00fd36 	bltu	r17,r16,4b948 <__divdf3+0x714>
   4b554:	8440fb26 	beq	r16,r17,4b944 <__divdf3+0x710>
   4b558:	8007883a 	mov	r3,r16
   4b55c:	ad7fffc4 	addi	r21,r21,-1
   4b560:	0021883a 	mov	r16,zero
   4b564:	4004d63a 	srli	r2,r8,24
   4b568:	8822923a 	slli	r17,r17,8
   4b56c:	1809883a 	mov	r4,r3
   4b570:	402c923a 	slli	r22,r8,8
   4b574:	88b8b03a 	or	fp,r17,r2
   4b578:	e028d43a 	srli	r20,fp,16
   4b57c:	d8c00015 	stw	r3,0(sp)
   4b580:	e5ffffcc 	andi	r23,fp,65535
   4b584:	a00b883a 	mov	r5,r20
   4b588:	004a8cc0 	call	4a8cc <__udivsi3>
   4b58c:	d8c00017 	ldw	r3,0(sp)
   4b590:	a00b883a 	mov	r5,r20
   4b594:	d8800315 	stw	r2,12(sp)
   4b598:	1809883a 	mov	r4,r3
   4b59c:	004a9300 	call	4a930 <__umodsi3>
   4b5a0:	d9800317 	ldw	r6,12(sp)
   4b5a4:	1006943a 	slli	r3,r2,16
   4b5a8:	9004d43a 	srli	r2,r18,16
   4b5ac:	b9a3383a 	mul	r17,r23,r6
   4b5b0:	10c4b03a 	or	r2,r2,r3
   4b5b4:	1440062e 	bgeu	r2,r17,4b5d0 <__divdf3+0x39c>
   4b5b8:	1705883a 	add	r2,r2,fp
   4b5bc:	30ffffc4 	addi	r3,r6,-1
   4b5c0:	1700ee36 	bltu	r2,fp,4b97c <__divdf3+0x748>
   4b5c4:	1440ed2e 	bgeu	r2,r17,4b97c <__divdf3+0x748>
   4b5c8:	31bfff84 	addi	r6,r6,-2
   4b5cc:	1705883a 	add	r2,r2,fp
   4b5d0:	1463c83a 	sub	r17,r2,r17
   4b5d4:	a00b883a 	mov	r5,r20
   4b5d8:	8809883a 	mov	r4,r17
   4b5dc:	d9800315 	stw	r6,12(sp)
   4b5e0:	004a8cc0 	call	4a8cc <__udivsi3>
   4b5e4:	a00b883a 	mov	r5,r20
   4b5e8:	8809883a 	mov	r4,r17
   4b5ec:	d8800215 	stw	r2,8(sp)
   4b5f0:	004a9300 	call	4a930 <__umodsi3>
   4b5f4:	d9c00217 	ldw	r7,8(sp)
   4b5f8:	1004943a 	slli	r2,r2,16
   4b5fc:	94bfffcc 	andi	r18,r18,65535
   4b600:	b9d1383a 	mul	r8,r23,r7
   4b604:	90a4b03a 	or	r18,r18,r2
   4b608:	d9800317 	ldw	r6,12(sp)
   4b60c:	9200062e 	bgeu	r18,r8,4b628 <__divdf3+0x3f4>
   4b610:	9725883a 	add	r18,r18,fp
   4b614:	38bfffc4 	addi	r2,r7,-1
   4b618:	9700d636 	bltu	r18,fp,4b974 <__divdf3+0x740>
   4b61c:	9200d52e 	bgeu	r18,r8,4b974 <__divdf3+0x740>
   4b620:	39ffff84 	addi	r7,r7,-2
   4b624:	9725883a 	add	r18,r18,fp
   4b628:	3004943a 	slli	r2,r6,16
   4b62c:	b012d43a 	srli	r9,r22,16
   4b630:	b1bfffcc 	andi	r6,r22,65535
   4b634:	11e2b03a 	or	r17,r2,r7
   4b638:	8806d43a 	srli	r3,r17,16
   4b63c:	893fffcc 	andi	r4,r17,65535
   4b640:	218b383a 	mul	r5,r4,r6
   4b644:	30c5383a 	mul	r2,r6,r3
   4b648:	2249383a 	mul	r4,r4,r9
   4b64c:	280ed43a 	srli	r7,r5,16
   4b650:	9225c83a 	sub	r18,r18,r8
   4b654:	2089883a 	add	r4,r4,r2
   4b658:	3909883a 	add	r4,r7,r4
   4b65c:	1a47383a 	mul	r3,r3,r9
   4b660:	2080022e 	bgeu	r4,r2,4b66c <__divdf3+0x438>
   4b664:	00800074 	movhi	r2,1
   4b668:	1887883a 	add	r3,r3,r2
   4b66c:	2004d43a 	srli	r2,r4,16
   4b670:	2008943a 	slli	r4,r4,16
   4b674:	297fffcc 	andi	r5,r5,65535
   4b678:	10c7883a 	add	r3,r2,r3
   4b67c:	2149883a 	add	r4,r4,r5
   4b680:	90c0a536 	bltu	r18,r3,4b918 <__divdf3+0x6e4>
   4b684:	90c0bf26 	beq	r18,r3,4b984 <__divdf3+0x750>
   4b688:	90c7c83a 	sub	r3,r18,r3
   4b68c:	810fc83a 	sub	r7,r16,r4
   4b690:	81e5803a 	cmpltu	r18,r16,r7
   4b694:	1ca5c83a 	sub	r18,r3,r18
   4b698:	e480c126 	beq	fp,r18,4b9a0 <__divdf3+0x76c>
   4b69c:	a00b883a 	mov	r5,r20
   4b6a0:	9009883a 	mov	r4,r18
   4b6a4:	d9800315 	stw	r6,12(sp)
   4b6a8:	d9c00215 	stw	r7,8(sp)
   4b6ac:	da400115 	stw	r9,4(sp)
   4b6b0:	004a8cc0 	call	4a8cc <__udivsi3>
   4b6b4:	a00b883a 	mov	r5,r20
   4b6b8:	9009883a 	mov	r4,r18
   4b6bc:	d8800015 	stw	r2,0(sp)
   4b6c0:	004a9300 	call	4a930 <__umodsi3>
   4b6c4:	d9c00217 	ldw	r7,8(sp)
   4b6c8:	da000017 	ldw	r8,0(sp)
   4b6cc:	1006943a 	slli	r3,r2,16
   4b6d0:	3804d43a 	srli	r2,r7,16
   4b6d4:	ba21383a 	mul	r16,r23,r8
   4b6d8:	d9800317 	ldw	r6,12(sp)
   4b6dc:	10c4b03a 	or	r2,r2,r3
   4b6e0:	da400117 	ldw	r9,4(sp)
   4b6e4:	1400062e 	bgeu	r2,r16,4b700 <__divdf3+0x4cc>
   4b6e8:	1705883a 	add	r2,r2,fp
   4b6ec:	40ffffc4 	addi	r3,r8,-1
   4b6f0:	1700ad36 	bltu	r2,fp,4b9a8 <__divdf3+0x774>
   4b6f4:	1400ac2e 	bgeu	r2,r16,4b9a8 <__divdf3+0x774>
   4b6f8:	423fff84 	addi	r8,r8,-2
   4b6fc:	1705883a 	add	r2,r2,fp
   4b700:	1421c83a 	sub	r16,r2,r16
   4b704:	a00b883a 	mov	r5,r20
   4b708:	8009883a 	mov	r4,r16
   4b70c:	d9800315 	stw	r6,12(sp)
   4b710:	d9c00215 	stw	r7,8(sp)
   4b714:	da000015 	stw	r8,0(sp)
   4b718:	da400115 	stw	r9,4(sp)
   4b71c:	004a8cc0 	call	4a8cc <__udivsi3>
   4b720:	8009883a 	mov	r4,r16
   4b724:	a00b883a 	mov	r5,r20
   4b728:	1025883a 	mov	r18,r2
   4b72c:	004a9300 	call	4a930 <__umodsi3>
   4b730:	d9c00217 	ldw	r7,8(sp)
   4b734:	1004943a 	slli	r2,r2,16
   4b738:	bcaf383a 	mul	r23,r23,r18
   4b73c:	393fffcc 	andi	r4,r7,65535
   4b740:	2088b03a 	or	r4,r4,r2
   4b744:	d9800317 	ldw	r6,12(sp)
   4b748:	da000017 	ldw	r8,0(sp)
   4b74c:	da400117 	ldw	r9,4(sp)
   4b750:	25c0062e 	bgeu	r4,r23,4b76c <__divdf3+0x538>
   4b754:	2709883a 	add	r4,r4,fp
   4b758:	90bfffc4 	addi	r2,r18,-1
   4b75c:	27009436 	bltu	r4,fp,4b9b0 <__divdf3+0x77c>
   4b760:	25c0932e 	bgeu	r4,r23,4b9b0 <__divdf3+0x77c>
   4b764:	94bfff84 	addi	r18,r18,-2
   4b768:	2709883a 	add	r4,r4,fp
   4b76c:	4004943a 	slli	r2,r8,16
   4b770:	25efc83a 	sub	r23,r4,r23
   4b774:	1490b03a 	or	r8,r2,r18
   4b778:	4008d43a 	srli	r4,r8,16
   4b77c:	40ffffcc 	andi	r3,r8,65535
   4b780:	30c5383a 	mul	r2,r6,r3
   4b784:	1a47383a 	mul	r3,r3,r9
   4b788:	310d383a 	mul	r6,r6,r4
   4b78c:	100ad43a 	srli	r5,r2,16
   4b790:	4913383a 	mul	r9,r9,r4
   4b794:	1987883a 	add	r3,r3,r6
   4b798:	28c7883a 	add	r3,r5,r3
   4b79c:	1980022e 	bgeu	r3,r6,4b7a8 <__divdf3+0x574>
   4b7a0:	01000074 	movhi	r4,1
   4b7a4:	4913883a 	add	r9,r9,r4
   4b7a8:	1808d43a 	srli	r4,r3,16
   4b7ac:	1806943a 	slli	r3,r3,16
   4b7b0:	10bfffcc 	andi	r2,r2,65535
   4b7b4:	2253883a 	add	r9,r4,r9
   4b7b8:	1887883a 	add	r3,r3,r2
   4b7bc:	ba403836 	bltu	r23,r9,4b8a0 <__divdf3+0x66c>
   4b7c0:	ba403626 	beq	r23,r9,4b89c <__divdf3+0x668>
   4b7c4:	42000054 	ori	r8,r8,1
   4b7c8:	a880ffc4 	addi	r2,r21,1023
   4b7cc:	00bf570e 	bge	zero,r2,4b52c <__alt_mem_onchip_memory2_1+0xfffca52c>
   4b7d0:	40c001cc 	andi	r3,r8,7
   4b7d4:	18000726 	beq	r3,zero,4b7f4 <__divdf3+0x5c0>
   4b7d8:	40c003cc 	andi	r3,r8,15
   4b7dc:	01000104 	movi	r4,4
   4b7e0:	19000426 	beq	r3,r4,4b7f4 <__divdf3+0x5c0>
   4b7e4:	4107883a 	add	r3,r8,r4
   4b7e8:	1a11803a 	cmpltu	r8,r3,r8
   4b7ec:	8a23883a 	add	r17,r17,r8
   4b7f0:	1811883a 	mov	r8,r3
   4b7f4:	88c0402c 	andhi	r3,r17,256
   4b7f8:	18000426 	beq	r3,zero,4b80c <__divdf3+0x5d8>
   4b7fc:	00ffc034 	movhi	r3,65280
   4b800:	18ffffc4 	addi	r3,r3,-1
   4b804:	a8810004 	addi	r2,r21,1024
   4b808:	88e2703a 	and	r17,r17,r3
   4b80c:	00c1ff84 	movi	r3,2046
   4b810:	18bee316 	blt	r3,r2,4b3a0 <__alt_mem_onchip_memory2_1+0xfffca3a0>
   4b814:	8824977a 	slli	r18,r17,29
   4b818:	4010d0fa 	srli	r8,r8,3
   4b81c:	8822927a 	slli	r17,r17,9
   4b820:	1081ffcc 	andi	r2,r2,2047
   4b824:	9224b03a 	or	r18,r18,r8
   4b828:	880ad33a 	srli	r5,r17,12
   4b82c:	98c0004c 	andi	r3,r19,1
   4b830:	003edf06 	br	4b3b0 <__alt_mem_onchip_memory2_1+0xfffca3b0>
   4b834:	8080022c 	andhi	r2,r16,8
   4b838:	10001226 	beq	r2,zero,4b884 <__divdf3+0x650>
   4b83c:	8880022c 	andhi	r2,r17,8
   4b840:	1000101e 	bne	r2,zero,4b884 <__divdf3+0x650>
   4b844:	00800434 	movhi	r2,16
   4b848:	89400234 	orhi	r5,r17,8
   4b84c:	10bfffc4 	addi	r2,r2,-1
   4b850:	b007883a 	mov	r3,r22
   4b854:	288a703a 	and	r5,r5,r2
   4b858:	4025883a 	mov	r18,r8
   4b85c:	003f3106 	br	4b524 <__alt_mem_onchip_memory2_1+0xfffca524>
   4b860:	008000c4 	movi	r2,3
   4b864:	3880a626 	beq	r7,r2,4bb00 <__divdf3+0x8cc>
   4b868:	00800044 	movi	r2,1
   4b86c:	3880521e 	bne	r7,r2,4b9b8 <__divdf3+0x784>
   4b870:	b807883a 	mov	r3,r23
   4b874:	0005883a 	mov	r2,zero
   4b878:	000b883a 	mov	r5,zero
   4b87c:	0025883a 	mov	r18,zero
   4b880:	003ecb06 	br	4b3b0 <__alt_mem_onchip_memory2_1+0xfffca3b0>
   4b884:	00800434 	movhi	r2,16
   4b888:	81400234 	orhi	r5,r16,8
   4b88c:	10bfffc4 	addi	r2,r2,-1
   4b890:	a007883a 	mov	r3,r20
   4b894:	288a703a 	and	r5,r5,r2
   4b898:	003f2206 	br	4b524 <__alt_mem_onchip_memory2_1+0xfffca524>
   4b89c:	183fca26 	beq	r3,zero,4b7c8 <__alt_mem_onchip_memory2_1+0xfffca7c8>
   4b8a0:	e5ef883a 	add	r23,fp,r23
   4b8a4:	40bfffc4 	addi	r2,r8,-1
   4b8a8:	bf00392e 	bgeu	r23,fp,4b990 <__divdf3+0x75c>
   4b8ac:	1011883a 	mov	r8,r2
   4b8b0:	ba7fc41e 	bne	r23,r9,4b7c4 <__alt_mem_onchip_memory2_1+0xfffca7c4>
   4b8b4:	b0ffc31e 	bne	r22,r3,4b7c4 <__alt_mem_onchip_memory2_1+0xfffca7c4>
   4b8b8:	003fc306 	br	4b7c8 <__alt_mem_onchip_memory2_1+0xfffca7c8>
   4b8bc:	143ff604 	addi	r16,r2,-40
   4b8c0:	9c20983a 	sll	r16,r19,r16
   4b8c4:	0025883a 	mov	r18,zero
   4b8c8:	003ee206 	br	4b454 <__alt_mem_onchip_memory2_1+0xfffca454>
   4b8cc:	d9800315 	stw	r6,12(sp)
   4b8d0:	d9c00215 	stw	r7,8(sp)
   4b8d4:	004cf8c0 	call	4cf8c <__clzsi2>
   4b8d8:	10800804 	addi	r2,r2,32
   4b8dc:	d9c00217 	ldw	r7,8(sp)
   4b8e0:	d9800317 	ldw	r6,12(sp)
   4b8e4:	003ed106 	br	4b42c <__alt_mem_onchip_memory2_1+0xfffca42c>
   4b8e8:	147ff604 	addi	r17,r2,-40
   4b8ec:	3462983a 	sll	r17,r6,r17
   4b8f0:	0011883a 	mov	r8,zero
   4b8f4:	003ef506 	br	4b4cc <__alt_mem_onchip_memory2_1+0xfffca4cc>
   4b8f8:	3009883a 	mov	r4,r6
   4b8fc:	d9800315 	stw	r6,12(sp)
   4b900:	da400115 	stw	r9,4(sp)
   4b904:	004cf8c0 	call	4cf8c <__clzsi2>
   4b908:	10800804 	addi	r2,r2,32
   4b90c:	da400117 	ldw	r9,4(sp)
   4b910:	d9800317 	ldw	r6,12(sp)
   4b914:	003ee306 	br	4b4a4 <__alt_mem_onchip_memory2_1+0xfffca4a4>
   4b918:	85a1883a 	add	r16,r16,r22
   4b91c:	8585803a 	cmpltu	r2,r16,r22
   4b920:	1705883a 	add	r2,r2,fp
   4b924:	14a5883a 	add	r18,r2,r18
   4b928:	88bfffc4 	addi	r2,r17,-1
   4b92c:	e4800c2e 	bgeu	fp,r18,4b960 <__divdf3+0x72c>
   4b930:	90c03e36 	bltu	r18,r3,4ba2c <__divdf3+0x7f8>
   4b934:	1c806926 	beq	r3,r18,4badc <__divdf3+0x8a8>
   4b938:	90c7c83a 	sub	r3,r18,r3
   4b93c:	1023883a 	mov	r17,r2
   4b940:	003f5206 	br	4b68c <__alt_mem_onchip_memory2_1+0xfffca68c>
   4b944:	923f0436 	bltu	r18,r8,4b558 <__alt_mem_onchip_memory2_1+0xfffca558>
   4b948:	800897fa 	slli	r4,r16,31
   4b94c:	9004d07a 	srli	r2,r18,1
   4b950:	8006d07a 	srli	r3,r16,1
   4b954:	902097fa 	slli	r16,r18,31
   4b958:	20a4b03a 	or	r18,r4,r2
   4b95c:	003f0106 	br	4b564 <__alt_mem_onchip_memory2_1+0xfffca564>
   4b960:	e4bff51e 	bne	fp,r18,4b938 <__alt_mem_onchip_memory2_1+0xfffca938>
   4b964:	85bff22e 	bgeu	r16,r22,4b930 <__alt_mem_onchip_memory2_1+0xfffca930>
   4b968:	e0c7c83a 	sub	r3,fp,r3
   4b96c:	1023883a 	mov	r17,r2
   4b970:	003f4606 	br	4b68c <__alt_mem_onchip_memory2_1+0xfffca68c>
   4b974:	100f883a 	mov	r7,r2
   4b978:	003f2b06 	br	4b628 <__alt_mem_onchip_memory2_1+0xfffca628>
   4b97c:	180d883a 	mov	r6,r3
   4b980:	003f1306 	br	4b5d0 <__alt_mem_onchip_memory2_1+0xfffca5d0>
   4b984:	813fe436 	bltu	r16,r4,4b918 <__alt_mem_onchip_memory2_1+0xfffca918>
   4b988:	0007883a 	mov	r3,zero
   4b98c:	003f3f06 	br	4b68c <__alt_mem_onchip_memory2_1+0xfffca68c>
   4b990:	ba402c36 	bltu	r23,r9,4ba44 <__divdf3+0x810>
   4b994:	4dc05426 	beq	r9,r23,4bae8 <__divdf3+0x8b4>
   4b998:	1011883a 	mov	r8,r2
   4b99c:	003f8906 	br	4b7c4 <__alt_mem_onchip_memory2_1+0xfffca7c4>
   4b9a0:	023fffc4 	movi	r8,-1
   4b9a4:	003f8806 	br	4b7c8 <__alt_mem_onchip_memory2_1+0xfffca7c8>
   4b9a8:	1811883a 	mov	r8,r3
   4b9ac:	003f5406 	br	4b700 <__alt_mem_onchip_memory2_1+0xfffca700>
   4b9b0:	1025883a 	mov	r18,r2
   4b9b4:	003f6d06 	br	4b76c <__alt_mem_onchip_memory2_1+0xfffca76c>
   4b9b8:	b827883a 	mov	r19,r23
   4b9bc:	003f8206 	br	4b7c8 <__alt_mem_onchip_memory2_1+0xfffca7c8>
   4b9c0:	010007c4 	movi	r4,31
   4b9c4:	20c02616 	blt	r4,r3,4ba60 <__divdf3+0x82c>
   4b9c8:	00800804 	movi	r2,32
   4b9cc:	10c5c83a 	sub	r2,r2,r3
   4b9d0:	888a983a 	sll	r5,r17,r2
   4b9d4:	40c8d83a 	srl	r4,r8,r3
   4b9d8:	4084983a 	sll	r2,r8,r2
   4b9dc:	88e2d83a 	srl	r17,r17,r3
   4b9e0:	2906b03a 	or	r3,r5,r4
   4b9e4:	1004c03a 	cmpne	r2,r2,zero
   4b9e8:	1886b03a 	or	r3,r3,r2
   4b9ec:	188001cc 	andi	r2,r3,7
   4b9f0:	10000726 	beq	r2,zero,4ba10 <__divdf3+0x7dc>
   4b9f4:	188003cc 	andi	r2,r3,15
   4b9f8:	01000104 	movi	r4,4
   4b9fc:	11000426 	beq	r2,r4,4ba10 <__divdf3+0x7dc>
   4ba00:	1805883a 	mov	r2,r3
   4ba04:	10c00104 	addi	r3,r2,4
   4ba08:	1885803a 	cmpltu	r2,r3,r2
   4ba0c:	88a3883a 	add	r17,r17,r2
   4ba10:	8880202c 	andhi	r2,r17,128
   4ba14:	10002726 	beq	r2,zero,4bab4 <__divdf3+0x880>
   4ba18:	98c0004c 	andi	r3,r19,1
   4ba1c:	00800044 	movi	r2,1
   4ba20:	000b883a 	mov	r5,zero
   4ba24:	0025883a 	mov	r18,zero
   4ba28:	003e6106 	br	4b3b0 <__alt_mem_onchip_memory2_1+0xfffca3b0>
   4ba2c:	85a1883a 	add	r16,r16,r22
   4ba30:	8585803a 	cmpltu	r2,r16,r22
   4ba34:	1705883a 	add	r2,r2,fp
   4ba38:	14a5883a 	add	r18,r2,r18
   4ba3c:	8c7fff84 	addi	r17,r17,-2
   4ba40:	003f1106 	br	4b688 <__alt_mem_onchip_memory2_1+0xfffca688>
   4ba44:	b589883a 	add	r4,r22,r22
   4ba48:	25ad803a 	cmpltu	r22,r4,r22
   4ba4c:	b739883a 	add	fp,r22,fp
   4ba50:	40bfff84 	addi	r2,r8,-2
   4ba54:	bf2f883a 	add	r23,r23,fp
   4ba58:	202d883a 	mov	r22,r4
   4ba5c:	003f9306 	br	4b8ac <__alt_mem_onchip_memory2_1+0xfffca8ac>
   4ba60:	013ff844 	movi	r4,-31
   4ba64:	2085c83a 	sub	r2,r4,r2
   4ba68:	8888d83a 	srl	r4,r17,r2
   4ba6c:	00800804 	movi	r2,32
   4ba70:	18802126 	beq	r3,r2,4baf8 <__divdf3+0x8c4>
   4ba74:	00801004 	movi	r2,64
   4ba78:	10c5c83a 	sub	r2,r2,r3
   4ba7c:	8884983a 	sll	r2,r17,r2
   4ba80:	1204b03a 	or	r2,r2,r8
   4ba84:	1004c03a 	cmpne	r2,r2,zero
   4ba88:	2084b03a 	or	r2,r4,r2
   4ba8c:	144001cc 	andi	r17,r2,7
   4ba90:	88000d1e 	bne	r17,zero,4bac8 <__divdf3+0x894>
   4ba94:	000b883a 	mov	r5,zero
   4ba98:	1024d0fa 	srli	r18,r2,3
   4ba9c:	98c0004c 	andi	r3,r19,1
   4baa0:	0005883a 	mov	r2,zero
   4baa4:	9464b03a 	or	r18,r18,r17
   4baa8:	003e4106 	br	4b3b0 <__alt_mem_onchip_memory2_1+0xfffca3b0>
   4baac:	1007883a 	mov	r3,r2
   4bab0:	0023883a 	mov	r17,zero
   4bab4:	880a927a 	slli	r5,r17,9
   4bab8:	1805883a 	mov	r2,r3
   4babc:	8822977a 	slli	r17,r17,29
   4bac0:	280ad33a 	srli	r5,r5,12
   4bac4:	003ff406 	br	4ba98 <__alt_mem_onchip_memory2_1+0xfffcaa98>
   4bac8:	10c003cc 	andi	r3,r2,15
   4bacc:	01000104 	movi	r4,4
   4bad0:	193ff626 	beq	r3,r4,4baac <__alt_mem_onchip_memory2_1+0xfffcaaac>
   4bad4:	0023883a 	mov	r17,zero
   4bad8:	003fca06 	br	4ba04 <__alt_mem_onchip_memory2_1+0xfffcaa04>
   4badc:	813fd336 	bltu	r16,r4,4ba2c <__alt_mem_onchip_memory2_1+0xfffcaa2c>
   4bae0:	1023883a 	mov	r17,r2
   4bae4:	003fa806 	br	4b988 <__alt_mem_onchip_memory2_1+0xfffca988>
   4bae8:	b0ffd636 	bltu	r22,r3,4ba44 <__alt_mem_onchip_memory2_1+0xfffcaa44>
   4baec:	1011883a 	mov	r8,r2
   4baf0:	b0ff341e 	bne	r22,r3,4b7c4 <__alt_mem_onchip_memory2_1+0xfffca7c4>
   4baf4:	003f3406 	br	4b7c8 <__alt_mem_onchip_memory2_1+0xfffca7c8>
   4baf8:	0005883a 	mov	r2,zero
   4bafc:	003fe006 	br	4ba80 <__alt_mem_onchip_memory2_1+0xfffcaa80>
   4bb00:	00800434 	movhi	r2,16
   4bb04:	89400234 	orhi	r5,r17,8
   4bb08:	10bfffc4 	addi	r2,r2,-1
   4bb0c:	b807883a 	mov	r3,r23
   4bb10:	288a703a 	and	r5,r5,r2
   4bb14:	4025883a 	mov	r18,r8
   4bb18:	003e8206 	br	4b524 <__alt_mem_onchip_memory2_1+0xfffca524>

0004bb1c <__eqdf2>:
   4bb1c:	2804d53a 	srli	r2,r5,20
   4bb20:	3806d53a 	srli	r3,r7,20
   4bb24:	02000434 	movhi	r8,16
   4bb28:	423fffc4 	addi	r8,r8,-1
   4bb2c:	1081ffcc 	andi	r2,r2,2047
   4bb30:	0281ffc4 	movi	r10,2047
   4bb34:	2a12703a 	and	r9,r5,r8
   4bb38:	18c1ffcc 	andi	r3,r3,2047
   4bb3c:	3a10703a 	and	r8,r7,r8
   4bb40:	280ad7fa 	srli	r5,r5,31
   4bb44:	380ed7fa 	srli	r7,r7,31
   4bb48:	12801026 	beq	r2,r10,4bb8c <__eqdf2+0x70>
   4bb4c:	0281ffc4 	movi	r10,2047
   4bb50:	1a800a26 	beq	r3,r10,4bb7c <__eqdf2+0x60>
   4bb54:	10c00226 	beq	r2,r3,4bb60 <__eqdf2+0x44>
   4bb58:	00800044 	movi	r2,1
   4bb5c:	f800283a 	ret
   4bb60:	4a3ffd1e 	bne	r9,r8,4bb58 <__alt_mem_onchip_memory2_1+0xfffcab58>
   4bb64:	21bffc1e 	bne	r4,r6,4bb58 <__alt_mem_onchip_memory2_1+0xfffcab58>
   4bb68:	29c00c26 	beq	r5,r7,4bb9c <__eqdf2+0x80>
   4bb6c:	103ffa1e 	bne	r2,zero,4bb58 <__alt_mem_onchip_memory2_1+0xfffcab58>
   4bb70:	2244b03a 	or	r2,r4,r9
   4bb74:	1004c03a 	cmpne	r2,r2,zero
   4bb78:	f800283a 	ret
   4bb7c:	3214b03a 	or	r10,r6,r8
   4bb80:	503ff426 	beq	r10,zero,4bb54 <__alt_mem_onchip_memory2_1+0xfffcab54>
   4bb84:	00800044 	movi	r2,1
   4bb88:	f800283a 	ret
   4bb8c:	2254b03a 	or	r10,r4,r9
   4bb90:	503fee26 	beq	r10,zero,4bb4c <__alt_mem_onchip_memory2_1+0xfffcab4c>
   4bb94:	00800044 	movi	r2,1
   4bb98:	f800283a 	ret
   4bb9c:	0005883a 	mov	r2,zero
   4bba0:	f800283a 	ret

0004bba4 <__gedf2>:
   4bba4:	2804d53a 	srli	r2,r5,20
   4bba8:	3806d53a 	srli	r3,r7,20
   4bbac:	02000434 	movhi	r8,16
   4bbb0:	423fffc4 	addi	r8,r8,-1
   4bbb4:	1081ffcc 	andi	r2,r2,2047
   4bbb8:	0241ffc4 	movi	r9,2047
   4bbbc:	2a14703a 	and	r10,r5,r8
   4bbc0:	18c1ffcc 	andi	r3,r3,2047
   4bbc4:	3a10703a 	and	r8,r7,r8
   4bbc8:	280ad7fa 	srli	r5,r5,31
   4bbcc:	380ed7fa 	srli	r7,r7,31
   4bbd0:	12401d26 	beq	r2,r9,4bc48 <__gedf2+0xa4>
   4bbd4:	0241ffc4 	movi	r9,2047
   4bbd8:	1a401226 	beq	r3,r9,4bc24 <__gedf2+0x80>
   4bbdc:	1000081e 	bne	r2,zero,4bc00 <__gedf2+0x5c>
   4bbe0:	2296b03a 	or	r11,r4,r10
   4bbe4:	5813003a 	cmpeq	r9,r11,zero
   4bbe8:	1800091e 	bne	r3,zero,4bc10 <__gedf2+0x6c>
   4bbec:	3218b03a 	or	r12,r6,r8
   4bbf0:	6000071e 	bne	r12,zero,4bc10 <__gedf2+0x6c>
   4bbf4:	0005883a 	mov	r2,zero
   4bbf8:	5800101e 	bne	r11,zero,4bc3c <__gedf2+0x98>
   4bbfc:	f800283a 	ret
   4bc00:	18000c1e 	bne	r3,zero,4bc34 <__gedf2+0x90>
   4bc04:	3212b03a 	or	r9,r6,r8
   4bc08:	48000c26 	beq	r9,zero,4bc3c <__gedf2+0x98>
   4bc0c:	0013883a 	mov	r9,zero
   4bc10:	39c03fcc 	andi	r7,r7,255
   4bc14:	48000826 	beq	r9,zero,4bc38 <__gedf2+0x94>
   4bc18:	38000926 	beq	r7,zero,4bc40 <__gedf2+0x9c>
   4bc1c:	00800044 	movi	r2,1
   4bc20:	f800283a 	ret
   4bc24:	3212b03a 	or	r9,r6,r8
   4bc28:	483fec26 	beq	r9,zero,4bbdc <__alt_mem_onchip_memory2_1+0xfffcabdc>
   4bc2c:	00bfff84 	movi	r2,-2
   4bc30:	f800283a 	ret
   4bc34:	39c03fcc 	andi	r7,r7,255
   4bc38:	29c00626 	beq	r5,r7,4bc54 <__gedf2+0xb0>
   4bc3c:	283ff726 	beq	r5,zero,4bc1c <__alt_mem_onchip_memory2_1+0xfffcac1c>
   4bc40:	00bfffc4 	movi	r2,-1
   4bc44:	f800283a 	ret
   4bc48:	2292b03a 	or	r9,r4,r10
   4bc4c:	483fe126 	beq	r9,zero,4bbd4 <__alt_mem_onchip_memory2_1+0xfffcabd4>
   4bc50:	003ff606 	br	4bc2c <__alt_mem_onchip_memory2_1+0xfffcac2c>
   4bc54:	18bff916 	blt	r3,r2,4bc3c <__alt_mem_onchip_memory2_1+0xfffcac3c>
   4bc58:	10c00316 	blt	r2,r3,4bc68 <__gedf2+0xc4>
   4bc5c:	42bff736 	bltu	r8,r10,4bc3c <__alt_mem_onchip_memory2_1+0xfffcac3c>
   4bc60:	52000326 	beq	r10,r8,4bc70 <__gedf2+0xcc>
   4bc64:	5200042e 	bgeu	r10,r8,4bc78 <__gedf2+0xd4>
   4bc68:	283fec1e 	bne	r5,zero,4bc1c <__alt_mem_onchip_memory2_1+0xfffcac1c>
   4bc6c:	003ff406 	br	4bc40 <__alt_mem_onchip_memory2_1+0xfffcac40>
   4bc70:	313ff236 	bltu	r6,r4,4bc3c <__alt_mem_onchip_memory2_1+0xfffcac3c>
   4bc74:	21bffc36 	bltu	r4,r6,4bc68 <__alt_mem_onchip_memory2_1+0xfffcac68>
   4bc78:	0005883a 	mov	r2,zero
   4bc7c:	f800283a 	ret

0004bc80 <__ledf2>:
   4bc80:	2804d53a 	srli	r2,r5,20
   4bc84:	3810d53a 	srli	r8,r7,20
   4bc88:	00c00434 	movhi	r3,16
   4bc8c:	18ffffc4 	addi	r3,r3,-1
   4bc90:	1081ffcc 	andi	r2,r2,2047
   4bc94:	0241ffc4 	movi	r9,2047
   4bc98:	28d4703a 	and	r10,r5,r3
   4bc9c:	4201ffcc 	andi	r8,r8,2047
   4bca0:	38c6703a 	and	r3,r7,r3
   4bca4:	280ad7fa 	srli	r5,r5,31
   4bca8:	380ed7fa 	srli	r7,r7,31
   4bcac:	12401f26 	beq	r2,r9,4bd2c <__ledf2+0xac>
   4bcb0:	0241ffc4 	movi	r9,2047
   4bcb4:	42401426 	beq	r8,r9,4bd08 <__ledf2+0x88>
   4bcb8:	1000091e 	bne	r2,zero,4bce0 <__ledf2+0x60>
   4bcbc:	2296b03a 	or	r11,r4,r10
   4bcc0:	5813003a 	cmpeq	r9,r11,zero
   4bcc4:	29403fcc 	andi	r5,r5,255
   4bcc8:	40000a1e 	bne	r8,zero,4bcf4 <__ledf2+0x74>
   4bccc:	30d8b03a 	or	r12,r6,r3
   4bcd0:	6000081e 	bne	r12,zero,4bcf4 <__ledf2+0x74>
   4bcd4:	0005883a 	mov	r2,zero
   4bcd8:	5800111e 	bne	r11,zero,4bd20 <__ledf2+0xa0>
   4bcdc:	f800283a 	ret
   4bce0:	29403fcc 	andi	r5,r5,255
   4bce4:	40000c1e 	bne	r8,zero,4bd18 <__ledf2+0x98>
   4bce8:	30d2b03a 	or	r9,r6,r3
   4bcec:	48000c26 	beq	r9,zero,4bd20 <__ledf2+0xa0>
   4bcf0:	0013883a 	mov	r9,zero
   4bcf4:	39c03fcc 	andi	r7,r7,255
   4bcf8:	48000826 	beq	r9,zero,4bd1c <__ledf2+0x9c>
   4bcfc:	38001126 	beq	r7,zero,4bd44 <__ledf2+0xc4>
   4bd00:	00800044 	movi	r2,1
   4bd04:	f800283a 	ret
   4bd08:	30d2b03a 	or	r9,r6,r3
   4bd0c:	483fea26 	beq	r9,zero,4bcb8 <__alt_mem_onchip_memory2_1+0xfffcacb8>
   4bd10:	00800084 	movi	r2,2
   4bd14:	f800283a 	ret
   4bd18:	39c03fcc 	andi	r7,r7,255
   4bd1c:	39400726 	beq	r7,r5,4bd3c <__ledf2+0xbc>
   4bd20:	2800081e 	bne	r5,zero,4bd44 <__ledf2+0xc4>
   4bd24:	00800044 	movi	r2,1
   4bd28:	f800283a 	ret
   4bd2c:	2292b03a 	or	r9,r4,r10
   4bd30:	483fdf26 	beq	r9,zero,4bcb0 <__alt_mem_onchip_memory2_1+0xfffcacb0>
   4bd34:	00800084 	movi	r2,2
   4bd38:	f800283a 	ret
   4bd3c:	4080030e 	bge	r8,r2,4bd4c <__ledf2+0xcc>
   4bd40:	383fef26 	beq	r7,zero,4bd00 <__alt_mem_onchip_memory2_1+0xfffcad00>
   4bd44:	00bfffc4 	movi	r2,-1
   4bd48:	f800283a 	ret
   4bd4c:	123feb16 	blt	r2,r8,4bcfc <__alt_mem_onchip_memory2_1+0xfffcacfc>
   4bd50:	1abff336 	bltu	r3,r10,4bd20 <__alt_mem_onchip_memory2_1+0xfffcad20>
   4bd54:	50c00326 	beq	r10,r3,4bd64 <__ledf2+0xe4>
   4bd58:	50c0042e 	bgeu	r10,r3,4bd6c <__ledf2+0xec>
   4bd5c:	283fe81e 	bne	r5,zero,4bd00 <__alt_mem_onchip_memory2_1+0xfffcad00>
   4bd60:	003ff806 	br	4bd44 <__alt_mem_onchip_memory2_1+0xfffcad44>
   4bd64:	313fee36 	bltu	r6,r4,4bd20 <__alt_mem_onchip_memory2_1+0xfffcad20>
   4bd68:	21bffc36 	bltu	r4,r6,4bd5c <__alt_mem_onchip_memory2_1+0xfffcad5c>
   4bd6c:	0005883a 	mov	r2,zero
   4bd70:	f800283a 	ret

0004bd74 <__muldf3>:
   4bd74:	defff304 	addi	sp,sp,-52
   4bd78:	2804d53a 	srli	r2,r5,20
   4bd7c:	dd800915 	stw	r22,36(sp)
   4bd80:	282cd7fa 	srli	r22,r5,31
   4bd84:	dc000315 	stw	r16,12(sp)
   4bd88:	04000434 	movhi	r16,16
   4bd8c:	dd400815 	stw	r21,32(sp)
   4bd90:	dc800515 	stw	r18,20(sp)
   4bd94:	843fffc4 	addi	r16,r16,-1
   4bd98:	dfc00c15 	stw	ra,48(sp)
   4bd9c:	df000b15 	stw	fp,44(sp)
   4bda0:	ddc00a15 	stw	r23,40(sp)
   4bda4:	dd000715 	stw	r20,28(sp)
   4bda8:	dcc00615 	stw	r19,24(sp)
   4bdac:	dc400415 	stw	r17,16(sp)
   4bdb0:	1481ffcc 	andi	r18,r2,2047
   4bdb4:	2c20703a 	and	r16,r5,r16
   4bdb8:	b02b883a 	mov	r21,r22
   4bdbc:	b2403fcc 	andi	r9,r22,255
   4bdc0:	90006026 	beq	r18,zero,4bf44 <__muldf3+0x1d0>
   4bdc4:	0081ffc4 	movi	r2,2047
   4bdc8:	2029883a 	mov	r20,r4
   4bdcc:	90803626 	beq	r18,r2,4bea8 <__muldf3+0x134>
   4bdd0:	80800434 	orhi	r2,r16,16
   4bdd4:	100490fa 	slli	r2,r2,3
   4bdd8:	2020d77a 	srli	r16,r4,29
   4bddc:	202890fa 	slli	r20,r4,3
   4bde0:	94bf0044 	addi	r18,r18,-1023
   4bde4:	80a0b03a 	or	r16,r16,r2
   4bde8:	0027883a 	mov	r19,zero
   4bdec:	0039883a 	mov	fp,zero
   4bdf0:	3804d53a 	srli	r2,r7,20
   4bdf4:	382ed7fa 	srli	r23,r7,31
   4bdf8:	04400434 	movhi	r17,16
   4bdfc:	8c7fffc4 	addi	r17,r17,-1
   4be00:	1081ffcc 	andi	r2,r2,2047
   4be04:	3011883a 	mov	r8,r6
   4be08:	3c62703a 	and	r17,r7,r17
   4be0c:	ba803fcc 	andi	r10,r23,255
   4be10:	10006d26 	beq	r2,zero,4bfc8 <__muldf3+0x254>
   4be14:	00c1ffc4 	movi	r3,2047
   4be18:	10c06526 	beq	r2,r3,4bfb0 <__muldf3+0x23c>
   4be1c:	88c00434 	orhi	r3,r17,16
   4be20:	180690fa 	slli	r3,r3,3
   4be24:	3022d77a 	srli	r17,r6,29
   4be28:	301090fa 	slli	r8,r6,3
   4be2c:	10bf0044 	addi	r2,r2,-1023
   4be30:	88e2b03a 	or	r17,r17,r3
   4be34:	000b883a 	mov	r5,zero
   4be38:	9085883a 	add	r2,r18,r2
   4be3c:	2cc8b03a 	or	r4,r5,r19
   4be40:	00c003c4 	movi	r3,15
   4be44:	bdacf03a 	xor	r22,r23,r22
   4be48:	12c00044 	addi	r11,r2,1
   4be4c:	19009936 	bltu	r3,r4,4c0b4 <__muldf3+0x340>
   4be50:	200890ba 	slli	r4,r4,2
   4be54:	00c00174 	movhi	r3,5
   4be58:	18ef9a04 	addi	r3,r3,-16792
   4be5c:	20c9883a 	add	r4,r4,r3
   4be60:	20c00017 	ldw	r3,0(r4)
   4be64:	1800683a 	jmp	r3
   4be68:	0004c0b4 	movhi	zero,4866
   4be6c:	0004bec8 	cmpgei	zero,zero,4859
   4be70:	0004bec8 	cmpgei	zero,zero,4859
   4be74:	0004bec4 	movi	zero,4859
   4be78:	0004c090 	cmplti	zero,zero,4866
   4be7c:	0004c090 	cmplti	zero,zero,4866
   4be80:	0004c078 	rdprs	zero,zero,4865
   4be84:	0004bec4 	movi	zero,4859
   4be88:	0004c090 	cmplti	zero,zero,4866
   4be8c:	0004c078 	rdprs	zero,zero,4865
   4be90:	0004c090 	cmplti	zero,zero,4866
   4be94:	0004bec4 	movi	zero,4859
   4be98:	0004c0a0 	cmpeqi	zero,zero,4866
   4be9c:	0004c0a0 	cmpeqi	zero,zero,4866
   4bea0:	0004c0a0 	cmpeqi	zero,zero,4866
   4bea4:	0004c2bc 	xorhi	zero,zero,4874
   4bea8:	2404b03a 	or	r2,r4,r16
   4beac:	10006f1e 	bne	r2,zero,4c06c <__muldf3+0x2f8>
   4beb0:	04c00204 	movi	r19,8
   4beb4:	0021883a 	mov	r16,zero
   4beb8:	0029883a 	mov	r20,zero
   4bebc:	07000084 	movi	fp,2
   4bec0:	003fcb06 	br	4bdf0 <__alt_mem_onchip_memory2_1+0xfffcadf0>
   4bec4:	502d883a 	mov	r22,r10
   4bec8:	00800084 	movi	r2,2
   4becc:	28805726 	beq	r5,r2,4c02c <__muldf3+0x2b8>
   4bed0:	008000c4 	movi	r2,3
   4bed4:	28816626 	beq	r5,r2,4c470 <__muldf3+0x6fc>
   4bed8:	00800044 	movi	r2,1
   4bedc:	2881411e 	bne	r5,r2,4c3e4 <__muldf3+0x670>
   4bee0:	b02b883a 	mov	r21,r22
   4bee4:	0005883a 	mov	r2,zero
   4bee8:	000b883a 	mov	r5,zero
   4beec:	0029883a 	mov	r20,zero
   4bef0:	1004953a 	slli	r2,r2,20
   4bef4:	a8c03fcc 	andi	r3,r21,255
   4bef8:	04400434 	movhi	r17,16
   4befc:	8c7fffc4 	addi	r17,r17,-1
   4bf00:	180697fa 	slli	r3,r3,31
   4bf04:	2c4a703a 	and	r5,r5,r17
   4bf08:	288ab03a 	or	r5,r5,r2
   4bf0c:	28c6b03a 	or	r3,r5,r3
   4bf10:	a005883a 	mov	r2,r20
   4bf14:	dfc00c17 	ldw	ra,48(sp)
   4bf18:	df000b17 	ldw	fp,44(sp)
   4bf1c:	ddc00a17 	ldw	r23,40(sp)
   4bf20:	dd800917 	ldw	r22,36(sp)
   4bf24:	dd400817 	ldw	r21,32(sp)
   4bf28:	dd000717 	ldw	r20,28(sp)
   4bf2c:	dcc00617 	ldw	r19,24(sp)
   4bf30:	dc800517 	ldw	r18,20(sp)
   4bf34:	dc400417 	ldw	r17,16(sp)
   4bf38:	dc000317 	ldw	r16,12(sp)
   4bf3c:	dec00d04 	addi	sp,sp,52
   4bf40:	f800283a 	ret
   4bf44:	2404b03a 	or	r2,r4,r16
   4bf48:	2027883a 	mov	r19,r4
   4bf4c:	10004226 	beq	r2,zero,4c058 <__muldf3+0x2e4>
   4bf50:	8000fc26 	beq	r16,zero,4c344 <__muldf3+0x5d0>
   4bf54:	8009883a 	mov	r4,r16
   4bf58:	d9800215 	stw	r6,8(sp)
   4bf5c:	d9c00015 	stw	r7,0(sp)
   4bf60:	da400115 	stw	r9,4(sp)
   4bf64:	004cf8c0 	call	4cf8c <__clzsi2>
   4bf68:	d9800217 	ldw	r6,8(sp)
   4bf6c:	d9c00017 	ldw	r7,0(sp)
   4bf70:	da400117 	ldw	r9,4(sp)
   4bf74:	113ffd44 	addi	r4,r2,-11
   4bf78:	00c00704 	movi	r3,28
   4bf7c:	1900ed16 	blt	r3,r4,4c334 <__muldf3+0x5c0>
   4bf80:	00c00744 	movi	r3,29
   4bf84:	147ffe04 	addi	r17,r2,-8
   4bf88:	1907c83a 	sub	r3,r3,r4
   4bf8c:	8460983a 	sll	r16,r16,r17
   4bf90:	98c6d83a 	srl	r3,r19,r3
   4bf94:	9c68983a 	sll	r20,r19,r17
   4bf98:	1c20b03a 	or	r16,r3,r16
   4bf9c:	1080fcc4 	addi	r2,r2,1011
   4bfa0:	00a5c83a 	sub	r18,zero,r2
   4bfa4:	0027883a 	mov	r19,zero
   4bfa8:	0039883a 	mov	fp,zero
   4bfac:	003f9006 	br	4bdf0 <__alt_mem_onchip_memory2_1+0xfffcadf0>
   4bfb0:	3446b03a 	or	r3,r6,r17
   4bfb4:	1800261e 	bne	r3,zero,4c050 <__muldf3+0x2dc>
   4bfb8:	0023883a 	mov	r17,zero
   4bfbc:	0011883a 	mov	r8,zero
   4bfc0:	01400084 	movi	r5,2
   4bfc4:	003f9c06 	br	4be38 <__alt_mem_onchip_memory2_1+0xfffcae38>
   4bfc8:	3446b03a 	or	r3,r6,r17
   4bfcc:	18001c26 	beq	r3,zero,4c040 <__muldf3+0x2cc>
   4bfd0:	8800ce26 	beq	r17,zero,4c30c <__muldf3+0x598>
   4bfd4:	8809883a 	mov	r4,r17
   4bfd8:	d9800215 	stw	r6,8(sp)
   4bfdc:	da400115 	stw	r9,4(sp)
   4bfe0:	da800015 	stw	r10,0(sp)
   4bfe4:	004cf8c0 	call	4cf8c <__clzsi2>
   4bfe8:	d9800217 	ldw	r6,8(sp)
   4bfec:	da400117 	ldw	r9,4(sp)
   4bff0:	da800017 	ldw	r10,0(sp)
   4bff4:	113ffd44 	addi	r4,r2,-11
   4bff8:	00c00704 	movi	r3,28
   4bffc:	1900bf16 	blt	r3,r4,4c2fc <__muldf3+0x588>
   4c000:	00c00744 	movi	r3,29
   4c004:	123ffe04 	addi	r8,r2,-8
   4c008:	1907c83a 	sub	r3,r3,r4
   4c00c:	8a22983a 	sll	r17,r17,r8
   4c010:	30c6d83a 	srl	r3,r6,r3
   4c014:	3210983a 	sll	r8,r6,r8
   4c018:	1c62b03a 	or	r17,r3,r17
   4c01c:	1080fcc4 	addi	r2,r2,1011
   4c020:	0085c83a 	sub	r2,zero,r2
   4c024:	000b883a 	mov	r5,zero
   4c028:	003f8306 	br	4be38 <__alt_mem_onchip_memory2_1+0xfffcae38>
   4c02c:	b02b883a 	mov	r21,r22
   4c030:	0081ffc4 	movi	r2,2047
   4c034:	000b883a 	mov	r5,zero
   4c038:	0029883a 	mov	r20,zero
   4c03c:	003fac06 	br	4bef0 <__alt_mem_onchip_memory2_1+0xfffcaef0>
   4c040:	0023883a 	mov	r17,zero
   4c044:	0011883a 	mov	r8,zero
   4c048:	01400044 	movi	r5,1
   4c04c:	003f7a06 	br	4be38 <__alt_mem_onchip_memory2_1+0xfffcae38>
   4c050:	014000c4 	movi	r5,3
   4c054:	003f7806 	br	4be38 <__alt_mem_onchip_memory2_1+0xfffcae38>
   4c058:	04c00104 	movi	r19,4
   4c05c:	0021883a 	mov	r16,zero
   4c060:	0029883a 	mov	r20,zero
   4c064:	07000044 	movi	fp,1
   4c068:	003f6106 	br	4bdf0 <__alt_mem_onchip_memory2_1+0xfffcadf0>
   4c06c:	04c00304 	movi	r19,12
   4c070:	070000c4 	movi	fp,3
   4c074:	003f5e06 	br	4bdf0 <__alt_mem_onchip_memory2_1+0xfffcadf0>
   4c078:	01400434 	movhi	r5,16
   4c07c:	002b883a 	mov	r21,zero
   4c080:	297fffc4 	addi	r5,r5,-1
   4c084:	053fffc4 	movi	r20,-1
   4c088:	0081ffc4 	movi	r2,2047
   4c08c:	003f9806 	br	4bef0 <__alt_mem_onchip_memory2_1+0xfffcaef0>
   4c090:	8023883a 	mov	r17,r16
   4c094:	a011883a 	mov	r8,r20
   4c098:	e00b883a 	mov	r5,fp
   4c09c:	003f8a06 	br	4bec8 <__alt_mem_onchip_memory2_1+0xfffcaec8>
   4c0a0:	8023883a 	mov	r17,r16
   4c0a4:	a011883a 	mov	r8,r20
   4c0a8:	482d883a 	mov	r22,r9
   4c0ac:	e00b883a 	mov	r5,fp
   4c0b0:	003f8506 	br	4bec8 <__alt_mem_onchip_memory2_1+0xfffcaec8>
   4c0b4:	a00ad43a 	srli	r5,r20,16
   4c0b8:	401ad43a 	srli	r13,r8,16
   4c0bc:	a53fffcc 	andi	r20,r20,65535
   4c0c0:	423fffcc 	andi	r8,r8,65535
   4c0c4:	4519383a 	mul	r12,r8,r20
   4c0c8:	4147383a 	mul	r3,r8,r5
   4c0cc:	6d09383a 	mul	r4,r13,r20
   4c0d0:	600cd43a 	srli	r6,r12,16
   4c0d4:	2b5d383a 	mul	r14,r5,r13
   4c0d8:	20c9883a 	add	r4,r4,r3
   4c0dc:	310d883a 	add	r6,r6,r4
   4c0e0:	30c0022e 	bgeu	r6,r3,4c0ec <__muldf3+0x378>
   4c0e4:	00c00074 	movhi	r3,1
   4c0e8:	70dd883a 	add	r14,r14,r3
   4c0ec:	8826d43a 	srli	r19,r17,16
   4c0f0:	8bffffcc 	andi	r15,r17,65535
   4c0f4:	7d23383a 	mul	r17,r15,r20
   4c0f8:	7949383a 	mul	r4,r15,r5
   4c0fc:	9d29383a 	mul	r20,r19,r20
   4c100:	8814d43a 	srli	r10,r17,16
   4c104:	3012943a 	slli	r9,r6,16
   4c108:	a129883a 	add	r20,r20,r4
   4c10c:	633fffcc 	andi	r12,r12,65535
   4c110:	5515883a 	add	r10,r10,r20
   4c114:	3006d43a 	srli	r3,r6,16
   4c118:	4b13883a 	add	r9,r9,r12
   4c11c:	2ccb383a 	mul	r5,r5,r19
   4c120:	5100022e 	bgeu	r10,r4,4c12c <__muldf3+0x3b8>
   4c124:	01000074 	movhi	r4,1
   4c128:	290b883a 	add	r5,r5,r4
   4c12c:	802ad43a 	srli	r21,r16,16
   4c130:	843fffcc 	andi	r16,r16,65535
   4c134:	440d383a 	mul	r6,r8,r16
   4c138:	4565383a 	mul	r18,r8,r21
   4c13c:	8349383a 	mul	r4,r16,r13
   4c140:	500e943a 	slli	r7,r10,16
   4c144:	3010d43a 	srli	r8,r6,16
   4c148:	5028d43a 	srli	r20,r10,16
   4c14c:	2489883a 	add	r4,r4,r18
   4c150:	8abfffcc 	andi	r10,r17,65535
   4c154:	3a95883a 	add	r10,r7,r10
   4c158:	4119883a 	add	r12,r8,r4
   4c15c:	a169883a 	add	r20,r20,r5
   4c160:	1a87883a 	add	r3,r3,r10
   4c164:	6d5b383a 	mul	r13,r13,r21
   4c168:	6480022e 	bgeu	r12,r18,4c174 <__muldf3+0x400>
   4c16c:	01000074 	movhi	r4,1
   4c170:	691b883a 	add	r13,r13,r4
   4c174:	7c25383a 	mul	r18,r15,r16
   4c178:	7d4b383a 	mul	r5,r15,r21
   4c17c:	84cf383a 	mul	r7,r16,r19
   4c180:	901ed43a 	srli	r15,r18,16
   4c184:	6008d43a 	srli	r4,r12,16
   4c188:	6010943a 	slli	r8,r12,16
   4c18c:	394f883a 	add	r7,r7,r5
   4c190:	333fffcc 	andi	r12,r6,65535
   4c194:	79df883a 	add	r15,r15,r7
   4c198:	235b883a 	add	r13,r4,r13
   4c19c:	9d63383a 	mul	r17,r19,r21
   4c1a0:	4309883a 	add	r4,r8,r12
   4c1a4:	7940022e 	bgeu	r15,r5,4c1b0 <__muldf3+0x43c>
   4c1a8:	01400074 	movhi	r5,1
   4c1ac:	8963883a 	add	r17,r17,r5
   4c1b0:	780a943a 	slli	r5,r15,16
   4c1b4:	91bfffcc 	andi	r6,r18,65535
   4c1b8:	70c7883a 	add	r3,r14,r3
   4c1bc:	298d883a 	add	r6,r5,r6
   4c1c0:	1a8f803a 	cmpltu	r7,r3,r10
   4c1c4:	350b883a 	add	r5,r6,r20
   4c1c8:	20c7883a 	add	r3,r4,r3
   4c1cc:	3955883a 	add	r10,r7,r5
   4c1d0:	1909803a 	cmpltu	r4,r3,r4
   4c1d4:	6a91883a 	add	r8,r13,r10
   4c1d8:	780cd43a 	srli	r6,r15,16
   4c1dc:	2219883a 	add	r12,r4,r8
   4c1e0:	2d0b803a 	cmpltu	r5,r5,r20
   4c1e4:	51cf803a 	cmpltu	r7,r10,r7
   4c1e8:	29ceb03a 	or	r7,r5,r7
   4c1ec:	4351803a 	cmpltu	r8,r8,r13
   4c1f0:	610b803a 	cmpltu	r5,r12,r4
   4c1f4:	4148b03a 	or	r4,r8,r5
   4c1f8:	398f883a 	add	r7,r7,r6
   4c1fc:	3909883a 	add	r4,r7,r4
   4c200:	1810927a 	slli	r8,r3,9
   4c204:	2449883a 	add	r4,r4,r17
   4c208:	2008927a 	slli	r4,r4,9
   4c20c:	6022d5fa 	srli	r17,r12,23
   4c210:	1806d5fa 	srli	r3,r3,23
   4c214:	4252b03a 	or	r9,r8,r9
   4c218:	600a927a 	slli	r5,r12,9
   4c21c:	4810c03a 	cmpne	r8,r9,zero
   4c220:	2462b03a 	or	r17,r4,r17
   4c224:	40c6b03a 	or	r3,r8,r3
   4c228:	8900402c 	andhi	r4,r17,256
   4c22c:	1950b03a 	or	r8,r3,r5
   4c230:	20000726 	beq	r4,zero,4c250 <__muldf3+0x4dc>
   4c234:	4006d07a 	srli	r3,r8,1
   4c238:	880497fa 	slli	r2,r17,31
   4c23c:	4200004c 	andi	r8,r8,1
   4c240:	8822d07a 	srli	r17,r17,1
   4c244:	1a10b03a 	or	r8,r3,r8
   4c248:	1210b03a 	or	r8,r2,r8
   4c24c:	5805883a 	mov	r2,r11
   4c250:	1140ffc4 	addi	r5,r2,1023
   4c254:	0140440e 	bge	zero,r5,4c368 <__muldf3+0x5f4>
   4c258:	40c001cc 	andi	r3,r8,7
   4c25c:	18000726 	beq	r3,zero,4c27c <__muldf3+0x508>
   4c260:	40c003cc 	andi	r3,r8,15
   4c264:	01000104 	movi	r4,4
   4c268:	19000426 	beq	r3,r4,4c27c <__muldf3+0x508>
   4c26c:	4107883a 	add	r3,r8,r4
   4c270:	1a11803a 	cmpltu	r8,r3,r8
   4c274:	8a23883a 	add	r17,r17,r8
   4c278:	1811883a 	mov	r8,r3
   4c27c:	88c0402c 	andhi	r3,r17,256
   4c280:	18000426 	beq	r3,zero,4c294 <__muldf3+0x520>
   4c284:	11410004 	addi	r5,r2,1024
   4c288:	00bfc034 	movhi	r2,65280
   4c28c:	10bfffc4 	addi	r2,r2,-1
   4c290:	88a2703a 	and	r17,r17,r2
   4c294:	0081ff84 	movi	r2,2046
   4c298:	117f6416 	blt	r2,r5,4c02c <__alt_mem_onchip_memory2_1+0xfffcb02c>
   4c29c:	8828977a 	slli	r20,r17,29
   4c2a0:	4010d0fa 	srli	r8,r8,3
   4c2a4:	8822927a 	slli	r17,r17,9
   4c2a8:	2881ffcc 	andi	r2,r5,2047
   4c2ac:	a228b03a 	or	r20,r20,r8
   4c2b0:	880ad33a 	srli	r5,r17,12
   4c2b4:	b02b883a 	mov	r21,r22
   4c2b8:	003f0d06 	br	4bef0 <__alt_mem_onchip_memory2_1+0xfffcaef0>
   4c2bc:	8080022c 	andhi	r2,r16,8
   4c2c0:	10000926 	beq	r2,zero,4c2e8 <__muldf3+0x574>
   4c2c4:	8880022c 	andhi	r2,r17,8
   4c2c8:	1000071e 	bne	r2,zero,4c2e8 <__muldf3+0x574>
   4c2cc:	00800434 	movhi	r2,16
   4c2d0:	89400234 	orhi	r5,r17,8
   4c2d4:	10bfffc4 	addi	r2,r2,-1
   4c2d8:	b82b883a 	mov	r21,r23
   4c2dc:	288a703a 	and	r5,r5,r2
   4c2e0:	4029883a 	mov	r20,r8
   4c2e4:	003f6806 	br	4c088 <__alt_mem_onchip_memory2_1+0xfffcb088>
   4c2e8:	00800434 	movhi	r2,16
   4c2ec:	81400234 	orhi	r5,r16,8
   4c2f0:	10bfffc4 	addi	r2,r2,-1
   4c2f4:	288a703a 	and	r5,r5,r2
   4c2f8:	003f6306 	br	4c088 <__alt_mem_onchip_memory2_1+0xfffcb088>
   4c2fc:	147ff604 	addi	r17,r2,-40
   4c300:	3462983a 	sll	r17,r6,r17
   4c304:	0011883a 	mov	r8,zero
   4c308:	003f4406 	br	4c01c <__alt_mem_onchip_memory2_1+0xfffcb01c>
   4c30c:	3009883a 	mov	r4,r6
   4c310:	d9800215 	stw	r6,8(sp)
   4c314:	da400115 	stw	r9,4(sp)
   4c318:	da800015 	stw	r10,0(sp)
   4c31c:	004cf8c0 	call	4cf8c <__clzsi2>
   4c320:	10800804 	addi	r2,r2,32
   4c324:	da800017 	ldw	r10,0(sp)
   4c328:	da400117 	ldw	r9,4(sp)
   4c32c:	d9800217 	ldw	r6,8(sp)
   4c330:	003f3006 	br	4bff4 <__alt_mem_onchip_memory2_1+0xfffcaff4>
   4c334:	143ff604 	addi	r16,r2,-40
   4c338:	9c20983a 	sll	r16,r19,r16
   4c33c:	0029883a 	mov	r20,zero
   4c340:	003f1606 	br	4bf9c <__alt_mem_onchip_memory2_1+0xfffcaf9c>
   4c344:	d9800215 	stw	r6,8(sp)
   4c348:	d9c00015 	stw	r7,0(sp)
   4c34c:	da400115 	stw	r9,4(sp)
   4c350:	004cf8c0 	call	4cf8c <__clzsi2>
   4c354:	10800804 	addi	r2,r2,32
   4c358:	da400117 	ldw	r9,4(sp)
   4c35c:	d9c00017 	ldw	r7,0(sp)
   4c360:	d9800217 	ldw	r6,8(sp)
   4c364:	003f0306 	br	4bf74 <__alt_mem_onchip_memory2_1+0xfffcaf74>
   4c368:	00c00044 	movi	r3,1
   4c36c:	1947c83a 	sub	r3,r3,r5
   4c370:	00800e04 	movi	r2,56
   4c374:	10feda16 	blt	r2,r3,4bee0 <__alt_mem_onchip_memory2_1+0xfffcaee0>
   4c378:	008007c4 	movi	r2,31
   4c37c:	10c01b16 	blt	r2,r3,4c3ec <__muldf3+0x678>
   4c380:	00800804 	movi	r2,32
   4c384:	10c5c83a 	sub	r2,r2,r3
   4c388:	888a983a 	sll	r5,r17,r2
   4c38c:	40c8d83a 	srl	r4,r8,r3
   4c390:	4084983a 	sll	r2,r8,r2
   4c394:	88e2d83a 	srl	r17,r17,r3
   4c398:	2906b03a 	or	r3,r5,r4
   4c39c:	1004c03a 	cmpne	r2,r2,zero
   4c3a0:	1886b03a 	or	r3,r3,r2
   4c3a4:	188001cc 	andi	r2,r3,7
   4c3a8:	10000726 	beq	r2,zero,4c3c8 <__muldf3+0x654>
   4c3ac:	188003cc 	andi	r2,r3,15
   4c3b0:	01000104 	movi	r4,4
   4c3b4:	11000426 	beq	r2,r4,4c3c8 <__muldf3+0x654>
   4c3b8:	1805883a 	mov	r2,r3
   4c3bc:	10c00104 	addi	r3,r2,4
   4c3c0:	1885803a 	cmpltu	r2,r3,r2
   4c3c4:	88a3883a 	add	r17,r17,r2
   4c3c8:	8880202c 	andhi	r2,r17,128
   4c3cc:	10001c26 	beq	r2,zero,4c440 <__muldf3+0x6cc>
   4c3d0:	b02b883a 	mov	r21,r22
   4c3d4:	00800044 	movi	r2,1
   4c3d8:	000b883a 	mov	r5,zero
   4c3dc:	0029883a 	mov	r20,zero
   4c3e0:	003ec306 	br	4bef0 <__alt_mem_onchip_memory2_1+0xfffcaef0>
   4c3e4:	5805883a 	mov	r2,r11
   4c3e8:	003f9906 	br	4c250 <__alt_mem_onchip_memory2_1+0xfffcb250>
   4c3ec:	00bff844 	movi	r2,-31
   4c3f0:	1145c83a 	sub	r2,r2,r5
   4c3f4:	8888d83a 	srl	r4,r17,r2
   4c3f8:	00800804 	movi	r2,32
   4c3fc:	18801a26 	beq	r3,r2,4c468 <__muldf3+0x6f4>
   4c400:	00801004 	movi	r2,64
   4c404:	10c5c83a 	sub	r2,r2,r3
   4c408:	8884983a 	sll	r2,r17,r2
   4c40c:	1204b03a 	or	r2,r2,r8
   4c410:	1004c03a 	cmpne	r2,r2,zero
   4c414:	2084b03a 	or	r2,r4,r2
   4c418:	144001cc 	andi	r17,r2,7
   4c41c:	88000d1e 	bne	r17,zero,4c454 <__muldf3+0x6e0>
   4c420:	000b883a 	mov	r5,zero
   4c424:	1028d0fa 	srli	r20,r2,3
   4c428:	b02b883a 	mov	r21,r22
   4c42c:	0005883a 	mov	r2,zero
   4c430:	a468b03a 	or	r20,r20,r17
   4c434:	003eae06 	br	4bef0 <__alt_mem_onchip_memory2_1+0xfffcaef0>
   4c438:	1007883a 	mov	r3,r2
   4c43c:	0023883a 	mov	r17,zero
   4c440:	880a927a 	slli	r5,r17,9
   4c444:	1805883a 	mov	r2,r3
   4c448:	8822977a 	slli	r17,r17,29
   4c44c:	280ad33a 	srli	r5,r5,12
   4c450:	003ff406 	br	4c424 <__alt_mem_onchip_memory2_1+0xfffcb424>
   4c454:	10c003cc 	andi	r3,r2,15
   4c458:	01000104 	movi	r4,4
   4c45c:	193ff626 	beq	r3,r4,4c438 <__alt_mem_onchip_memory2_1+0xfffcb438>
   4c460:	0023883a 	mov	r17,zero
   4c464:	003fd506 	br	4c3bc <__alt_mem_onchip_memory2_1+0xfffcb3bc>
   4c468:	0005883a 	mov	r2,zero
   4c46c:	003fe706 	br	4c40c <__alt_mem_onchip_memory2_1+0xfffcb40c>
   4c470:	00800434 	movhi	r2,16
   4c474:	89400234 	orhi	r5,r17,8
   4c478:	10bfffc4 	addi	r2,r2,-1
   4c47c:	b02b883a 	mov	r21,r22
   4c480:	288a703a 	and	r5,r5,r2
   4c484:	4029883a 	mov	r20,r8
   4c488:	003eff06 	br	4c088 <__alt_mem_onchip_memory2_1+0xfffcb088>

0004c48c <__subdf3>:
   4c48c:	02000434 	movhi	r8,16
   4c490:	423fffc4 	addi	r8,r8,-1
   4c494:	defffb04 	addi	sp,sp,-20
   4c498:	2a14703a 	and	r10,r5,r8
   4c49c:	3812d53a 	srli	r9,r7,20
   4c4a0:	3a10703a 	and	r8,r7,r8
   4c4a4:	2006d77a 	srli	r3,r4,29
   4c4a8:	3004d77a 	srli	r2,r6,29
   4c4ac:	dc000015 	stw	r16,0(sp)
   4c4b0:	501490fa 	slli	r10,r10,3
   4c4b4:	2820d53a 	srli	r16,r5,20
   4c4b8:	401090fa 	slli	r8,r8,3
   4c4bc:	dc800215 	stw	r18,8(sp)
   4c4c0:	dc400115 	stw	r17,4(sp)
   4c4c4:	dfc00415 	stw	ra,16(sp)
   4c4c8:	202290fa 	slli	r17,r4,3
   4c4cc:	dcc00315 	stw	r19,12(sp)
   4c4d0:	4a41ffcc 	andi	r9,r9,2047
   4c4d4:	0101ffc4 	movi	r4,2047
   4c4d8:	2824d7fa 	srli	r18,r5,31
   4c4dc:	8401ffcc 	andi	r16,r16,2047
   4c4e0:	50c6b03a 	or	r3,r10,r3
   4c4e4:	380ed7fa 	srli	r7,r7,31
   4c4e8:	408ab03a 	or	r5,r8,r2
   4c4ec:	300c90fa 	slli	r6,r6,3
   4c4f0:	49009626 	beq	r9,r4,4c74c <__subdf3+0x2c0>
   4c4f4:	39c0005c 	xori	r7,r7,1
   4c4f8:	8245c83a 	sub	r2,r16,r9
   4c4fc:	3c807426 	beq	r7,r18,4c6d0 <__subdf3+0x244>
   4c500:	0080af0e 	bge	zero,r2,4c7c0 <__subdf3+0x334>
   4c504:	48002a1e 	bne	r9,zero,4c5b0 <__subdf3+0x124>
   4c508:	2988b03a 	or	r4,r5,r6
   4c50c:	20009a1e 	bne	r4,zero,4c778 <__subdf3+0x2ec>
   4c510:	888001cc 	andi	r2,r17,7
   4c514:	10000726 	beq	r2,zero,4c534 <__subdf3+0xa8>
   4c518:	888003cc 	andi	r2,r17,15
   4c51c:	01000104 	movi	r4,4
   4c520:	11000426 	beq	r2,r4,4c534 <__subdf3+0xa8>
   4c524:	890b883a 	add	r5,r17,r4
   4c528:	2c63803a 	cmpltu	r17,r5,r17
   4c52c:	1c47883a 	add	r3,r3,r17
   4c530:	2823883a 	mov	r17,r5
   4c534:	1880202c 	andhi	r2,r3,128
   4c538:	10005926 	beq	r2,zero,4c6a0 <__subdf3+0x214>
   4c53c:	84000044 	addi	r16,r16,1
   4c540:	0081ffc4 	movi	r2,2047
   4c544:	8080be26 	beq	r16,r2,4c840 <__subdf3+0x3b4>
   4c548:	017fe034 	movhi	r5,65408
   4c54c:	297fffc4 	addi	r5,r5,-1
   4c550:	1946703a 	and	r3,r3,r5
   4c554:	1804977a 	slli	r2,r3,29
   4c558:	1806927a 	slli	r3,r3,9
   4c55c:	8822d0fa 	srli	r17,r17,3
   4c560:	8401ffcc 	andi	r16,r16,2047
   4c564:	180ad33a 	srli	r5,r3,12
   4c568:	9100004c 	andi	r4,r18,1
   4c56c:	1444b03a 	or	r2,r2,r17
   4c570:	80c1ffcc 	andi	r3,r16,2047
   4c574:	1820953a 	slli	r16,r3,20
   4c578:	20c03fcc 	andi	r3,r4,255
   4c57c:	180897fa 	slli	r4,r3,31
   4c580:	00c00434 	movhi	r3,16
   4c584:	18ffffc4 	addi	r3,r3,-1
   4c588:	28c6703a 	and	r3,r5,r3
   4c58c:	1c06b03a 	or	r3,r3,r16
   4c590:	1906b03a 	or	r3,r3,r4
   4c594:	dfc00417 	ldw	ra,16(sp)
   4c598:	dcc00317 	ldw	r19,12(sp)
   4c59c:	dc800217 	ldw	r18,8(sp)
   4c5a0:	dc400117 	ldw	r17,4(sp)
   4c5a4:	dc000017 	ldw	r16,0(sp)
   4c5a8:	dec00504 	addi	sp,sp,20
   4c5ac:	f800283a 	ret
   4c5b0:	0101ffc4 	movi	r4,2047
   4c5b4:	813fd626 	beq	r16,r4,4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4c5b8:	29402034 	orhi	r5,r5,128
   4c5bc:	01000e04 	movi	r4,56
   4c5c0:	2080a316 	blt	r4,r2,4c850 <__subdf3+0x3c4>
   4c5c4:	010007c4 	movi	r4,31
   4c5c8:	2080c616 	blt	r4,r2,4c8e4 <__subdf3+0x458>
   4c5cc:	01000804 	movi	r4,32
   4c5d0:	2089c83a 	sub	r4,r4,r2
   4c5d4:	2910983a 	sll	r8,r5,r4
   4c5d8:	308ed83a 	srl	r7,r6,r2
   4c5dc:	3108983a 	sll	r4,r6,r4
   4c5e0:	2884d83a 	srl	r2,r5,r2
   4c5e4:	41ccb03a 	or	r6,r8,r7
   4c5e8:	2008c03a 	cmpne	r4,r4,zero
   4c5ec:	310cb03a 	or	r6,r6,r4
   4c5f0:	898dc83a 	sub	r6,r17,r6
   4c5f4:	89a3803a 	cmpltu	r17,r17,r6
   4c5f8:	1887c83a 	sub	r3,r3,r2
   4c5fc:	1c47c83a 	sub	r3,r3,r17
   4c600:	3023883a 	mov	r17,r6
   4c604:	1880202c 	andhi	r2,r3,128
   4c608:	10002326 	beq	r2,zero,4c698 <__subdf3+0x20c>
   4c60c:	04c02034 	movhi	r19,128
   4c610:	9cffffc4 	addi	r19,r19,-1
   4c614:	1ce6703a 	and	r19,r3,r19
   4c618:	98007a26 	beq	r19,zero,4c804 <__subdf3+0x378>
   4c61c:	9809883a 	mov	r4,r19
   4c620:	004cf8c0 	call	4cf8c <__clzsi2>
   4c624:	113ffe04 	addi	r4,r2,-8
   4c628:	00c007c4 	movi	r3,31
   4c62c:	19007b16 	blt	r3,r4,4c81c <__subdf3+0x390>
   4c630:	00800804 	movi	r2,32
   4c634:	1105c83a 	sub	r2,r2,r4
   4c638:	8884d83a 	srl	r2,r17,r2
   4c63c:	9906983a 	sll	r3,r19,r4
   4c640:	8922983a 	sll	r17,r17,r4
   4c644:	10c4b03a 	or	r2,r2,r3
   4c648:	24007816 	blt	r4,r16,4c82c <__subdf3+0x3a0>
   4c64c:	2421c83a 	sub	r16,r4,r16
   4c650:	80c00044 	addi	r3,r16,1
   4c654:	010007c4 	movi	r4,31
   4c658:	20c09516 	blt	r4,r3,4c8b0 <__subdf3+0x424>
   4c65c:	01400804 	movi	r5,32
   4c660:	28cbc83a 	sub	r5,r5,r3
   4c664:	88c8d83a 	srl	r4,r17,r3
   4c668:	8962983a 	sll	r17,r17,r5
   4c66c:	114a983a 	sll	r5,r2,r5
   4c670:	10c6d83a 	srl	r3,r2,r3
   4c674:	8804c03a 	cmpne	r2,r17,zero
   4c678:	290ab03a 	or	r5,r5,r4
   4c67c:	28a2b03a 	or	r17,r5,r2
   4c680:	0021883a 	mov	r16,zero
   4c684:	003fa206 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4c688:	2090b03a 	or	r8,r4,r2
   4c68c:	40018e26 	beq	r8,zero,4ccc8 <__subdf3+0x83c>
   4c690:	1007883a 	mov	r3,r2
   4c694:	2023883a 	mov	r17,r4
   4c698:	888001cc 	andi	r2,r17,7
   4c69c:	103f9e1e 	bne	r2,zero,4c518 <__alt_mem_onchip_memory2_1+0xfffcb518>
   4c6a0:	1804977a 	slli	r2,r3,29
   4c6a4:	8822d0fa 	srli	r17,r17,3
   4c6a8:	1810d0fa 	srli	r8,r3,3
   4c6ac:	9100004c 	andi	r4,r18,1
   4c6b0:	1444b03a 	or	r2,r2,r17
   4c6b4:	00c1ffc4 	movi	r3,2047
   4c6b8:	80c02826 	beq	r16,r3,4c75c <__subdf3+0x2d0>
   4c6bc:	01400434 	movhi	r5,16
   4c6c0:	297fffc4 	addi	r5,r5,-1
   4c6c4:	80e0703a 	and	r16,r16,r3
   4c6c8:	414a703a 	and	r5,r8,r5
   4c6cc:	003fa806 	br	4c570 <__alt_mem_onchip_memory2_1+0xfffcb570>
   4c6d0:	0080630e 	bge	zero,r2,4c860 <__subdf3+0x3d4>
   4c6d4:	48003026 	beq	r9,zero,4c798 <__subdf3+0x30c>
   4c6d8:	0101ffc4 	movi	r4,2047
   4c6dc:	813f8c26 	beq	r16,r4,4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4c6e0:	29402034 	orhi	r5,r5,128
   4c6e4:	01000e04 	movi	r4,56
   4c6e8:	2080a90e 	bge	r4,r2,4c990 <__subdf3+0x504>
   4c6ec:	298cb03a 	or	r6,r5,r6
   4c6f0:	3012c03a 	cmpne	r9,r6,zero
   4c6f4:	0005883a 	mov	r2,zero
   4c6f8:	4c53883a 	add	r9,r9,r17
   4c6fc:	4c63803a 	cmpltu	r17,r9,r17
   4c700:	10c7883a 	add	r3,r2,r3
   4c704:	88c7883a 	add	r3,r17,r3
   4c708:	4823883a 	mov	r17,r9
   4c70c:	1880202c 	andhi	r2,r3,128
   4c710:	1000d026 	beq	r2,zero,4ca54 <__subdf3+0x5c8>
   4c714:	84000044 	addi	r16,r16,1
   4c718:	0081ffc4 	movi	r2,2047
   4c71c:	8080fe26 	beq	r16,r2,4cb18 <__subdf3+0x68c>
   4c720:	00bfe034 	movhi	r2,65408
   4c724:	10bfffc4 	addi	r2,r2,-1
   4c728:	1886703a 	and	r3,r3,r2
   4c72c:	880ad07a 	srli	r5,r17,1
   4c730:	180497fa 	slli	r2,r3,31
   4c734:	8900004c 	andi	r4,r17,1
   4c738:	2922b03a 	or	r17,r5,r4
   4c73c:	1806d07a 	srli	r3,r3,1
   4c740:	1462b03a 	or	r17,r2,r17
   4c744:	3825883a 	mov	r18,r7
   4c748:	003f7106 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4c74c:	2984b03a 	or	r2,r5,r6
   4c750:	103f6826 	beq	r2,zero,4c4f4 <__alt_mem_onchip_memory2_1+0xfffcb4f4>
   4c754:	39c03fcc 	andi	r7,r7,255
   4c758:	003f6706 	br	4c4f8 <__alt_mem_onchip_memory2_1+0xfffcb4f8>
   4c75c:	4086b03a 	or	r3,r8,r2
   4c760:	18015226 	beq	r3,zero,4ccac <__subdf3+0x820>
   4c764:	00c00434 	movhi	r3,16
   4c768:	41400234 	orhi	r5,r8,8
   4c76c:	18ffffc4 	addi	r3,r3,-1
   4c770:	28ca703a 	and	r5,r5,r3
   4c774:	003f7e06 	br	4c570 <__alt_mem_onchip_memory2_1+0xfffcb570>
   4c778:	10bfffc4 	addi	r2,r2,-1
   4c77c:	1000491e 	bne	r2,zero,4c8a4 <__subdf3+0x418>
   4c780:	898fc83a 	sub	r7,r17,r6
   4c784:	89e3803a 	cmpltu	r17,r17,r7
   4c788:	1947c83a 	sub	r3,r3,r5
   4c78c:	1c47c83a 	sub	r3,r3,r17
   4c790:	3823883a 	mov	r17,r7
   4c794:	003f9b06 	br	4c604 <__alt_mem_onchip_memory2_1+0xfffcb604>
   4c798:	2988b03a 	or	r4,r5,r6
   4c79c:	203f5c26 	beq	r4,zero,4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4c7a0:	10bfffc4 	addi	r2,r2,-1
   4c7a4:	1000931e 	bne	r2,zero,4c9f4 <__subdf3+0x568>
   4c7a8:	898d883a 	add	r6,r17,r6
   4c7ac:	3463803a 	cmpltu	r17,r6,r17
   4c7b0:	1947883a 	add	r3,r3,r5
   4c7b4:	88c7883a 	add	r3,r17,r3
   4c7b8:	3023883a 	mov	r17,r6
   4c7bc:	003fd306 	br	4c70c <__alt_mem_onchip_memory2_1+0xfffcb70c>
   4c7c0:	1000541e 	bne	r2,zero,4c914 <__subdf3+0x488>
   4c7c4:	80800044 	addi	r2,r16,1
   4c7c8:	1081ffcc 	andi	r2,r2,2047
   4c7cc:	01000044 	movi	r4,1
   4c7d0:	2080a20e 	bge	r4,r2,4ca5c <__subdf3+0x5d0>
   4c7d4:	8989c83a 	sub	r4,r17,r6
   4c7d8:	8905803a 	cmpltu	r2,r17,r4
   4c7dc:	1967c83a 	sub	r19,r3,r5
   4c7e0:	98a7c83a 	sub	r19,r19,r2
   4c7e4:	9880202c 	andhi	r2,r19,128
   4c7e8:	10006326 	beq	r2,zero,4c978 <__subdf3+0x4ec>
   4c7ec:	3463c83a 	sub	r17,r6,r17
   4c7f0:	28c7c83a 	sub	r3,r5,r3
   4c7f4:	344d803a 	cmpltu	r6,r6,r17
   4c7f8:	19a7c83a 	sub	r19,r3,r6
   4c7fc:	3825883a 	mov	r18,r7
   4c800:	983f861e 	bne	r19,zero,4c61c <__alt_mem_onchip_memory2_1+0xfffcb61c>
   4c804:	8809883a 	mov	r4,r17
   4c808:	004cf8c0 	call	4cf8c <__clzsi2>
   4c80c:	10800804 	addi	r2,r2,32
   4c810:	113ffe04 	addi	r4,r2,-8
   4c814:	00c007c4 	movi	r3,31
   4c818:	193f850e 	bge	r3,r4,4c630 <__alt_mem_onchip_memory2_1+0xfffcb630>
   4c81c:	10bff604 	addi	r2,r2,-40
   4c820:	8884983a 	sll	r2,r17,r2
   4c824:	0023883a 	mov	r17,zero
   4c828:	243f880e 	bge	r4,r16,4c64c <__alt_mem_onchip_memory2_1+0xfffcb64c>
   4c82c:	00ffe034 	movhi	r3,65408
   4c830:	18ffffc4 	addi	r3,r3,-1
   4c834:	8121c83a 	sub	r16,r16,r4
   4c838:	10c6703a 	and	r3,r2,r3
   4c83c:	003f3406 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4c840:	9100004c 	andi	r4,r18,1
   4c844:	000b883a 	mov	r5,zero
   4c848:	0005883a 	mov	r2,zero
   4c84c:	003f4806 	br	4c570 <__alt_mem_onchip_memory2_1+0xfffcb570>
   4c850:	298cb03a 	or	r6,r5,r6
   4c854:	300cc03a 	cmpne	r6,r6,zero
   4c858:	0005883a 	mov	r2,zero
   4c85c:	003f6406 	br	4c5f0 <__alt_mem_onchip_memory2_1+0xfffcb5f0>
   4c860:	10009a1e 	bne	r2,zero,4cacc <__subdf3+0x640>
   4c864:	82400044 	addi	r9,r16,1
   4c868:	4881ffcc 	andi	r2,r9,2047
   4c86c:	02800044 	movi	r10,1
   4c870:	5080670e 	bge	r10,r2,4ca10 <__subdf3+0x584>
   4c874:	0081ffc4 	movi	r2,2047
   4c878:	4880af26 	beq	r9,r2,4cb38 <__subdf3+0x6ac>
   4c87c:	898d883a 	add	r6,r17,r6
   4c880:	1945883a 	add	r2,r3,r5
   4c884:	3447803a 	cmpltu	r3,r6,r17
   4c888:	1887883a 	add	r3,r3,r2
   4c88c:	182297fa 	slli	r17,r3,31
   4c890:	300cd07a 	srli	r6,r6,1
   4c894:	1806d07a 	srli	r3,r3,1
   4c898:	4821883a 	mov	r16,r9
   4c89c:	89a2b03a 	or	r17,r17,r6
   4c8a0:	003f1b06 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4c8a4:	0101ffc4 	movi	r4,2047
   4c8a8:	813f441e 	bne	r16,r4,4c5bc <__alt_mem_onchip_memory2_1+0xfffcb5bc>
   4c8ac:	003f1806 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4c8b0:	843ff844 	addi	r16,r16,-31
   4c8b4:	01400804 	movi	r5,32
   4c8b8:	1408d83a 	srl	r4,r2,r16
   4c8bc:	19405026 	beq	r3,r5,4ca00 <__subdf3+0x574>
   4c8c0:	01401004 	movi	r5,64
   4c8c4:	28c7c83a 	sub	r3,r5,r3
   4c8c8:	10c4983a 	sll	r2,r2,r3
   4c8cc:	88a2b03a 	or	r17,r17,r2
   4c8d0:	8822c03a 	cmpne	r17,r17,zero
   4c8d4:	2462b03a 	or	r17,r4,r17
   4c8d8:	0007883a 	mov	r3,zero
   4c8dc:	0021883a 	mov	r16,zero
   4c8e0:	003f6d06 	br	4c698 <__alt_mem_onchip_memory2_1+0xfffcb698>
   4c8e4:	11fff804 	addi	r7,r2,-32
   4c8e8:	01000804 	movi	r4,32
   4c8ec:	29ced83a 	srl	r7,r5,r7
   4c8f0:	11004526 	beq	r2,r4,4ca08 <__subdf3+0x57c>
   4c8f4:	01001004 	movi	r4,64
   4c8f8:	2089c83a 	sub	r4,r4,r2
   4c8fc:	2904983a 	sll	r2,r5,r4
   4c900:	118cb03a 	or	r6,r2,r6
   4c904:	300cc03a 	cmpne	r6,r6,zero
   4c908:	398cb03a 	or	r6,r7,r6
   4c90c:	0005883a 	mov	r2,zero
   4c910:	003f3706 	br	4c5f0 <__alt_mem_onchip_memory2_1+0xfffcb5f0>
   4c914:	80002a26 	beq	r16,zero,4c9c0 <__subdf3+0x534>
   4c918:	0101ffc4 	movi	r4,2047
   4c91c:	49006626 	beq	r9,r4,4cab8 <__subdf3+0x62c>
   4c920:	0085c83a 	sub	r2,zero,r2
   4c924:	18c02034 	orhi	r3,r3,128
   4c928:	01000e04 	movi	r4,56
   4c92c:	20807e16 	blt	r4,r2,4cb28 <__subdf3+0x69c>
   4c930:	010007c4 	movi	r4,31
   4c934:	2080e716 	blt	r4,r2,4ccd4 <__subdf3+0x848>
   4c938:	01000804 	movi	r4,32
   4c93c:	2089c83a 	sub	r4,r4,r2
   4c940:	1914983a 	sll	r10,r3,r4
   4c944:	8890d83a 	srl	r8,r17,r2
   4c948:	8908983a 	sll	r4,r17,r4
   4c94c:	1884d83a 	srl	r2,r3,r2
   4c950:	5222b03a 	or	r17,r10,r8
   4c954:	2006c03a 	cmpne	r3,r4,zero
   4c958:	88e2b03a 	or	r17,r17,r3
   4c95c:	3463c83a 	sub	r17,r6,r17
   4c960:	2885c83a 	sub	r2,r5,r2
   4c964:	344d803a 	cmpltu	r6,r6,r17
   4c968:	1187c83a 	sub	r3,r2,r6
   4c96c:	4821883a 	mov	r16,r9
   4c970:	3825883a 	mov	r18,r7
   4c974:	003f2306 	br	4c604 <__alt_mem_onchip_memory2_1+0xfffcb604>
   4c978:	24d0b03a 	or	r8,r4,r19
   4c97c:	40001b1e 	bne	r8,zero,4c9ec <__subdf3+0x560>
   4c980:	0005883a 	mov	r2,zero
   4c984:	0009883a 	mov	r4,zero
   4c988:	0021883a 	mov	r16,zero
   4c98c:	003f4906 	br	4c6b4 <__alt_mem_onchip_memory2_1+0xfffcb6b4>
   4c990:	010007c4 	movi	r4,31
   4c994:	20803a16 	blt	r4,r2,4ca80 <__subdf3+0x5f4>
   4c998:	01000804 	movi	r4,32
   4c99c:	2089c83a 	sub	r4,r4,r2
   4c9a0:	2912983a 	sll	r9,r5,r4
   4c9a4:	3090d83a 	srl	r8,r6,r2
   4c9a8:	3108983a 	sll	r4,r6,r4
   4c9ac:	2884d83a 	srl	r2,r5,r2
   4c9b0:	4a12b03a 	or	r9,r9,r8
   4c9b4:	2008c03a 	cmpne	r4,r4,zero
   4c9b8:	4912b03a 	or	r9,r9,r4
   4c9bc:	003f4e06 	br	4c6f8 <__alt_mem_onchip_memory2_1+0xfffcb6f8>
   4c9c0:	1c48b03a 	or	r4,r3,r17
   4c9c4:	20003c26 	beq	r4,zero,4cab8 <__subdf3+0x62c>
   4c9c8:	0084303a 	nor	r2,zero,r2
   4c9cc:	1000381e 	bne	r2,zero,4cab0 <__subdf3+0x624>
   4c9d0:	3463c83a 	sub	r17,r6,r17
   4c9d4:	28c5c83a 	sub	r2,r5,r3
   4c9d8:	344d803a 	cmpltu	r6,r6,r17
   4c9dc:	1187c83a 	sub	r3,r2,r6
   4c9e0:	4821883a 	mov	r16,r9
   4c9e4:	3825883a 	mov	r18,r7
   4c9e8:	003f0606 	br	4c604 <__alt_mem_onchip_memory2_1+0xfffcb604>
   4c9ec:	2023883a 	mov	r17,r4
   4c9f0:	003f0906 	br	4c618 <__alt_mem_onchip_memory2_1+0xfffcb618>
   4c9f4:	0101ffc4 	movi	r4,2047
   4c9f8:	813f3a1e 	bne	r16,r4,4c6e4 <__alt_mem_onchip_memory2_1+0xfffcb6e4>
   4c9fc:	003ec406 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4ca00:	0005883a 	mov	r2,zero
   4ca04:	003fb106 	br	4c8cc <__alt_mem_onchip_memory2_1+0xfffcb8cc>
   4ca08:	0005883a 	mov	r2,zero
   4ca0c:	003fbc06 	br	4c900 <__alt_mem_onchip_memory2_1+0xfffcb900>
   4ca10:	1c44b03a 	or	r2,r3,r17
   4ca14:	80008e1e 	bne	r16,zero,4cc50 <__subdf3+0x7c4>
   4ca18:	1000c826 	beq	r2,zero,4cd3c <__subdf3+0x8b0>
   4ca1c:	2984b03a 	or	r2,r5,r6
   4ca20:	103ebb26 	beq	r2,zero,4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4ca24:	8989883a 	add	r4,r17,r6
   4ca28:	1945883a 	add	r2,r3,r5
   4ca2c:	2447803a 	cmpltu	r3,r4,r17
   4ca30:	1887883a 	add	r3,r3,r2
   4ca34:	1880202c 	andhi	r2,r3,128
   4ca38:	2023883a 	mov	r17,r4
   4ca3c:	103f1626 	beq	r2,zero,4c698 <__alt_mem_onchip_memory2_1+0xfffcb698>
   4ca40:	00bfe034 	movhi	r2,65408
   4ca44:	10bfffc4 	addi	r2,r2,-1
   4ca48:	5021883a 	mov	r16,r10
   4ca4c:	1886703a 	and	r3,r3,r2
   4ca50:	003eaf06 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4ca54:	3825883a 	mov	r18,r7
   4ca58:	003f0f06 	br	4c698 <__alt_mem_onchip_memory2_1+0xfffcb698>
   4ca5c:	1c44b03a 	or	r2,r3,r17
   4ca60:	8000251e 	bne	r16,zero,4caf8 <__subdf3+0x66c>
   4ca64:	1000661e 	bne	r2,zero,4cc00 <__subdf3+0x774>
   4ca68:	2990b03a 	or	r8,r5,r6
   4ca6c:	40009626 	beq	r8,zero,4ccc8 <__subdf3+0x83c>
   4ca70:	2807883a 	mov	r3,r5
   4ca74:	3023883a 	mov	r17,r6
   4ca78:	3825883a 	mov	r18,r7
   4ca7c:	003ea406 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4ca80:	127ff804 	addi	r9,r2,-32
   4ca84:	01000804 	movi	r4,32
   4ca88:	2a52d83a 	srl	r9,r5,r9
   4ca8c:	11008c26 	beq	r2,r4,4ccc0 <__subdf3+0x834>
   4ca90:	01001004 	movi	r4,64
   4ca94:	2085c83a 	sub	r2,r4,r2
   4ca98:	2884983a 	sll	r2,r5,r2
   4ca9c:	118cb03a 	or	r6,r2,r6
   4caa0:	300cc03a 	cmpne	r6,r6,zero
   4caa4:	4992b03a 	or	r9,r9,r6
   4caa8:	0005883a 	mov	r2,zero
   4caac:	003f1206 	br	4c6f8 <__alt_mem_onchip_memory2_1+0xfffcb6f8>
   4cab0:	0101ffc4 	movi	r4,2047
   4cab4:	493f9c1e 	bne	r9,r4,4c928 <__alt_mem_onchip_memory2_1+0xfffcb928>
   4cab8:	2807883a 	mov	r3,r5
   4cabc:	3023883a 	mov	r17,r6
   4cac0:	4821883a 	mov	r16,r9
   4cac4:	3825883a 	mov	r18,r7
   4cac8:	003e9106 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4cacc:	80001f1e 	bne	r16,zero,4cb4c <__subdf3+0x6c0>
   4cad0:	1c48b03a 	or	r4,r3,r17
   4cad4:	20005a26 	beq	r4,zero,4cc40 <__subdf3+0x7b4>
   4cad8:	0084303a 	nor	r2,zero,r2
   4cadc:	1000561e 	bne	r2,zero,4cc38 <__subdf3+0x7ac>
   4cae0:	89a3883a 	add	r17,r17,r6
   4cae4:	1945883a 	add	r2,r3,r5
   4cae8:	898d803a 	cmpltu	r6,r17,r6
   4caec:	3087883a 	add	r3,r6,r2
   4caf0:	4821883a 	mov	r16,r9
   4caf4:	003f0506 	br	4c70c <__alt_mem_onchip_memory2_1+0xfffcb70c>
   4caf8:	10002b1e 	bne	r2,zero,4cba8 <__subdf3+0x71c>
   4cafc:	2984b03a 	or	r2,r5,r6
   4cb00:	10008026 	beq	r2,zero,4cd04 <__subdf3+0x878>
   4cb04:	2807883a 	mov	r3,r5
   4cb08:	3023883a 	mov	r17,r6
   4cb0c:	3825883a 	mov	r18,r7
   4cb10:	0401ffc4 	movi	r16,2047
   4cb14:	003e7e06 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4cb18:	3809883a 	mov	r4,r7
   4cb1c:	0011883a 	mov	r8,zero
   4cb20:	0005883a 	mov	r2,zero
   4cb24:	003ee306 	br	4c6b4 <__alt_mem_onchip_memory2_1+0xfffcb6b4>
   4cb28:	1c62b03a 	or	r17,r3,r17
   4cb2c:	8822c03a 	cmpne	r17,r17,zero
   4cb30:	0005883a 	mov	r2,zero
   4cb34:	003f8906 	br	4c95c <__alt_mem_onchip_memory2_1+0xfffcb95c>
   4cb38:	3809883a 	mov	r4,r7
   4cb3c:	4821883a 	mov	r16,r9
   4cb40:	0011883a 	mov	r8,zero
   4cb44:	0005883a 	mov	r2,zero
   4cb48:	003eda06 	br	4c6b4 <__alt_mem_onchip_memory2_1+0xfffcb6b4>
   4cb4c:	0101ffc4 	movi	r4,2047
   4cb50:	49003b26 	beq	r9,r4,4cc40 <__subdf3+0x7b4>
   4cb54:	0085c83a 	sub	r2,zero,r2
   4cb58:	18c02034 	orhi	r3,r3,128
   4cb5c:	01000e04 	movi	r4,56
   4cb60:	20806e16 	blt	r4,r2,4cd1c <__subdf3+0x890>
   4cb64:	010007c4 	movi	r4,31
   4cb68:	20807716 	blt	r4,r2,4cd48 <__subdf3+0x8bc>
   4cb6c:	01000804 	movi	r4,32
   4cb70:	2089c83a 	sub	r4,r4,r2
   4cb74:	1914983a 	sll	r10,r3,r4
   4cb78:	8890d83a 	srl	r8,r17,r2
   4cb7c:	8908983a 	sll	r4,r17,r4
   4cb80:	1884d83a 	srl	r2,r3,r2
   4cb84:	5222b03a 	or	r17,r10,r8
   4cb88:	2006c03a 	cmpne	r3,r4,zero
   4cb8c:	88e2b03a 	or	r17,r17,r3
   4cb90:	89a3883a 	add	r17,r17,r6
   4cb94:	1145883a 	add	r2,r2,r5
   4cb98:	898d803a 	cmpltu	r6,r17,r6
   4cb9c:	3087883a 	add	r3,r6,r2
   4cba0:	4821883a 	mov	r16,r9
   4cba4:	003ed906 	br	4c70c <__alt_mem_onchip_memory2_1+0xfffcb70c>
   4cba8:	2984b03a 	or	r2,r5,r6
   4cbac:	10004226 	beq	r2,zero,4ccb8 <__subdf3+0x82c>
   4cbb0:	1808d0fa 	srli	r4,r3,3
   4cbb4:	8822d0fa 	srli	r17,r17,3
   4cbb8:	1806977a 	slli	r3,r3,29
   4cbbc:	2080022c 	andhi	r2,r4,8
   4cbc0:	1c62b03a 	or	r17,r3,r17
   4cbc4:	10000826 	beq	r2,zero,4cbe8 <__subdf3+0x75c>
   4cbc8:	2812d0fa 	srli	r9,r5,3
   4cbcc:	4880022c 	andhi	r2,r9,8
   4cbd0:	1000051e 	bne	r2,zero,4cbe8 <__subdf3+0x75c>
   4cbd4:	300cd0fa 	srli	r6,r6,3
   4cbd8:	2804977a 	slli	r2,r5,29
   4cbdc:	4809883a 	mov	r4,r9
   4cbe0:	3825883a 	mov	r18,r7
   4cbe4:	11a2b03a 	or	r17,r2,r6
   4cbe8:	8806d77a 	srli	r3,r17,29
   4cbec:	200890fa 	slli	r4,r4,3
   4cbf0:	882290fa 	slli	r17,r17,3
   4cbf4:	0401ffc4 	movi	r16,2047
   4cbf8:	1906b03a 	or	r3,r3,r4
   4cbfc:	003e4406 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4cc00:	2984b03a 	or	r2,r5,r6
   4cc04:	103e4226 	beq	r2,zero,4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4cc08:	8989c83a 	sub	r4,r17,r6
   4cc0c:	8911803a 	cmpltu	r8,r17,r4
   4cc10:	1945c83a 	sub	r2,r3,r5
   4cc14:	1205c83a 	sub	r2,r2,r8
   4cc18:	1200202c 	andhi	r8,r2,128
   4cc1c:	403e9a26 	beq	r8,zero,4c688 <__alt_mem_onchip_memory2_1+0xfffcb688>
   4cc20:	3463c83a 	sub	r17,r6,r17
   4cc24:	28c5c83a 	sub	r2,r5,r3
   4cc28:	344d803a 	cmpltu	r6,r6,r17
   4cc2c:	1187c83a 	sub	r3,r2,r6
   4cc30:	3825883a 	mov	r18,r7
   4cc34:	003e3606 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4cc38:	0101ffc4 	movi	r4,2047
   4cc3c:	493fc71e 	bne	r9,r4,4cb5c <__alt_mem_onchip_memory2_1+0xfffcbb5c>
   4cc40:	2807883a 	mov	r3,r5
   4cc44:	3023883a 	mov	r17,r6
   4cc48:	4821883a 	mov	r16,r9
   4cc4c:	003e3006 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4cc50:	10003626 	beq	r2,zero,4cd2c <__subdf3+0x8a0>
   4cc54:	2984b03a 	or	r2,r5,r6
   4cc58:	10001726 	beq	r2,zero,4ccb8 <__subdf3+0x82c>
   4cc5c:	1808d0fa 	srli	r4,r3,3
   4cc60:	8822d0fa 	srli	r17,r17,3
   4cc64:	1806977a 	slli	r3,r3,29
   4cc68:	2080022c 	andhi	r2,r4,8
   4cc6c:	1c62b03a 	or	r17,r3,r17
   4cc70:	10000726 	beq	r2,zero,4cc90 <__subdf3+0x804>
   4cc74:	2812d0fa 	srli	r9,r5,3
   4cc78:	4880022c 	andhi	r2,r9,8
   4cc7c:	1000041e 	bne	r2,zero,4cc90 <__subdf3+0x804>
   4cc80:	300cd0fa 	srli	r6,r6,3
   4cc84:	2804977a 	slli	r2,r5,29
   4cc88:	4809883a 	mov	r4,r9
   4cc8c:	11a2b03a 	or	r17,r2,r6
   4cc90:	8806d77a 	srli	r3,r17,29
   4cc94:	200890fa 	slli	r4,r4,3
   4cc98:	882290fa 	slli	r17,r17,3
   4cc9c:	3825883a 	mov	r18,r7
   4cca0:	1906b03a 	or	r3,r3,r4
   4cca4:	0401ffc4 	movi	r16,2047
   4cca8:	003e1906 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4ccac:	000b883a 	mov	r5,zero
   4ccb0:	0005883a 	mov	r2,zero
   4ccb4:	003e2e06 	br	4c570 <__alt_mem_onchip_memory2_1+0xfffcb570>
   4ccb8:	0401ffc4 	movi	r16,2047
   4ccbc:	003e1406 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4ccc0:	0005883a 	mov	r2,zero
   4ccc4:	003f7506 	br	4ca9c <__alt_mem_onchip_memory2_1+0xfffcba9c>
   4ccc8:	0005883a 	mov	r2,zero
   4cccc:	0009883a 	mov	r4,zero
   4ccd0:	003e7806 	br	4c6b4 <__alt_mem_onchip_memory2_1+0xfffcb6b4>
   4ccd4:	123ff804 	addi	r8,r2,-32
   4ccd8:	01000804 	movi	r4,32
   4ccdc:	1a10d83a 	srl	r8,r3,r8
   4cce0:	11002526 	beq	r2,r4,4cd78 <__subdf3+0x8ec>
   4cce4:	01001004 	movi	r4,64
   4cce8:	2085c83a 	sub	r2,r4,r2
   4ccec:	1884983a 	sll	r2,r3,r2
   4ccf0:	1444b03a 	or	r2,r2,r17
   4ccf4:	1004c03a 	cmpne	r2,r2,zero
   4ccf8:	40a2b03a 	or	r17,r8,r2
   4ccfc:	0005883a 	mov	r2,zero
   4cd00:	003f1606 	br	4c95c <__alt_mem_onchip_memory2_1+0xfffcb95c>
   4cd04:	02000434 	movhi	r8,16
   4cd08:	0009883a 	mov	r4,zero
   4cd0c:	423fffc4 	addi	r8,r8,-1
   4cd10:	00bfffc4 	movi	r2,-1
   4cd14:	0401ffc4 	movi	r16,2047
   4cd18:	003e6606 	br	4c6b4 <__alt_mem_onchip_memory2_1+0xfffcb6b4>
   4cd1c:	1c62b03a 	or	r17,r3,r17
   4cd20:	8822c03a 	cmpne	r17,r17,zero
   4cd24:	0005883a 	mov	r2,zero
   4cd28:	003f9906 	br	4cb90 <__alt_mem_onchip_memory2_1+0xfffcbb90>
   4cd2c:	2807883a 	mov	r3,r5
   4cd30:	3023883a 	mov	r17,r6
   4cd34:	0401ffc4 	movi	r16,2047
   4cd38:	003df506 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4cd3c:	2807883a 	mov	r3,r5
   4cd40:	3023883a 	mov	r17,r6
   4cd44:	003df206 	br	4c510 <__alt_mem_onchip_memory2_1+0xfffcb510>
   4cd48:	123ff804 	addi	r8,r2,-32
   4cd4c:	01000804 	movi	r4,32
   4cd50:	1a10d83a 	srl	r8,r3,r8
   4cd54:	11000a26 	beq	r2,r4,4cd80 <__subdf3+0x8f4>
   4cd58:	01001004 	movi	r4,64
   4cd5c:	2085c83a 	sub	r2,r4,r2
   4cd60:	1884983a 	sll	r2,r3,r2
   4cd64:	1444b03a 	or	r2,r2,r17
   4cd68:	1004c03a 	cmpne	r2,r2,zero
   4cd6c:	40a2b03a 	or	r17,r8,r2
   4cd70:	0005883a 	mov	r2,zero
   4cd74:	003f8606 	br	4cb90 <__alt_mem_onchip_memory2_1+0xfffcbb90>
   4cd78:	0005883a 	mov	r2,zero
   4cd7c:	003fdc06 	br	4ccf0 <__alt_mem_onchip_memory2_1+0xfffcbcf0>
   4cd80:	0005883a 	mov	r2,zero
   4cd84:	003ff706 	br	4cd64 <__alt_mem_onchip_memory2_1+0xfffcbd64>

0004cd88 <__fixdfsi>:
   4cd88:	280cd53a 	srli	r6,r5,20
   4cd8c:	00c00434 	movhi	r3,16
   4cd90:	18ffffc4 	addi	r3,r3,-1
   4cd94:	3181ffcc 	andi	r6,r6,2047
   4cd98:	01c0ff84 	movi	r7,1022
   4cd9c:	28c6703a 	and	r3,r5,r3
   4cda0:	280ad7fa 	srli	r5,r5,31
   4cda4:	3980120e 	bge	r7,r6,4cdf0 <__fixdfsi+0x68>
   4cda8:	00810744 	movi	r2,1053
   4cdac:	11800c16 	blt	r2,r6,4cde0 <__fixdfsi+0x58>
   4cdb0:	00810cc4 	movi	r2,1075
   4cdb4:	1185c83a 	sub	r2,r2,r6
   4cdb8:	01c007c4 	movi	r7,31
   4cdbc:	18c00434 	orhi	r3,r3,16
   4cdc0:	38800d16 	blt	r7,r2,4cdf8 <__fixdfsi+0x70>
   4cdc4:	31befb44 	addi	r6,r6,-1043
   4cdc8:	2084d83a 	srl	r2,r4,r2
   4cdcc:	1986983a 	sll	r3,r3,r6
   4cdd0:	1884b03a 	or	r2,r3,r2
   4cdd4:	28000726 	beq	r5,zero,4cdf4 <__fixdfsi+0x6c>
   4cdd8:	0085c83a 	sub	r2,zero,r2
   4cddc:	f800283a 	ret
   4cde0:	00a00034 	movhi	r2,32768
   4cde4:	10bfffc4 	addi	r2,r2,-1
   4cde8:	2885883a 	add	r2,r5,r2
   4cdec:	f800283a 	ret
   4cdf0:	0005883a 	mov	r2,zero
   4cdf4:	f800283a 	ret
   4cdf8:	008104c4 	movi	r2,1043
   4cdfc:	1185c83a 	sub	r2,r2,r6
   4ce00:	1884d83a 	srl	r2,r3,r2
   4ce04:	003ff306 	br	4cdd4 <__alt_mem_onchip_memory2_1+0xfffcbdd4>

0004ce08 <__floatsidf>:
   4ce08:	defffd04 	addi	sp,sp,-12
   4ce0c:	dfc00215 	stw	ra,8(sp)
   4ce10:	dc400115 	stw	r17,4(sp)
   4ce14:	dc000015 	stw	r16,0(sp)
   4ce18:	20002b26 	beq	r4,zero,4cec8 <__floatsidf+0xc0>
   4ce1c:	2023883a 	mov	r17,r4
   4ce20:	2020d7fa 	srli	r16,r4,31
   4ce24:	20002d16 	blt	r4,zero,4cedc <__floatsidf+0xd4>
   4ce28:	8809883a 	mov	r4,r17
   4ce2c:	004cf8c0 	call	4cf8c <__clzsi2>
   4ce30:	01410784 	movi	r5,1054
   4ce34:	288bc83a 	sub	r5,r5,r2
   4ce38:	01010cc4 	movi	r4,1075
   4ce3c:	2149c83a 	sub	r4,r4,r5
   4ce40:	00c007c4 	movi	r3,31
   4ce44:	1900160e 	bge	r3,r4,4cea0 <__floatsidf+0x98>
   4ce48:	00c104c4 	movi	r3,1043
   4ce4c:	1947c83a 	sub	r3,r3,r5
   4ce50:	88c6983a 	sll	r3,r17,r3
   4ce54:	00800434 	movhi	r2,16
   4ce58:	10bfffc4 	addi	r2,r2,-1
   4ce5c:	1886703a 	and	r3,r3,r2
   4ce60:	2941ffcc 	andi	r5,r5,2047
   4ce64:	800d883a 	mov	r6,r16
   4ce68:	0005883a 	mov	r2,zero
   4ce6c:	280a953a 	slli	r5,r5,20
   4ce70:	31803fcc 	andi	r6,r6,255
   4ce74:	01000434 	movhi	r4,16
   4ce78:	300c97fa 	slli	r6,r6,31
   4ce7c:	213fffc4 	addi	r4,r4,-1
   4ce80:	1906703a 	and	r3,r3,r4
   4ce84:	1946b03a 	or	r3,r3,r5
   4ce88:	1986b03a 	or	r3,r3,r6
   4ce8c:	dfc00217 	ldw	ra,8(sp)
   4ce90:	dc400117 	ldw	r17,4(sp)
   4ce94:	dc000017 	ldw	r16,0(sp)
   4ce98:	dec00304 	addi	sp,sp,12
   4ce9c:	f800283a 	ret
   4cea0:	00c002c4 	movi	r3,11
   4cea4:	1887c83a 	sub	r3,r3,r2
   4cea8:	88c6d83a 	srl	r3,r17,r3
   4ceac:	8904983a 	sll	r2,r17,r4
   4ceb0:	01000434 	movhi	r4,16
   4ceb4:	213fffc4 	addi	r4,r4,-1
   4ceb8:	2941ffcc 	andi	r5,r5,2047
   4cebc:	1906703a 	and	r3,r3,r4
   4cec0:	800d883a 	mov	r6,r16
   4cec4:	003fe906 	br	4ce6c <__alt_mem_onchip_memory2_1+0xfffcbe6c>
   4cec8:	000d883a 	mov	r6,zero
   4cecc:	000b883a 	mov	r5,zero
   4ced0:	0007883a 	mov	r3,zero
   4ced4:	0005883a 	mov	r2,zero
   4ced8:	003fe406 	br	4ce6c <__alt_mem_onchip_memory2_1+0xfffcbe6c>
   4cedc:	0123c83a 	sub	r17,zero,r4
   4cee0:	003fd106 	br	4ce28 <__alt_mem_onchip_memory2_1+0xfffcbe28>

0004cee4 <__floatunsidf>:
   4cee4:	defffe04 	addi	sp,sp,-8
   4cee8:	dc000015 	stw	r16,0(sp)
   4ceec:	dfc00115 	stw	ra,4(sp)
   4cef0:	2021883a 	mov	r16,r4
   4cef4:	20002226 	beq	r4,zero,4cf80 <__floatunsidf+0x9c>
   4cef8:	004cf8c0 	call	4cf8c <__clzsi2>
   4cefc:	01010784 	movi	r4,1054
   4cf00:	2089c83a 	sub	r4,r4,r2
   4cf04:	01810cc4 	movi	r6,1075
   4cf08:	310dc83a 	sub	r6,r6,r4
   4cf0c:	00c007c4 	movi	r3,31
   4cf10:	1980120e 	bge	r3,r6,4cf5c <__floatunsidf+0x78>
   4cf14:	00c104c4 	movi	r3,1043
   4cf18:	1907c83a 	sub	r3,r3,r4
   4cf1c:	80ca983a 	sll	r5,r16,r3
   4cf20:	00800434 	movhi	r2,16
   4cf24:	10bfffc4 	addi	r2,r2,-1
   4cf28:	2101ffcc 	andi	r4,r4,2047
   4cf2c:	0021883a 	mov	r16,zero
   4cf30:	288a703a 	and	r5,r5,r2
   4cf34:	2008953a 	slli	r4,r4,20
   4cf38:	00c00434 	movhi	r3,16
   4cf3c:	18ffffc4 	addi	r3,r3,-1
   4cf40:	28c6703a 	and	r3,r5,r3
   4cf44:	8005883a 	mov	r2,r16
   4cf48:	1906b03a 	or	r3,r3,r4
   4cf4c:	dfc00117 	ldw	ra,4(sp)
   4cf50:	dc000017 	ldw	r16,0(sp)
   4cf54:	dec00204 	addi	sp,sp,8
   4cf58:	f800283a 	ret
   4cf5c:	00c002c4 	movi	r3,11
   4cf60:	188bc83a 	sub	r5,r3,r2
   4cf64:	814ad83a 	srl	r5,r16,r5
   4cf68:	00c00434 	movhi	r3,16
   4cf6c:	18ffffc4 	addi	r3,r3,-1
   4cf70:	81a0983a 	sll	r16,r16,r6
   4cf74:	2101ffcc 	andi	r4,r4,2047
   4cf78:	28ca703a 	and	r5,r5,r3
   4cf7c:	003fed06 	br	4cf34 <__alt_mem_onchip_memory2_1+0xfffcbf34>
   4cf80:	0009883a 	mov	r4,zero
   4cf84:	000b883a 	mov	r5,zero
   4cf88:	003fea06 	br	4cf34 <__alt_mem_onchip_memory2_1+0xfffcbf34>

0004cf8c <__clzsi2>:
   4cf8c:	00bfffd4 	movui	r2,65535
   4cf90:	11000536 	bltu	r2,r4,4cfa8 <__clzsi2+0x1c>
   4cf94:	00803fc4 	movi	r2,255
   4cf98:	11000f36 	bltu	r2,r4,4cfd8 <__clzsi2+0x4c>
   4cf9c:	00800804 	movi	r2,32
   4cfa0:	0007883a 	mov	r3,zero
   4cfa4:	00000506 	br	4cfbc <__clzsi2+0x30>
   4cfa8:	00804034 	movhi	r2,256
   4cfac:	10bfffc4 	addi	r2,r2,-1
   4cfb0:	11000c2e 	bgeu	r2,r4,4cfe4 <__clzsi2+0x58>
   4cfb4:	00800204 	movi	r2,8
   4cfb8:	00c00604 	movi	r3,24
   4cfbc:	20c8d83a 	srl	r4,r4,r3
   4cfc0:	00c00174 	movhi	r3,5
   4cfc4:	18fef504 	addi	r3,r3,-1068
   4cfc8:	1909883a 	add	r4,r3,r4
   4cfcc:	20c00003 	ldbu	r3,0(r4)
   4cfd0:	10c5c83a 	sub	r2,r2,r3
   4cfd4:	f800283a 	ret
   4cfd8:	00800604 	movi	r2,24
   4cfdc:	00c00204 	movi	r3,8
   4cfe0:	003ff606 	br	4cfbc <__alt_mem_onchip_memory2_1+0xfffcbfbc>
   4cfe4:	00800404 	movi	r2,16
   4cfe8:	1007883a 	mov	r3,r2
   4cfec:	003ff306 	br	4cfbc <__alt_mem_onchip_memory2_1+0xfffcbfbc>

0004cff0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4cff0:	defffe04 	addi	sp,sp,-8
   4cff4:	dfc00115 	stw	ra,4(sp)
   4cff8:	df000015 	stw	fp,0(sp)
   4cffc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d000:	d0a00b17 	ldw	r2,-32724(gp)
   4d004:	10000326 	beq	r2,zero,4d014 <alt_get_errno+0x24>
   4d008:	d0a00b17 	ldw	r2,-32724(gp)
   4d00c:	103ee83a 	callr	r2
   4d010:	00000106 	br	4d018 <alt_get_errno+0x28>
   4d014:	d0a6d204 	addi	r2,gp,-25784
}
   4d018:	e037883a 	mov	sp,fp
   4d01c:	dfc00117 	ldw	ra,4(sp)
   4d020:	df000017 	ldw	fp,0(sp)
   4d024:	dec00204 	addi	sp,sp,8
   4d028:	f800283a 	ret

0004d02c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   4d02c:	defffb04 	addi	sp,sp,-20
   4d030:	dfc00415 	stw	ra,16(sp)
   4d034:	df000315 	stw	fp,12(sp)
   4d038:	df000304 	addi	fp,sp,12
   4d03c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   4d040:	e0bfff17 	ldw	r2,-4(fp)
   4d044:	10000616 	blt	r2,zero,4d060 <close+0x34>
   4d048:	e0bfff17 	ldw	r2,-4(fp)
   4d04c:	10c00324 	muli	r3,r2,12
   4d050:	00800174 	movhi	r2,5
   4d054:	10817504 	addi	r2,r2,1492
   4d058:	1885883a 	add	r2,r3,r2
   4d05c:	00000106 	br	4d064 <close+0x38>
   4d060:	0005883a 	mov	r2,zero
   4d064:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   4d068:	e0bffd17 	ldw	r2,-12(fp)
   4d06c:	10001926 	beq	r2,zero,4d0d4 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   4d070:	e0bffd17 	ldw	r2,-12(fp)
   4d074:	10800017 	ldw	r2,0(r2)
   4d078:	10800417 	ldw	r2,16(r2)
   4d07c:	10000626 	beq	r2,zero,4d098 <close+0x6c>
   4d080:	e0bffd17 	ldw	r2,-12(fp)
   4d084:	10800017 	ldw	r2,0(r2)
   4d088:	10800417 	ldw	r2,16(r2)
   4d08c:	e13ffd17 	ldw	r4,-12(fp)
   4d090:	103ee83a 	callr	r2
   4d094:	00000106 	br	4d09c <close+0x70>
   4d098:	0005883a 	mov	r2,zero
   4d09c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   4d0a0:	e13fff17 	ldw	r4,-4(fp)
   4d0a4:	004d98c0 	call	4d98c <alt_release_fd>
    if (rval < 0)
   4d0a8:	e0bffe17 	ldw	r2,-8(fp)
   4d0ac:	1000070e 	bge	r2,zero,4d0cc <close+0xa0>
    {
      ALT_ERRNO = -rval;
   4d0b0:	004cff00 	call	4cff0 <alt_get_errno>
   4d0b4:	1007883a 	mov	r3,r2
   4d0b8:	e0bffe17 	ldw	r2,-8(fp)
   4d0bc:	0085c83a 	sub	r2,zero,r2
   4d0c0:	18800015 	stw	r2,0(r3)
      return -1;
   4d0c4:	00bfffc4 	movi	r2,-1
   4d0c8:	00000706 	br	4d0e8 <close+0xbc>
    }
    return 0;
   4d0cc:	0005883a 	mov	r2,zero
   4d0d0:	00000506 	br	4d0e8 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d0d4:	004cff00 	call	4cff0 <alt_get_errno>
   4d0d8:	1007883a 	mov	r3,r2
   4d0dc:	00801444 	movi	r2,81
   4d0e0:	18800015 	stw	r2,0(r3)
    return -1;
   4d0e4:	00bfffc4 	movi	r2,-1
  }
}
   4d0e8:	e037883a 	mov	sp,fp
   4d0ec:	dfc00117 	ldw	ra,4(sp)
   4d0f0:	df000017 	ldw	fp,0(sp)
   4d0f4:	dec00204 	addi	sp,sp,8
   4d0f8:	f800283a 	ret

0004d0fc <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   4d0fc:	defffc04 	addi	sp,sp,-16
   4d100:	df000315 	stw	fp,12(sp)
   4d104:	df000304 	addi	fp,sp,12
   4d108:	e13ffd15 	stw	r4,-12(fp)
   4d10c:	e17ffe15 	stw	r5,-8(fp)
   4d110:	e1bfff15 	stw	r6,-4(fp)
  return len;
   4d114:	e0bfff17 	ldw	r2,-4(fp)
}
   4d118:	e037883a 	mov	sp,fp
   4d11c:	df000017 	ldw	fp,0(sp)
   4d120:	dec00104 	addi	sp,sp,4
   4d124:	f800283a 	ret

0004d128 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d128:	defffe04 	addi	sp,sp,-8
   4d12c:	dfc00115 	stw	ra,4(sp)
   4d130:	df000015 	stw	fp,0(sp)
   4d134:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d138:	d0a00b17 	ldw	r2,-32724(gp)
   4d13c:	10000326 	beq	r2,zero,4d14c <alt_get_errno+0x24>
   4d140:	d0a00b17 	ldw	r2,-32724(gp)
   4d144:	103ee83a 	callr	r2
   4d148:	00000106 	br	4d150 <alt_get_errno+0x28>
   4d14c:	d0a6d204 	addi	r2,gp,-25784
}
   4d150:	e037883a 	mov	sp,fp
   4d154:	dfc00117 	ldw	ra,4(sp)
   4d158:	df000017 	ldw	fp,0(sp)
   4d15c:	dec00204 	addi	sp,sp,8
   4d160:	f800283a 	ret

0004d164 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   4d164:	defffb04 	addi	sp,sp,-20
   4d168:	dfc00415 	stw	ra,16(sp)
   4d16c:	df000315 	stw	fp,12(sp)
   4d170:	df000304 	addi	fp,sp,12
   4d174:	e13ffe15 	stw	r4,-8(fp)
   4d178:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d17c:	e0bffe17 	ldw	r2,-8(fp)
   4d180:	10000616 	blt	r2,zero,4d19c <fstat+0x38>
   4d184:	e0bffe17 	ldw	r2,-8(fp)
   4d188:	10c00324 	muli	r3,r2,12
   4d18c:	00800174 	movhi	r2,5
   4d190:	10817504 	addi	r2,r2,1492
   4d194:	1885883a 	add	r2,r3,r2
   4d198:	00000106 	br	4d1a0 <fstat+0x3c>
   4d19c:	0005883a 	mov	r2,zero
   4d1a0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   4d1a4:	e0bffd17 	ldw	r2,-12(fp)
   4d1a8:	10001026 	beq	r2,zero,4d1ec <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   4d1ac:	e0bffd17 	ldw	r2,-12(fp)
   4d1b0:	10800017 	ldw	r2,0(r2)
   4d1b4:	10800817 	ldw	r2,32(r2)
   4d1b8:	10000726 	beq	r2,zero,4d1d8 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   4d1bc:	e0bffd17 	ldw	r2,-12(fp)
   4d1c0:	10800017 	ldw	r2,0(r2)
   4d1c4:	10800817 	ldw	r2,32(r2)
   4d1c8:	e17fff17 	ldw	r5,-4(fp)
   4d1cc:	e13ffd17 	ldw	r4,-12(fp)
   4d1d0:	103ee83a 	callr	r2
   4d1d4:	00000a06 	br	4d200 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   4d1d8:	e0bfff17 	ldw	r2,-4(fp)
   4d1dc:	00c80004 	movi	r3,8192
   4d1e0:	10c00115 	stw	r3,4(r2)
      return 0;
   4d1e4:	0005883a 	mov	r2,zero
   4d1e8:	00000506 	br	4d200 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d1ec:	004d1280 	call	4d128 <alt_get_errno>
   4d1f0:	1007883a 	mov	r3,r2
   4d1f4:	00801444 	movi	r2,81
   4d1f8:	18800015 	stw	r2,0(r3)
    return -1;
   4d1fc:	00bfffc4 	movi	r2,-1
  }
}
   4d200:	e037883a 	mov	sp,fp
   4d204:	dfc00117 	ldw	ra,4(sp)
   4d208:	df000017 	ldw	fp,0(sp)
   4d20c:	dec00204 	addi	sp,sp,8
   4d210:	f800283a 	ret

0004d214 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4d214:	defff904 	addi	sp,sp,-28
   4d218:	dfc00615 	stw	ra,24(sp)
   4d21c:	df000515 	stw	fp,20(sp)
   4d220:	df000504 	addi	fp,sp,20
   4d224:	e13ffc15 	stw	r4,-16(fp)
   4d228:	e17ffd15 	stw	r5,-12(fp)
   4d22c:	e1bffe15 	stw	r6,-8(fp)
   4d230:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   4d234:	e0800217 	ldw	r2,8(fp)
   4d238:	d8800015 	stw	r2,0(sp)
   4d23c:	e1ffff17 	ldw	r7,-4(fp)
   4d240:	e1bffe17 	ldw	r6,-8(fp)
   4d244:	e17ffd17 	ldw	r5,-12(fp)
   4d248:	e13ffc17 	ldw	r4,-16(fp)
   4d24c:	004d3c40 	call	4d3c4 <alt_iic_isr_register>
}  
   4d250:	e037883a 	mov	sp,fp
   4d254:	dfc00117 	ldw	ra,4(sp)
   4d258:	df000017 	ldw	fp,0(sp)
   4d25c:	dec00204 	addi	sp,sp,8
   4d260:	f800283a 	ret

0004d264 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   4d264:	defff904 	addi	sp,sp,-28
   4d268:	df000615 	stw	fp,24(sp)
   4d26c:	df000604 	addi	fp,sp,24
   4d270:	e13ffe15 	stw	r4,-8(fp)
   4d274:	e17fff15 	stw	r5,-4(fp)
   4d278:	e0bfff17 	ldw	r2,-4(fp)
   4d27c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4d280:	0005303a 	rdctl	r2,status
   4d284:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4d288:	e0fffb17 	ldw	r3,-20(fp)
   4d28c:	00bfff84 	movi	r2,-2
   4d290:	1884703a 	and	r2,r3,r2
   4d294:	1001703a 	wrctl	status,r2
  
  return context;
   4d298:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4d29c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   4d2a0:	00c00044 	movi	r3,1
   4d2a4:	e0bffa17 	ldw	r2,-24(fp)
   4d2a8:	1884983a 	sll	r2,r3,r2
   4d2ac:	1007883a 	mov	r3,r2
   4d2b0:	d0a6d317 	ldw	r2,-25780(gp)
   4d2b4:	1884b03a 	or	r2,r3,r2
   4d2b8:	d0a6d315 	stw	r2,-25780(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4d2bc:	d0a6d317 	ldw	r2,-25780(gp)
   4d2c0:	100170fa 	wrctl	ienable,r2
   4d2c4:	e0bffc17 	ldw	r2,-16(fp)
   4d2c8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4d2cc:	e0bffd17 	ldw	r2,-12(fp)
   4d2d0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4d2d4:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   4d2d8:	0001883a 	nop
}
   4d2dc:	e037883a 	mov	sp,fp
   4d2e0:	df000017 	ldw	fp,0(sp)
   4d2e4:	dec00104 	addi	sp,sp,4
   4d2e8:	f800283a 	ret

0004d2ec <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   4d2ec:	defff904 	addi	sp,sp,-28
   4d2f0:	df000615 	stw	fp,24(sp)
   4d2f4:	df000604 	addi	fp,sp,24
   4d2f8:	e13ffe15 	stw	r4,-8(fp)
   4d2fc:	e17fff15 	stw	r5,-4(fp)
   4d300:	e0bfff17 	ldw	r2,-4(fp)
   4d304:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4d308:	0005303a 	rdctl	r2,status
   4d30c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4d310:	e0fffb17 	ldw	r3,-20(fp)
   4d314:	00bfff84 	movi	r2,-2
   4d318:	1884703a 	and	r2,r3,r2
   4d31c:	1001703a 	wrctl	status,r2
  
  return context;
   4d320:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   4d324:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   4d328:	00c00044 	movi	r3,1
   4d32c:	e0bffa17 	ldw	r2,-24(fp)
   4d330:	1884983a 	sll	r2,r3,r2
   4d334:	0084303a 	nor	r2,zero,r2
   4d338:	1007883a 	mov	r3,r2
   4d33c:	d0a6d317 	ldw	r2,-25780(gp)
   4d340:	1884703a 	and	r2,r3,r2
   4d344:	d0a6d315 	stw	r2,-25780(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   4d348:	d0a6d317 	ldw	r2,-25780(gp)
   4d34c:	100170fa 	wrctl	ienable,r2
   4d350:	e0bffc17 	ldw	r2,-16(fp)
   4d354:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4d358:	e0bffd17 	ldw	r2,-12(fp)
   4d35c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   4d360:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   4d364:	0001883a 	nop
}
   4d368:	e037883a 	mov	sp,fp
   4d36c:	df000017 	ldw	fp,0(sp)
   4d370:	dec00104 	addi	sp,sp,4
   4d374:	f800283a 	ret

0004d378 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   4d378:	defffc04 	addi	sp,sp,-16
   4d37c:	df000315 	stw	fp,12(sp)
   4d380:	df000304 	addi	fp,sp,12
   4d384:	e13ffe15 	stw	r4,-8(fp)
   4d388:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   4d38c:	000530fa 	rdctl	r2,ienable
   4d390:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   4d394:	00c00044 	movi	r3,1
   4d398:	e0bfff17 	ldw	r2,-4(fp)
   4d39c:	1884983a 	sll	r2,r3,r2
   4d3a0:	1007883a 	mov	r3,r2
   4d3a4:	e0bffd17 	ldw	r2,-12(fp)
   4d3a8:	1884703a 	and	r2,r3,r2
   4d3ac:	1004c03a 	cmpne	r2,r2,zero
   4d3b0:	10803fcc 	andi	r2,r2,255
}
   4d3b4:	e037883a 	mov	sp,fp
   4d3b8:	df000017 	ldw	fp,0(sp)
   4d3bc:	dec00104 	addi	sp,sp,4
   4d3c0:	f800283a 	ret

0004d3c4 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   4d3c4:	defff504 	addi	sp,sp,-44
   4d3c8:	dfc00a15 	stw	ra,40(sp)
   4d3cc:	df000915 	stw	fp,36(sp)
   4d3d0:	df000904 	addi	fp,sp,36
   4d3d4:	e13ffc15 	stw	r4,-16(fp)
   4d3d8:	e17ffd15 	stw	r5,-12(fp)
   4d3dc:	e1bffe15 	stw	r6,-8(fp)
   4d3e0:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   4d3e4:	00bffa84 	movi	r2,-22
   4d3e8:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   4d3ec:	e0bffd17 	ldw	r2,-12(fp)
   4d3f0:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   4d3f4:	e0bff817 	ldw	r2,-32(fp)
   4d3f8:	10800808 	cmpgei	r2,r2,32
   4d3fc:	1000271e 	bne	r2,zero,4d49c <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4d400:	0005303a 	rdctl	r2,status
   4d404:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4d408:	e0fffb17 	ldw	r3,-20(fp)
   4d40c:	00bfff84 	movi	r2,-2
   4d410:	1884703a 	and	r2,r3,r2
   4d414:	1001703a 	wrctl	status,r2
  
  return context;
   4d418:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   4d41c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   4d420:	00800174 	movhi	r2,5
   4d424:	108cd304 	addi	r2,r2,13132
   4d428:	e0fff817 	ldw	r3,-32(fp)
   4d42c:	180690fa 	slli	r3,r3,3
   4d430:	10c5883a 	add	r2,r2,r3
   4d434:	e0fffe17 	ldw	r3,-8(fp)
   4d438:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   4d43c:	00800174 	movhi	r2,5
   4d440:	108cd304 	addi	r2,r2,13132
   4d444:	e0fff817 	ldw	r3,-32(fp)
   4d448:	180690fa 	slli	r3,r3,3
   4d44c:	10c5883a 	add	r2,r2,r3
   4d450:	10800104 	addi	r2,r2,4
   4d454:	e0ffff17 	ldw	r3,-4(fp)
   4d458:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   4d45c:	e0bffe17 	ldw	r2,-8(fp)
   4d460:	10000526 	beq	r2,zero,4d478 <alt_iic_isr_register+0xb4>
   4d464:	e0bff817 	ldw	r2,-32(fp)
   4d468:	100b883a 	mov	r5,r2
   4d46c:	e13ffc17 	ldw	r4,-16(fp)
   4d470:	004d2640 	call	4d264 <alt_ic_irq_enable>
   4d474:	00000406 	br	4d488 <alt_iic_isr_register+0xc4>
   4d478:	e0bff817 	ldw	r2,-32(fp)
   4d47c:	100b883a 	mov	r5,r2
   4d480:	e13ffc17 	ldw	r4,-16(fp)
   4d484:	004d2ec0 	call	4d2ec <alt_ic_irq_disable>
   4d488:	e0bff715 	stw	r2,-36(fp)
   4d48c:	e0bffa17 	ldw	r2,-24(fp)
   4d490:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4d494:	e0bff917 	ldw	r2,-28(fp)
   4d498:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   4d49c:	e0bff717 	ldw	r2,-36(fp)
}
   4d4a0:	e037883a 	mov	sp,fp
   4d4a4:	dfc00117 	ldw	ra,4(sp)
   4d4a8:	df000017 	ldw	fp,0(sp)
   4d4ac:	dec00204 	addi	sp,sp,8
   4d4b0:	f800283a 	ret

0004d4b4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d4b4:	defffe04 	addi	sp,sp,-8
   4d4b8:	dfc00115 	stw	ra,4(sp)
   4d4bc:	df000015 	stw	fp,0(sp)
   4d4c0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d4c4:	d0a00b17 	ldw	r2,-32724(gp)
   4d4c8:	10000326 	beq	r2,zero,4d4d8 <alt_get_errno+0x24>
   4d4cc:	d0a00b17 	ldw	r2,-32724(gp)
   4d4d0:	103ee83a 	callr	r2
   4d4d4:	00000106 	br	4d4dc <alt_get_errno+0x28>
   4d4d8:	d0a6d204 	addi	r2,gp,-25784
}
   4d4dc:	e037883a 	mov	sp,fp
   4d4e0:	dfc00117 	ldw	ra,4(sp)
   4d4e4:	df000017 	ldw	fp,0(sp)
   4d4e8:	dec00204 	addi	sp,sp,8
   4d4ec:	f800283a 	ret

0004d4f0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   4d4f0:	deffed04 	addi	sp,sp,-76
   4d4f4:	dfc01215 	stw	ra,72(sp)
   4d4f8:	df001115 	stw	fp,68(sp)
   4d4fc:	df001104 	addi	fp,sp,68
   4d500:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d504:	e0bfff17 	ldw	r2,-4(fp)
   4d508:	10000616 	blt	r2,zero,4d524 <isatty+0x34>
   4d50c:	e0bfff17 	ldw	r2,-4(fp)
   4d510:	10c00324 	muli	r3,r2,12
   4d514:	00800174 	movhi	r2,5
   4d518:	10817504 	addi	r2,r2,1492
   4d51c:	1885883a 	add	r2,r3,r2
   4d520:	00000106 	br	4d528 <isatty+0x38>
   4d524:	0005883a 	mov	r2,zero
   4d528:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   4d52c:	e0bfef17 	ldw	r2,-68(fp)
   4d530:	10000e26 	beq	r2,zero,4d56c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   4d534:	e0bfef17 	ldw	r2,-68(fp)
   4d538:	10800017 	ldw	r2,0(r2)
   4d53c:	10800817 	ldw	r2,32(r2)
   4d540:	1000021e 	bne	r2,zero,4d54c <isatty+0x5c>
    {
      return 1;
   4d544:	00800044 	movi	r2,1
   4d548:	00000d06 	br	4d580 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   4d54c:	e0bff004 	addi	r2,fp,-64
   4d550:	100b883a 	mov	r5,r2
   4d554:	e13fff17 	ldw	r4,-4(fp)
   4d558:	004d1640 	call	4d164 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   4d55c:	e0bff117 	ldw	r2,-60(fp)
   4d560:	10880020 	cmpeqi	r2,r2,8192
   4d564:	10803fcc 	andi	r2,r2,255
   4d568:	00000506 	br	4d580 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   4d56c:	004d4b40 	call	4d4b4 <alt_get_errno>
   4d570:	1007883a 	mov	r3,r2
   4d574:	00801444 	movi	r2,81
   4d578:	18800015 	stw	r2,0(r3)
    return 0;
   4d57c:	0005883a 	mov	r2,zero
  }
}
   4d580:	e037883a 	mov	sp,fp
   4d584:	dfc00117 	ldw	ra,4(sp)
   4d588:	df000017 	ldw	fp,0(sp)
   4d58c:	dec00204 	addi	sp,sp,8
   4d590:	f800283a 	ret

0004d594 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   4d594:	defffc04 	addi	sp,sp,-16
   4d598:	df000315 	stw	fp,12(sp)
   4d59c:	df000304 	addi	fp,sp,12
   4d5a0:	e13ffd15 	stw	r4,-12(fp)
   4d5a4:	e17ffe15 	stw	r5,-8(fp)
   4d5a8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   4d5ac:	e0fffe17 	ldw	r3,-8(fp)
   4d5b0:	e0bffd17 	ldw	r2,-12(fp)
   4d5b4:	18800c26 	beq	r3,r2,4d5e8 <alt_load_section+0x54>
  {
    while( to != end )
   4d5b8:	00000806 	br	4d5dc <alt_load_section+0x48>
    {
      *to++ = *from++;
   4d5bc:	e0bffe17 	ldw	r2,-8(fp)
   4d5c0:	10c00104 	addi	r3,r2,4
   4d5c4:	e0fffe15 	stw	r3,-8(fp)
   4d5c8:	e0fffd17 	ldw	r3,-12(fp)
   4d5cc:	19000104 	addi	r4,r3,4
   4d5d0:	e13ffd15 	stw	r4,-12(fp)
   4d5d4:	18c00017 	ldw	r3,0(r3)
   4d5d8:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   4d5dc:	e0fffe17 	ldw	r3,-8(fp)
   4d5e0:	e0bfff17 	ldw	r2,-4(fp)
   4d5e4:	18bff51e 	bne	r3,r2,4d5bc <__alt_mem_onchip_memory2_1+0xfffcc5bc>
    {
      *to++ = *from++;
    }
  }
}
   4d5e8:	0001883a 	nop
   4d5ec:	e037883a 	mov	sp,fp
   4d5f0:	df000017 	ldw	fp,0(sp)
   4d5f4:	dec00104 	addi	sp,sp,4
   4d5f8:	f800283a 	ret

0004d5fc <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   4d5fc:	defffe04 	addi	sp,sp,-8
   4d600:	dfc00115 	stw	ra,4(sp)
   4d604:	df000015 	stw	fp,0(sp)
   4d608:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   4d60c:	01800174 	movhi	r6,5
   4d610:	3185fd04 	addi	r6,r6,6132
   4d614:	01400174 	movhi	r5,5
   4d618:	297f4204 	addi	r5,r5,-760
   4d61c:	01000174 	movhi	r4,5
   4d620:	2105fd04 	addi	r4,r4,6132
   4d624:	004d5940 	call	4d594 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   4d628:	01800134 	movhi	r6,4
   4d62c:	31809104 	addi	r6,r6,580
   4d630:	01400134 	movhi	r5,4
   4d634:	29400804 	addi	r5,r5,32
   4d638:	01000134 	movhi	r4,4
   4d63c:	21000804 	addi	r4,r4,32
   4d640:	004d5940 	call	4d594 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   4d644:	01800174 	movhi	r6,5
   4d648:	31bf4204 	addi	r6,r6,-760
   4d64c:	01400174 	movhi	r5,5
   4d650:	297e5304 	addi	r5,r5,-1716
   4d654:	01000174 	movhi	r4,5
   4d658:	213e5304 	addi	r4,r4,-1716
   4d65c:	004d5940 	call	4d594 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   4d660:	004ead80 	call	4ead8 <alt_dcache_flush_all>
  alt_icache_flush_all();
   4d664:	004ecc00 	call	4ecc0 <alt_icache_flush_all>
}
   4d668:	0001883a 	nop
   4d66c:	e037883a 	mov	sp,fp
   4d670:	dfc00117 	ldw	ra,4(sp)
   4d674:	df000017 	ldw	fp,0(sp)
   4d678:	dec00204 	addi	sp,sp,8
   4d67c:	f800283a 	ret

0004d680 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d680:	defffe04 	addi	sp,sp,-8
   4d684:	dfc00115 	stw	ra,4(sp)
   4d688:	df000015 	stw	fp,0(sp)
   4d68c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d690:	d0a00b17 	ldw	r2,-32724(gp)
   4d694:	10000326 	beq	r2,zero,4d6a4 <alt_get_errno+0x24>
   4d698:	d0a00b17 	ldw	r2,-32724(gp)
   4d69c:	103ee83a 	callr	r2
   4d6a0:	00000106 	br	4d6a8 <alt_get_errno+0x28>
   4d6a4:	d0a6d204 	addi	r2,gp,-25784
}
   4d6a8:	e037883a 	mov	sp,fp
   4d6ac:	dfc00117 	ldw	ra,4(sp)
   4d6b0:	df000017 	ldw	fp,0(sp)
   4d6b4:	dec00204 	addi	sp,sp,8
   4d6b8:	f800283a 	ret

0004d6bc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   4d6bc:	defff904 	addi	sp,sp,-28
   4d6c0:	dfc00615 	stw	ra,24(sp)
   4d6c4:	df000515 	stw	fp,20(sp)
   4d6c8:	df000504 	addi	fp,sp,20
   4d6cc:	e13ffd15 	stw	r4,-12(fp)
   4d6d0:	e17ffe15 	stw	r5,-8(fp)
   4d6d4:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   4d6d8:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d6dc:	e0bffd17 	ldw	r2,-12(fp)
   4d6e0:	10000616 	blt	r2,zero,4d6fc <lseek+0x40>
   4d6e4:	e0bffd17 	ldw	r2,-12(fp)
   4d6e8:	10c00324 	muli	r3,r2,12
   4d6ec:	00800174 	movhi	r2,5
   4d6f0:	10817504 	addi	r2,r2,1492
   4d6f4:	1885883a 	add	r2,r3,r2
   4d6f8:	00000106 	br	4d700 <lseek+0x44>
   4d6fc:	0005883a 	mov	r2,zero
   4d700:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   4d704:	e0bffc17 	ldw	r2,-16(fp)
   4d708:	10001026 	beq	r2,zero,4d74c <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   4d70c:	e0bffc17 	ldw	r2,-16(fp)
   4d710:	10800017 	ldw	r2,0(r2)
   4d714:	10800717 	ldw	r2,28(r2)
   4d718:	10000926 	beq	r2,zero,4d740 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   4d71c:	e0bffc17 	ldw	r2,-16(fp)
   4d720:	10800017 	ldw	r2,0(r2)
   4d724:	10800717 	ldw	r2,28(r2)
   4d728:	e1bfff17 	ldw	r6,-4(fp)
   4d72c:	e17ffe17 	ldw	r5,-8(fp)
   4d730:	e13ffc17 	ldw	r4,-16(fp)
   4d734:	103ee83a 	callr	r2
   4d738:	e0bffb15 	stw	r2,-20(fp)
   4d73c:	00000506 	br	4d754 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   4d740:	00bfde84 	movi	r2,-134
   4d744:	e0bffb15 	stw	r2,-20(fp)
   4d748:	00000206 	br	4d754 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   4d74c:	00bfebc4 	movi	r2,-81
   4d750:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   4d754:	e0bffb17 	ldw	r2,-20(fp)
   4d758:	1000070e 	bge	r2,zero,4d778 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   4d75c:	004d6800 	call	4d680 <alt_get_errno>
   4d760:	1007883a 	mov	r3,r2
   4d764:	e0bffb17 	ldw	r2,-20(fp)
   4d768:	0085c83a 	sub	r2,zero,r2
   4d76c:	18800015 	stw	r2,0(r3)
    rc = -1;
   4d770:	00bfffc4 	movi	r2,-1
   4d774:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   4d778:	e0bffb17 	ldw	r2,-20(fp)
}
   4d77c:	e037883a 	mov	sp,fp
   4d780:	dfc00117 	ldw	ra,4(sp)
   4d784:	df000017 	ldw	fp,0(sp)
   4d788:	dec00204 	addi	sp,sp,8
   4d78c:	f800283a 	ret

0004d790 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   4d790:	defffd04 	addi	sp,sp,-12
   4d794:	dfc00215 	stw	ra,8(sp)
   4d798:	df000115 	stw	fp,4(sp)
   4d79c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   4d7a0:	0009883a 	mov	r4,zero
   4d7a4:	004dc380 	call	4dc38 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   4d7a8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   4d7ac:	004dc700 	call	4dc70 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   4d7b0:	01800174 	movhi	r6,5
   4d7b4:	31bf3804 	addi	r6,r6,-800
   4d7b8:	01400174 	movhi	r5,5
   4d7bc:	297f3804 	addi	r5,r5,-800
   4d7c0:	01000174 	movhi	r4,5
   4d7c4:	213f3804 	addi	r4,r4,-800
   4d7c8:	004ee540 	call	4ee54 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   4d7cc:	004ec000 	call	4ec00 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   4d7d0:	01000174 	movhi	r4,5
   4d7d4:	213b1804 	addi	r4,r4,-5024
   4d7d8:	004f5b80 	call	4f5b8 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   4d7dc:	d0a6d417 	ldw	r2,-25776(gp)
   4d7e0:	d0e6d517 	ldw	r3,-25772(gp)
   4d7e4:	d126d617 	ldw	r4,-25768(gp)
   4d7e8:	200d883a 	mov	r6,r4
   4d7ec:	180b883a 	mov	r5,r3
   4d7f0:	1009883a 	mov	r4,r2
   4d7f4:	004058c0 	call	4058c <main>
   4d7f8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   4d7fc:	01000044 	movi	r4,1
   4d800:	004d02c0 	call	4d02c <close>
  exit (result);
   4d804:	e13fff17 	ldw	r4,-4(fp)
   4d808:	004f5cc0 	call	4f5cc <exit>

0004d80c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   4d80c:	defffe04 	addi	sp,sp,-8
   4d810:	df000115 	stw	fp,4(sp)
   4d814:	df000104 	addi	fp,sp,4
   4d818:	e13fff15 	stw	r4,-4(fp)
}
   4d81c:	0001883a 	nop
   4d820:	e037883a 	mov	sp,fp
   4d824:	df000017 	ldw	fp,0(sp)
   4d828:	dec00104 	addi	sp,sp,4
   4d82c:	f800283a 	ret

0004d830 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   4d830:	defffe04 	addi	sp,sp,-8
   4d834:	df000115 	stw	fp,4(sp)
   4d838:	df000104 	addi	fp,sp,4
   4d83c:	e13fff15 	stw	r4,-4(fp)
}
   4d840:	0001883a 	nop
   4d844:	e037883a 	mov	sp,fp
   4d848:	df000017 	ldw	fp,0(sp)
   4d84c:	dec00104 	addi	sp,sp,4
   4d850:	f800283a 	ret

0004d854 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4d854:	defffe04 	addi	sp,sp,-8
   4d858:	dfc00115 	stw	ra,4(sp)
   4d85c:	df000015 	stw	fp,0(sp)
   4d860:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4d864:	d0a00b17 	ldw	r2,-32724(gp)
   4d868:	10000326 	beq	r2,zero,4d878 <alt_get_errno+0x24>
   4d86c:	d0a00b17 	ldw	r2,-32724(gp)
   4d870:	103ee83a 	callr	r2
   4d874:	00000106 	br	4d87c <alt_get_errno+0x28>
   4d878:	d0a6d204 	addi	r2,gp,-25784
}
   4d87c:	e037883a 	mov	sp,fp
   4d880:	dfc00117 	ldw	ra,4(sp)
   4d884:	df000017 	ldw	fp,0(sp)
   4d888:	dec00204 	addi	sp,sp,8
   4d88c:	f800283a 	ret

0004d890 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   4d890:	defff904 	addi	sp,sp,-28
   4d894:	dfc00615 	stw	ra,24(sp)
   4d898:	df000515 	stw	fp,20(sp)
   4d89c:	df000504 	addi	fp,sp,20
   4d8a0:	e13ffd15 	stw	r4,-12(fp)
   4d8a4:	e17ffe15 	stw	r5,-8(fp)
   4d8a8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4d8ac:	e0bffd17 	ldw	r2,-12(fp)
   4d8b0:	10000616 	blt	r2,zero,4d8cc <read+0x3c>
   4d8b4:	e0bffd17 	ldw	r2,-12(fp)
   4d8b8:	10c00324 	muli	r3,r2,12
   4d8bc:	00800174 	movhi	r2,5
   4d8c0:	10817504 	addi	r2,r2,1492
   4d8c4:	1885883a 	add	r2,r3,r2
   4d8c8:	00000106 	br	4d8d0 <read+0x40>
   4d8cc:	0005883a 	mov	r2,zero
   4d8d0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4d8d4:	e0bffb17 	ldw	r2,-20(fp)
   4d8d8:	10002226 	beq	r2,zero,4d964 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4d8dc:	e0bffb17 	ldw	r2,-20(fp)
   4d8e0:	10800217 	ldw	r2,8(r2)
   4d8e4:	108000cc 	andi	r2,r2,3
   4d8e8:	10800060 	cmpeqi	r2,r2,1
   4d8ec:	1000181e 	bne	r2,zero,4d950 <read+0xc0>
        (fd->dev->read))
   4d8f0:	e0bffb17 	ldw	r2,-20(fp)
   4d8f4:	10800017 	ldw	r2,0(r2)
   4d8f8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   4d8fc:	10001426 	beq	r2,zero,4d950 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   4d900:	e0bffb17 	ldw	r2,-20(fp)
   4d904:	10800017 	ldw	r2,0(r2)
   4d908:	10800517 	ldw	r2,20(r2)
   4d90c:	e0ffff17 	ldw	r3,-4(fp)
   4d910:	180d883a 	mov	r6,r3
   4d914:	e17ffe17 	ldw	r5,-8(fp)
   4d918:	e13ffb17 	ldw	r4,-20(fp)
   4d91c:	103ee83a 	callr	r2
   4d920:	e0bffc15 	stw	r2,-16(fp)
   4d924:	e0bffc17 	ldw	r2,-16(fp)
   4d928:	1000070e 	bge	r2,zero,4d948 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   4d92c:	004d8540 	call	4d854 <alt_get_errno>
   4d930:	1007883a 	mov	r3,r2
   4d934:	e0bffc17 	ldw	r2,-16(fp)
   4d938:	0085c83a 	sub	r2,zero,r2
   4d93c:	18800015 	stw	r2,0(r3)
          return -1;
   4d940:	00bfffc4 	movi	r2,-1
   4d944:	00000c06 	br	4d978 <read+0xe8>
        }
        return rval;
   4d948:	e0bffc17 	ldw	r2,-16(fp)
   4d94c:	00000a06 	br	4d978 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   4d950:	004d8540 	call	4d854 <alt_get_errno>
   4d954:	1007883a 	mov	r3,r2
   4d958:	00800344 	movi	r2,13
   4d95c:	18800015 	stw	r2,0(r3)
   4d960:	00000406 	br	4d974 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   4d964:	004d8540 	call	4d854 <alt_get_errno>
   4d968:	1007883a 	mov	r3,r2
   4d96c:	00801444 	movi	r2,81
   4d970:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4d974:	00bfffc4 	movi	r2,-1
}
   4d978:	e037883a 	mov	sp,fp
   4d97c:	dfc00117 	ldw	ra,4(sp)
   4d980:	df000017 	ldw	fp,0(sp)
   4d984:	dec00204 	addi	sp,sp,8
   4d988:	f800283a 	ret

0004d98c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   4d98c:	defffe04 	addi	sp,sp,-8
   4d990:	df000115 	stw	fp,4(sp)
   4d994:	df000104 	addi	fp,sp,4
   4d998:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   4d99c:	e0bfff17 	ldw	r2,-4(fp)
   4d9a0:	108000d0 	cmplti	r2,r2,3
   4d9a4:	10000d1e 	bne	r2,zero,4d9dc <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   4d9a8:	00800174 	movhi	r2,5
   4d9ac:	10817504 	addi	r2,r2,1492
   4d9b0:	e0ffff17 	ldw	r3,-4(fp)
   4d9b4:	18c00324 	muli	r3,r3,12
   4d9b8:	10c5883a 	add	r2,r2,r3
   4d9bc:	10800204 	addi	r2,r2,8
   4d9c0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   4d9c4:	00800174 	movhi	r2,5
   4d9c8:	10817504 	addi	r2,r2,1492
   4d9cc:	e0ffff17 	ldw	r3,-4(fp)
   4d9d0:	18c00324 	muli	r3,r3,12
   4d9d4:	10c5883a 	add	r2,r2,r3
   4d9d8:	10000015 	stw	zero,0(r2)
  }
}
   4d9dc:	0001883a 	nop
   4d9e0:	e037883a 	mov	sp,fp
   4d9e4:	df000017 	ldw	fp,0(sp)
   4d9e8:	dec00104 	addi	sp,sp,4
   4d9ec:	f800283a 	ret

0004d9f0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   4d9f0:	defff904 	addi	sp,sp,-28
   4d9f4:	df000615 	stw	fp,24(sp)
   4d9f8:	df000604 	addi	fp,sp,24
   4d9fc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4da00:	0005303a 	rdctl	r2,status
   4da04:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4da08:	e0fffe17 	ldw	r3,-8(fp)
   4da0c:	00bfff84 	movi	r2,-2
   4da10:	1884703a 	and	r2,r3,r2
   4da14:	1001703a 	wrctl	status,r2
  
  return context;
   4da18:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   4da1c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   4da20:	d0a00d17 	ldw	r2,-32716(gp)
   4da24:	10c000c4 	addi	r3,r2,3
   4da28:	00bfff04 	movi	r2,-4
   4da2c:	1884703a 	and	r2,r3,r2
   4da30:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   4da34:	d0e00d17 	ldw	r3,-32716(gp)
   4da38:	e0bfff17 	ldw	r2,-4(fp)
   4da3c:	1887883a 	add	r3,r3,r2
   4da40:	008001f4 	movhi	r2,7
   4da44:	10880004 	addi	r2,r2,8192
   4da48:	10c0062e 	bgeu	r2,r3,4da64 <sbrk+0x74>
   4da4c:	e0bffb17 	ldw	r2,-20(fp)
   4da50:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4da54:	e0bffa17 	ldw	r2,-24(fp)
   4da58:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   4da5c:	00bfffc4 	movi	r2,-1
   4da60:	00000b06 	br	4da90 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   4da64:	d0a00d17 	ldw	r2,-32716(gp)
   4da68:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   4da6c:	d0e00d17 	ldw	r3,-32716(gp)
   4da70:	e0bfff17 	ldw	r2,-4(fp)
   4da74:	1885883a 	add	r2,r3,r2
   4da78:	d0a00d15 	stw	r2,-32716(gp)
   4da7c:	e0bffb17 	ldw	r2,-20(fp)
   4da80:	e0bffc15 	stw	r2,-16(fp)
   4da84:	e0bffc17 	ldw	r2,-16(fp)
   4da88:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   4da8c:	e0bffd17 	ldw	r2,-12(fp)
} 
   4da90:	e037883a 	mov	sp,fp
   4da94:	df000017 	ldw	fp,0(sp)
   4da98:	dec00104 	addi	sp,sp,4
   4da9c:	f800283a 	ret

0004daa0 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   4daa0:	defffd04 	addi	sp,sp,-12
   4daa4:	dfc00215 	stw	ra,8(sp)
   4daa8:	df000115 	stw	fp,4(sp)
   4daac:	df000104 	addi	fp,sp,4
   4dab0:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   4dab4:	e13fff17 	ldw	r4,-4(fp)
   4dab8:	004e9800 	call	4e980 <alt_busy_sleep>
}
   4dabc:	e037883a 	mov	sp,fp
   4dac0:	dfc00117 	ldw	ra,4(sp)
   4dac4:	df000017 	ldw	fp,0(sp)
   4dac8:	dec00204 	addi	sp,sp,8
   4dacc:	f800283a 	ret

0004dad0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4dad0:	defffe04 	addi	sp,sp,-8
   4dad4:	dfc00115 	stw	ra,4(sp)
   4dad8:	df000015 	stw	fp,0(sp)
   4dadc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4dae0:	d0a00b17 	ldw	r2,-32724(gp)
   4dae4:	10000326 	beq	r2,zero,4daf4 <alt_get_errno+0x24>
   4dae8:	d0a00b17 	ldw	r2,-32724(gp)
   4daec:	103ee83a 	callr	r2
   4daf0:	00000106 	br	4daf8 <alt_get_errno+0x28>
   4daf4:	d0a6d204 	addi	r2,gp,-25784
}
   4daf8:	e037883a 	mov	sp,fp
   4dafc:	dfc00117 	ldw	ra,4(sp)
   4db00:	df000017 	ldw	fp,0(sp)
   4db04:	dec00204 	addi	sp,sp,8
   4db08:	f800283a 	ret

0004db0c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   4db0c:	defff904 	addi	sp,sp,-28
   4db10:	dfc00615 	stw	ra,24(sp)
   4db14:	df000515 	stw	fp,20(sp)
   4db18:	df000504 	addi	fp,sp,20
   4db1c:	e13ffd15 	stw	r4,-12(fp)
   4db20:	e17ffe15 	stw	r5,-8(fp)
   4db24:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   4db28:	e0bffd17 	ldw	r2,-12(fp)
   4db2c:	10000616 	blt	r2,zero,4db48 <write+0x3c>
   4db30:	e0bffd17 	ldw	r2,-12(fp)
   4db34:	10c00324 	muli	r3,r2,12
   4db38:	00800174 	movhi	r2,5
   4db3c:	10817504 	addi	r2,r2,1492
   4db40:	1885883a 	add	r2,r3,r2
   4db44:	00000106 	br	4db4c <write+0x40>
   4db48:	0005883a 	mov	r2,zero
   4db4c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   4db50:	e0bffb17 	ldw	r2,-20(fp)
   4db54:	10002126 	beq	r2,zero,4dbdc <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   4db58:	e0bffb17 	ldw	r2,-20(fp)
   4db5c:	10800217 	ldw	r2,8(r2)
   4db60:	108000cc 	andi	r2,r2,3
   4db64:	10001826 	beq	r2,zero,4dbc8 <write+0xbc>
   4db68:	e0bffb17 	ldw	r2,-20(fp)
   4db6c:	10800017 	ldw	r2,0(r2)
   4db70:	10800617 	ldw	r2,24(r2)
   4db74:	10001426 	beq	r2,zero,4dbc8 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   4db78:	e0bffb17 	ldw	r2,-20(fp)
   4db7c:	10800017 	ldw	r2,0(r2)
   4db80:	10800617 	ldw	r2,24(r2)
   4db84:	e0ffff17 	ldw	r3,-4(fp)
   4db88:	180d883a 	mov	r6,r3
   4db8c:	e17ffe17 	ldw	r5,-8(fp)
   4db90:	e13ffb17 	ldw	r4,-20(fp)
   4db94:	103ee83a 	callr	r2
   4db98:	e0bffc15 	stw	r2,-16(fp)
   4db9c:	e0bffc17 	ldw	r2,-16(fp)
   4dba0:	1000070e 	bge	r2,zero,4dbc0 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   4dba4:	004dad00 	call	4dad0 <alt_get_errno>
   4dba8:	1007883a 	mov	r3,r2
   4dbac:	e0bffc17 	ldw	r2,-16(fp)
   4dbb0:	0085c83a 	sub	r2,zero,r2
   4dbb4:	18800015 	stw	r2,0(r3)
        return -1;
   4dbb8:	00bfffc4 	movi	r2,-1
   4dbbc:	00000c06 	br	4dbf0 <write+0xe4>
      }
      return rval;
   4dbc0:	e0bffc17 	ldw	r2,-16(fp)
   4dbc4:	00000a06 	br	4dbf0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   4dbc8:	004dad00 	call	4dad0 <alt_get_errno>
   4dbcc:	1007883a 	mov	r3,r2
   4dbd0:	00800344 	movi	r2,13
   4dbd4:	18800015 	stw	r2,0(r3)
   4dbd8:	00000406 	br	4dbec <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   4dbdc:	004dad00 	call	4dad0 <alt_get_errno>
   4dbe0:	1007883a 	mov	r3,r2
   4dbe4:	00801444 	movi	r2,81
   4dbe8:	18800015 	stw	r2,0(r3)
  }
  return -1;
   4dbec:	00bfffc4 	movi	r2,-1
}
   4dbf0:	e037883a 	mov	sp,fp
   4dbf4:	dfc00117 	ldw	ra,4(sp)
   4dbf8:	df000017 	ldw	fp,0(sp)
   4dbfc:	dec00204 	addi	sp,sp,8
   4dc00:	f800283a 	ret

0004dc04 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   4dc04:	defffd04 	addi	sp,sp,-12
   4dc08:	dfc00215 	stw	ra,8(sp)
   4dc0c:	df000115 	stw	fp,4(sp)
   4dc10:	df000104 	addi	fp,sp,4
   4dc14:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   4dc18:	d1600804 	addi	r5,gp,-32736
   4dc1c:	e13fff17 	ldw	r4,-4(fp)
   4dc20:	004eb5c0 	call	4eb5c <alt_dev_llist_insert>
}
   4dc24:	e037883a 	mov	sp,fp
   4dc28:	dfc00117 	ldw	ra,4(sp)
   4dc2c:	df000017 	ldw	fp,0(sp)
   4dc30:	dec00204 	addi	sp,sp,8
   4dc34:	f800283a 	ret

0004dc38 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   4dc38:	defffd04 	addi	sp,sp,-12
   4dc3c:	dfc00215 	stw	ra,8(sp)
   4dc40:	df000115 	stw	fp,4(sp)
   4dc44:	df000104 	addi	fp,sp,4
   4dc48:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   4dc4c:	004f2c80 	call	4f2c8 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   4dc50:	00800044 	movi	r2,1
   4dc54:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   4dc58:	0001883a 	nop
   4dc5c:	e037883a 	mov	sp,fp
   4dc60:	dfc00117 	ldw	ra,4(sp)
   4dc64:	df000017 	ldw	fp,0(sp)
   4dc68:	dec00204 	addi	sp,sp,8
   4dc6c:	f800283a 	ret

0004dc70 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   4dc70:	defffe04 	addi	sp,sp,-8
   4dc74:	dfc00115 	stw	ra,4(sp)
   4dc78:	df000015 	stw	fp,0(sp)
   4dc7c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
   4dc80:	00800234 	movhi	r2,8
   4dc84:	108c0004 	addi	r2,r2,12288
   4dc88:	d0a6d715 	stw	r2,-25764(gp)
   4dc8c:	0080bef4 	movhi	r2,763
   4dc90:	10bc2004 	addi	r2,r2,-3968
   4dc94:	d0a6d815 	stw	r2,-25760(gp)
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   4dc98:	000d883a 	mov	r6,zero
   4dc9c:	000b883a 	mov	r5,zero
   4dca0:	01000174 	movhi	r4,5
   4dca4:	2101df04 	addi	r4,r4,1916
   4dca8:	004de380 	call	4de38 <altera_avalon_jtag_uart_init>
   4dcac:	01000174 	movhi	r4,5
   4dcb0:	2101d504 	addi	r4,r4,1876
   4dcb4:	004dc040 	call	4dc04 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
   4dcb8:	0001883a 	nop
}
   4dcbc:	0001883a 	nop
   4dcc0:	e037883a 	mov	sp,fp
   4dcc4:	dfc00117 	ldw	ra,4(sp)
   4dcc8:	df000017 	ldw	fp,0(sp)
   4dccc:	dec00204 	addi	sp,sp,8
   4dcd0:	f800283a 	ret

0004dcd4 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   4dcd4:	defffa04 	addi	sp,sp,-24
   4dcd8:	dfc00515 	stw	ra,20(sp)
   4dcdc:	df000415 	stw	fp,16(sp)
   4dce0:	df000404 	addi	fp,sp,16
   4dce4:	e13ffd15 	stw	r4,-12(fp)
   4dce8:	e17ffe15 	stw	r5,-8(fp)
   4dcec:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4dcf0:	e0bffd17 	ldw	r2,-12(fp)
   4dcf4:	10800017 	ldw	r2,0(r2)
   4dcf8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   4dcfc:	e0bffc17 	ldw	r2,-16(fp)
   4dd00:	10c00a04 	addi	r3,r2,40
   4dd04:	e0bffd17 	ldw	r2,-12(fp)
   4dd08:	10800217 	ldw	r2,8(r2)
   4dd0c:	100f883a 	mov	r7,r2
   4dd10:	e1bfff17 	ldw	r6,-4(fp)
   4dd14:	e17ffe17 	ldw	r5,-8(fp)
   4dd18:	1809883a 	mov	r4,r3
   4dd1c:	004e2fc0 	call	4e2fc <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   4dd20:	e037883a 	mov	sp,fp
   4dd24:	dfc00117 	ldw	ra,4(sp)
   4dd28:	df000017 	ldw	fp,0(sp)
   4dd2c:	dec00204 	addi	sp,sp,8
   4dd30:	f800283a 	ret

0004dd34 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   4dd34:	defffa04 	addi	sp,sp,-24
   4dd38:	dfc00515 	stw	ra,20(sp)
   4dd3c:	df000415 	stw	fp,16(sp)
   4dd40:	df000404 	addi	fp,sp,16
   4dd44:	e13ffd15 	stw	r4,-12(fp)
   4dd48:	e17ffe15 	stw	r5,-8(fp)
   4dd4c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4dd50:	e0bffd17 	ldw	r2,-12(fp)
   4dd54:	10800017 	ldw	r2,0(r2)
   4dd58:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   4dd5c:	e0bffc17 	ldw	r2,-16(fp)
   4dd60:	10c00a04 	addi	r3,r2,40
   4dd64:	e0bffd17 	ldw	r2,-12(fp)
   4dd68:	10800217 	ldw	r2,8(r2)
   4dd6c:	100f883a 	mov	r7,r2
   4dd70:	e1bfff17 	ldw	r6,-4(fp)
   4dd74:	e17ffe17 	ldw	r5,-8(fp)
   4dd78:	1809883a 	mov	r4,r3
   4dd7c:	004e5180 	call	4e518 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   4dd80:	e037883a 	mov	sp,fp
   4dd84:	dfc00117 	ldw	ra,4(sp)
   4dd88:	df000017 	ldw	fp,0(sp)
   4dd8c:	dec00204 	addi	sp,sp,8
   4dd90:	f800283a 	ret

0004dd94 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   4dd94:	defffc04 	addi	sp,sp,-16
   4dd98:	dfc00315 	stw	ra,12(sp)
   4dd9c:	df000215 	stw	fp,8(sp)
   4dda0:	df000204 	addi	fp,sp,8
   4dda4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   4dda8:	e0bfff17 	ldw	r2,-4(fp)
   4ddac:	10800017 	ldw	r2,0(r2)
   4ddb0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   4ddb4:	e0bffe17 	ldw	r2,-8(fp)
   4ddb8:	10c00a04 	addi	r3,r2,40
   4ddbc:	e0bfff17 	ldw	r2,-4(fp)
   4ddc0:	10800217 	ldw	r2,8(r2)
   4ddc4:	100b883a 	mov	r5,r2
   4ddc8:	1809883a 	mov	r4,r3
   4ddcc:	004e1a40 	call	4e1a4 <altera_avalon_jtag_uart_close>
}
   4ddd0:	e037883a 	mov	sp,fp
   4ddd4:	dfc00117 	ldw	ra,4(sp)
   4ddd8:	df000017 	ldw	fp,0(sp)
   4dddc:	dec00204 	addi	sp,sp,8
   4dde0:	f800283a 	ret

0004dde4 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   4dde4:	defffa04 	addi	sp,sp,-24
   4dde8:	dfc00515 	stw	ra,20(sp)
   4ddec:	df000415 	stw	fp,16(sp)
   4ddf0:	df000404 	addi	fp,sp,16
   4ddf4:	e13ffd15 	stw	r4,-12(fp)
   4ddf8:	e17ffe15 	stw	r5,-8(fp)
   4ddfc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   4de00:	e0bffd17 	ldw	r2,-12(fp)
   4de04:	10800017 	ldw	r2,0(r2)
   4de08:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   4de0c:	e0bffc17 	ldw	r2,-16(fp)
   4de10:	10800a04 	addi	r2,r2,40
   4de14:	e1bfff17 	ldw	r6,-4(fp)
   4de18:	e17ffe17 	ldw	r5,-8(fp)
   4de1c:	1009883a 	mov	r4,r2
   4de20:	004e20c0 	call	4e20c <altera_avalon_jtag_uart_ioctl>
}
   4de24:	e037883a 	mov	sp,fp
   4de28:	dfc00117 	ldw	ra,4(sp)
   4de2c:	df000017 	ldw	fp,0(sp)
   4de30:	dec00204 	addi	sp,sp,8
   4de34:	f800283a 	ret

0004de38 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   4de38:	defffa04 	addi	sp,sp,-24
   4de3c:	dfc00515 	stw	ra,20(sp)
   4de40:	df000415 	stw	fp,16(sp)
   4de44:	df000404 	addi	fp,sp,16
   4de48:	e13ffd15 	stw	r4,-12(fp)
   4de4c:	e17ffe15 	stw	r5,-8(fp)
   4de50:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4de54:	e0bffd17 	ldw	r2,-12(fp)
   4de58:	00c00044 	movi	r3,1
   4de5c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   4de60:	e0bffd17 	ldw	r2,-12(fp)
   4de64:	10800017 	ldw	r2,0(r2)
   4de68:	10800104 	addi	r2,r2,4
   4de6c:	1007883a 	mov	r3,r2
   4de70:	e0bffd17 	ldw	r2,-12(fp)
   4de74:	10800817 	ldw	r2,32(r2)
   4de78:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   4de7c:	e0bffe17 	ldw	r2,-8(fp)
   4de80:	e0ffff17 	ldw	r3,-4(fp)
   4de84:	d8000015 	stw	zero,0(sp)
   4de88:	e1fffd17 	ldw	r7,-12(fp)
   4de8c:	01800174 	movhi	r6,5
   4de90:	31b7be04 	addi	r6,r6,-8456
   4de94:	180b883a 	mov	r5,r3
   4de98:	1009883a 	mov	r4,r2
   4de9c:	004d2140 	call	4d214 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   4dea0:	e0bffd17 	ldw	r2,-12(fp)
   4dea4:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   4dea8:	e0bffd17 	ldw	r2,-12(fp)
   4deac:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   4deb0:	d0e6da17 	ldw	r3,-25752(gp)
   4deb4:	e1fffd17 	ldw	r7,-12(fp)
   4deb8:	01800174 	movhi	r6,5
   4debc:	31b84104 	addi	r6,r6,-7932
   4dec0:	180b883a 	mov	r5,r3
   4dec4:	1009883a 	mov	r4,r2
   4dec8:	004e8540 	call	4e854 <alt_alarm_start>
   4decc:	1000040e 	bge	r2,zero,4dee0 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   4ded0:	e0fffd17 	ldw	r3,-12(fp)
   4ded4:	00a00034 	movhi	r2,32768
   4ded8:	10bfffc4 	addi	r2,r2,-1
   4dedc:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   4dee0:	0001883a 	nop
   4dee4:	e037883a 	mov	sp,fp
   4dee8:	dfc00117 	ldw	ra,4(sp)
   4deec:	df000017 	ldw	fp,0(sp)
   4def0:	dec00204 	addi	sp,sp,8
   4def4:	f800283a 	ret

0004def8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   4def8:	defff804 	addi	sp,sp,-32
   4defc:	df000715 	stw	fp,28(sp)
   4df00:	df000704 	addi	fp,sp,28
   4df04:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   4df08:	e0bfff17 	ldw	r2,-4(fp)
   4df0c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   4df10:	e0bffb17 	ldw	r2,-20(fp)
   4df14:	10800017 	ldw	r2,0(r2)
   4df18:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4df1c:	e0bffc17 	ldw	r2,-16(fp)
   4df20:	10800104 	addi	r2,r2,4
   4df24:	10800037 	ldwio	r2,0(r2)
   4df28:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   4df2c:	e0bffd17 	ldw	r2,-12(fp)
   4df30:	1080c00c 	andi	r2,r2,768
   4df34:	10006d26 	beq	r2,zero,4e0ec <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   4df38:	e0bffd17 	ldw	r2,-12(fp)
   4df3c:	1080400c 	andi	r2,r2,256
   4df40:	10003526 	beq	r2,zero,4e018 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   4df44:	00800074 	movhi	r2,1
   4df48:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4df4c:	e0bffb17 	ldw	r2,-20(fp)
   4df50:	10800a17 	ldw	r2,40(r2)
   4df54:	10800044 	addi	r2,r2,1
   4df58:	1081ffcc 	andi	r2,r2,2047
   4df5c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   4df60:	e0bffb17 	ldw	r2,-20(fp)
   4df64:	10c00b17 	ldw	r3,44(r2)
   4df68:	e0bffe17 	ldw	r2,-8(fp)
   4df6c:	18801526 	beq	r3,r2,4dfc4 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   4df70:	e0bffc17 	ldw	r2,-16(fp)
   4df74:	10800037 	ldwio	r2,0(r2)
   4df78:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   4df7c:	e0bff917 	ldw	r2,-28(fp)
   4df80:	10a0000c 	andi	r2,r2,32768
   4df84:	10001126 	beq	r2,zero,4dfcc <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   4df88:	e0bffb17 	ldw	r2,-20(fp)
   4df8c:	10800a17 	ldw	r2,40(r2)
   4df90:	e0fff917 	ldw	r3,-28(fp)
   4df94:	1809883a 	mov	r4,r3
   4df98:	e0fffb17 	ldw	r3,-20(fp)
   4df9c:	1885883a 	add	r2,r3,r2
   4dfa0:	10800e04 	addi	r2,r2,56
   4dfa4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4dfa8:	e0bffb17 	ldw	r2,-20(fp)
   4dfac:	10800a17 	ldw	r2,40(r2)
   4dfb0:	10800044 	addi	r2,r2,1
   4dfb4:	10c1ffcc 	andi	r3,r2,2047
   4dfb8:	e0bffb17 	ldw	r2,-20(fp)
   4dfbc:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   4dfc0:	003fe206 	br	4df4c <__alt_mem_onchip_memory2_1+0xfffccf4c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   4dfc4:	0001883a 	nop
   4dfc8:	00000106 	br	4dfd0 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   4dfcc:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   4dfd0:	e0bff917 	ldw	r2,-28(fp)
   4dfd4:	10bfffec 	andhi	r2,r2,65535
   4dfd8:	10000f26 	beq	r2,zero,4e018 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4dfdc:	e0bffb17 	ldw	r2,-20(fp)
   4dfe0:	10c00817 	ldw	r3,32(r2)
   4dfe4:	00bfff84 	movi	r2,-2
   4dfe8:	1886703a 	and	r3,r3,r2
   4dfec:	e0bffb17 	ldw	r2,-20(fp)
   4dff0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   4dff4:	e0bffc17 	ldw	r2,-16(fp)
   4dff8:	10800104 	addi	r2,r2,4
   4dffc:	1007883a 	mov	r3,r2
   4e000:	e0bffb17 	ldw	r2,-20(fp)
   4e004:	10800817 	ldw	r2,32(r2)
   4e008:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4e00c:	e0bffc17 	ldw	r2,-16(fp)
   4e010:	10800104 	addi	r2,r2,4
   4e014:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   4e018:	e0bffd17 	ldw	r2,-12(fp)
   4e01c:	1080800c 	andi	r2,r2,512
   4e020:	103fbe26 	beq	r2,zero,4df1c <__alt_mem_onchip_memory2_1+0xfffccf1c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   4e024:	e0bffd17 	ldw	r2,-12(fp)
   4e028:	1004d43a 	srli	r2,r2,16
   4e02c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   4e030:	00001406 	br	4e084 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   4e034:	e0bffc17 	ldw	r2,-16(fp)
   4e038:	e0fffb17 	ldw	r3,-20(fp)
   4e03c:	18c00d17 	ldw	r3,52(r3)
   4e040:	e13ffb17 	ldw	r4,-20(fp)
   4e044:	20c7883a 	add	r3,r4,r3
   4e048:	18c20e04 	addi	r3,r3,2104
   4e04c:	18c00003 	ldbu	r3,0(r3)
   4e050:	18c03fcc 	andi	r3,r3,255
   4e054:	18c0201c 	xori	r3,r3,128
   4e058:	18ffe004 	addi	r3,r3,-128
   4e05c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e060:	e0bffb17 	ldw	r2,-20(fp)
   4e064:	10800d17 	ldw	r2,52(r2)
   4e068:	10800044 	addi	r2,r2,1
   4e06c:	10c1ffcc 	andi	r3,r2,2047
   4e070:	e0bffb17 	ldw	r2,-20(fp)
   4e074:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   4e078:	e0bffa17 	ldw	r2,-24(fp)
   4e07c:	10bfffc4 	addi	r2,r2,-1
   4e080:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   4e084:	e0bffa17 	ldw	r2,-24(fp)
   4e088:	10000526 	beq	r2,zero,4e0a0 <altera_avalon_jtag_uart_irq+0x1a8>
   4e08c:	e0bffb17 	ldw	r2,-20(fp)
   4e090:	10c00d17 	ldw	r3,52(r2)
   4e094:	e0bffb17 	ldw	r2,-20(fp)
   4e098:	10800c17 	ldw	r2,48(r2)
   4e09c:	18bfe51e 	bne	r3,r2,4e034 <__alt_mem_onchip_memory2_1+0xfffcd034>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   4e0a0:	e0bffa17 	ldw	r2,-24(fp)
   4e0a4:	103f9d26 	beq	r2,zero,4df1c <__alt_mem_onchip_memory2_1+0xfffccf1c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e0a8:	e0bffb17 	ldw	r2,-20(fp)
   4e0ac:	10c00817 	ldw	r3,32(r2)
   4e0b0:	00bfff44 	movi	r2,-3
   4e0b4:	1886703a 	and	r3,r3,r2
   4e0b8:	e0bffb17 	ldw	r2,-20(fp)
   4e0bc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e0c0:	e0bffb17 	ldw	r2,-20(fp)
   4e0c4:	10800017 	ldw	r2,0(r2)
   4e0c8:	10800104 	addi	r2,r2,4
   4e0cc:	1007883a 	mov	r3,r2
   4e0d0:	e0bffb17 	ldw	r2,-20(fp)
   4e0d4:	10800817 	ldw	r2,32(r2)
   4e0d8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   4e0dc:	e0bffc17 	ldw	r2,-16(fp)
   4e0e0:	10800104 	addi	r2,r2,4
   4e0e4:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   4e0e8:	003f8c06 	br	4df1c <__alt_mem_onchip_memory2_1+0xfffccf1c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   4e0ec:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   4e0f0:	0001883a 	nop
   4e0f4:	e037883a 	mov	sp,fp
   4e0f8:	df000017 	ldw	fp,0(sp)
   4e0fc:	dec00104 	addi	sp,sp,4
   4e100:	f800283a 	ret

0004e104 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   4e104:	defff804 	addi	sp,sp,-32
   4e108:	df000715 	stw	fp,28(sp)
   4e10c:	df000704 	addi	fp,sp,28
   4e110:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   4e114:	e0bffb17 	ldw	r2,-20(fp)
   4e118:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   4e11c:	e0bff917 	ldw	r2,-28(fp)
   4e120:	10800017 	ldw	r2,0(r2)
   4e124:	10800104 	addi	r2,r2,4
   4e128:	10800037 	ldwio	r2,0(r2)
   4e12c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   4e130:	e0bffa17 	ldw	r2,-24(fp)
   4e134:	1081000c 	andi	r2,r2,1024
   4e138:	10000b26 	beq	r2,zero,4e168 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   4e13c:	e0bff917 	ldw	r2,-28(fp)
   4e140:	10800017 	ldw	r2,0(r2)
   4e144:	10800104 	addi	r2,r2,4
   4e148:	1007883a 	mov	r3,r2
   4e14c:	e0bff917 	ldw	r2,-28(fp)
   4e150:	10800817 	ldw	r2,32(r2)
   4e154:	10810014 	ori	r2,r2,1024
   4e158:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   4e15c:	e0bff917 	ldw	r2,-28(fp)
   4e160:	10000915 	stw	zero,36(r2)
   4e164:	00000a06 	br	4e190 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   4e168:	e0bff917 	ldw	r2,-28(fp)
   4e16c:	10c00917 	ldw	r3,36(r2)
   4e170:	00a00034 	movhi	r2,32768
   4e174:	10bfff04 	addi	r2,r2,-4
   4e178:	10c00536 	bltu	r2,r3,4e190 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   4e17c:	e0bff917 	ldw	r2,-28(fp)
   4e180:	10800917 	ldw	r2,36(r2)
   4e184:	10c00044 	addi	r3,r2,1
   4e188:	e0bff917 	ldw	r2,-28(fp)
   4e18c:	10c00915 	stw	r3,36(r2)
   4e190:	d0a6da17 	ldw	r2,-25752(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   4e194:	e037883a 	mov	sp,fp
   4e198:	df000017 	ldw	fp,0(sp)
   4e19c:	dec00104 	addi	sp,sp,4
   4e1a0:	f800283a 	ret

0004e1a4 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   4e1a4:	defffd04 	addi	sp,sp,-12
   4e1a8:	df000215 	stw	fp,8(sp)
   4e1ac:	df000204 	addi	fp,sp,8
   4e1b0:	e13ffe15 	stw	r4,-8(fp)
   4e1b4:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4e1b8:	00000506 	br	4e1d0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   4e1bc:	e0bfff17 	ldw	r2,-4(fp)
   4e1c0:	1090000c 	andi	r2,r2,16384
   4e1c4:	10000226 	beq	r2,zero,4e1d0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   4e1c8:	00bffd44 	movi	r2,-11
   4e1cc:	00000b06 	br	4e1fc <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   4e1d0:	e0bffe17 	ldw	r2,-8(fp)
   4e1d4:	10c00d17 	ldw	r3,52(r2)
   4e1d8:	e0bffe17 	ldw	r2,-8(fp)
   4e1dc:	10800c17 	ldw	r2,48(r2)
   4e1e0:	18800526 	beq	r3,r2,4e1f8 <altera_avalon_jtag_uart_close+0x54>
   4e1e4:	e0bffe17 	ldw	r2,-8(fp)
   4e1e8:	10c00917 	ldw	r3,36(r2)
   4e1ec:	e0bffe17 	ldw	r2,-8(fp)
   4e1f0:	10800117 	ldw	r2,4(r2)
   4e1f4:	18bff136 	bltu	r3,r2,4e1bc <__alt_mem_onchip_memory2_1+0xfffcd1bc>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   4e1f8:	0005883a 	mov	r2,zero
}
   4e1fc:	e037883a 	mov	sp,fp
   4e200:	df000017 	ldw	fp,0(sp)
   4e204:	dec00104 	addi	sp,sp,4
   4e208:	f800283a 	ret

0004e20c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   4e20c:	defffa04 	addi	sp,sp,-24
   4e210:	df000515 	stw	fp,20(sp)
   4e214:	df000504 	addi	fp,sp,20
   4e218:	e13ffd15 	stw	r4,-12(fp)
   4e21c:	e17ffe15 	stw	r5,-8(fp)
   4e220:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   4e224:	00bff9c4 	movi	r2,-25
   4e228:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   4e22c:	e0bffe17 	ldw	r2,-8(fp)
   4e230:	10da8060 	cmpeqi	r3,r2,27137
   4e234:	1800031e 	bne	r3,zero,4e244 <altera_avalon_jtag_uart_ioctl+0x38>
   4e238:	109a80a0 	cmpeqi	r2,r2,27138
   4e23c:	1000181e 	bne	r2,zero,4e2a0 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   4e240:	00002906 	br	4e2e8 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   4e244:	e0bffd17 	ldw	r2,-12(fp)
   4e248:	10c00117 	ldw	r3,4(r2)
   4e24c:	00a00034 	movhi	r2,32768
   4e250:	10bfffc4 	addi	r2,r2,-1
   4e254:	18802126 	beq	r3,r2,4e2dc <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   4e258:	e0bfff17 	ldw	r2,-4(fp)
   4e25c:	10800017 	ldw	r2,0(r2)
   4e260:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   4e264:	e0bffc17 	ldw	r2,-16(fp)
   4e268:	10800090 	cmplti	r2,r2,2
   4e26c:	1000061e 	bne	r2,zero,4e288 <altera_avalon_jtag_uart_ioctl+0x7c>
   4e270:	e0fffc17 	ldw	r3,-16(fp)
   4e274:	00a00034 	movhi	r2,32768
   4e278:	10bfffc4 	addi	r2,r2,-1
   4e27c:	18800226 	beq	r3,r2,4e288 <altera_avalon_jtag_uart_ioctl+0x7c>
   4e280:	e0bffc17 	ldw	r2,-16(fp)
   4e284:	00000206 	br	4e290 <altera_avalon_jtag_uart_ioctl+0x84>
   4e288:	00a00034 	movhi	r2,32768
   4e28c:	10bfff84 	addi	r2,r2,-2
   4e290:	e0fffd17 	ldw	r3,-12(fp)
   4e294:	18800115 	stw	r2,4(r3)
      rc = 0;
   4e298:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4e29c:	00000f06 	br	4e2dc <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   4e2a0:	e0bffd17 	ldw	r2,-12(fp)
   4e2a4:	10c00117 	ldw	r3,4(r2)
   4e2a8:	00a00034 	movhi	r2,32768
   4e2ac:	10bfffc4 	addi	r2,r2,-1
   4e2b0:	18800c26 	beq	r3,r2,4e2e4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   4e2b4:	e0bffd17 	ldw	r2,-12(fp)
   4e2b8:	10c00917 	ldw	r3,36(r2)
   4e2bc:	e0bffd17 	ldw	r2,-12(fp)
   4e2c0:	10800117 	ldw	r2,4(r2)
   4e2c4:	1885803a 	cmpltu	r2,r3,r2
   4e2c8:	10c03fcc 	andi	r3,r2,255
   4e2cc:	e0bfff17 	ldw	r2,-4(fp)
   4e2d0:	10c00015 	stw	r3,0(r2)
      rc = 0;
   4e2d4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   4e2d8:	00000206 	br	4e2e4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   4e2dc:	0001883a 	nop
   4e2e0:	00000106 	br	4e2e8 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   4e2e4:	0001883a 	nop

  default:
    break;
  }

  return rc;
   4e2e8:	e0bffb17 	ldw	r2,-20(fp)
}
   4e2ec:	e037883a 	mov	sp,fp
   4e2f0:	df000017 	ldw	fp,0(sp)
   4e2f4:	dec00104 	addi	sp,sp,4
   4e2f8:	f800283a 	ret

0004e2fc <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   4e2fc:	defff304 	addi	sp,sp,-52
   4e300:	dfc00c15 	stw	ra,48(sp)
   4e304:	df000b15 	stw	fp,44(sp)
   4e308:	df000b04 	addi	fp,sp,44
   4e30c:	e13ffc15 	stw	r4,-16(fp)
   4e310:	e17ffd15 	stw	r5,-12(fp)
   4e314:	e1bffe15 	stw	r6,-8(fp)
   4e318:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   4e31c:	e0bffd17 	ldw	r2,-12(fp)
   4e320:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e324:	00004706 	br	4e444 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   4e328:	e0bffc17 	ldw	r2,-16(fp)
   4e32c:	10800a17 	ldw	r2,40(r2)
   4e330:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   4e334:	e0bffc17 	ldw	r2,-16(fp)
   4e338:	10800b17 	ldw	r2,44(r2)
   4e33c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   4e340:	e0fff717 	ldw	r3,-36(fp)
   4e344:	e0bff817 	ldw	r2,-32(fp)
   4e348:	18800536 	bltu	r3,r2,4e360 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   4e34c:	e0fff717 	ldw	r3,-36(fp)
   4e350:	e0bff817 	ldw	r2,-32(fp)
   4e354:	1885c83a 	sub	r2,r3,r2
   4e358:	e0bff615 	stw	r2,-40(fp)
   4e35c:	00000406 	br	4e370 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   4e360:	00c20004 	movi	r3,2048
   4e364:	e0bff817 	ldw	r2,-32(fp)
   4e368:	1885c83a 	sub	r2,r3,r2
   4e36c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4e370:	e0bff617 	ldw	r2,-40(fp)
   4e374:	10001e26 	beq	r2,zero,4e3f0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   4e378:	e0fffe17 	ldw	r3,-8(fp)
   4e37c:	e0bff617 	ldw	r2,-40(fp)
   4e380:	1880022e 	bgeu	r3,r2,4e38c <altera_avalon_jtag_uart_read+0x90>
        n = space;
   4e384:	e0bffe17 	ldw	r2,-8(fp)
   4e388:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   4e38c:	e0bffc17 	ldw	r2,-16(fp)
   4e390:	10c00e04 	addi	r3,r2,56
   4e394:	e0bff817 	ldw	r2,-32(fp)
   4e398:	1885883a 	add	r2,r3,r2
   4e39c:	e1bff617 	ldw	r6,-40(fp)
   4e3a0:	100b883a 	mov	r5,r2
   4e3a4:	e13ff517 	ldw	r4,-44(fp)
   4e3a8:	004619c0 	call	4619c <memcpy>
      ptr   += n;
   4e3ac:	e0fff517 	ldw	r3,-44(fp)
   4e3b0:	e0bff617 	ldw	r2,-40(fp)
   4e3b4:	1885883a 	add	r2,r3,r2
   4e3b8:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   4e3bc:	e0fffe17 	ldw	r3,-8(fp)
   4e3c0:	e0bff617 	ldw	r2,-40(fp)
   4e3c4:	1885c83a 	sub	r2,r3,r2
   4e3c8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e3cc:	e0fff817 	ldw	r3,-32(fp)
   4e3d0:	e0bff617 	ldw	r2,-40(fp)
   4e3d4:	1885883a 	add	r2,r3,r2
   4e3d8:	10c1ffcc 	andi	r3,r2,2047
   4e3dc:	e0bffc17 	ldw	r2,-16(fp)
   4e3e0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   4e3e4:	e0bffe17 	ldw	r2,-8(fp)
   4e3e8:	00bfcf16 	blt	zero,r2,4e328 <__alt_mem_onchip_memory2_1+0xfffcd328>
   4e3ec:	00000106 	br	4e3f4 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   4e3f0:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   4e3f4:	e0fff517 	ldw	r3,-44(fp)
   4e3f8:	e0bffd17 	ldw	r2,-12(fp)
   4e3fc:	1880141e 	bne	r3,r2,4e450 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   4e400:	e0bfff17 	ldw	r2,-4(fp)
   4e404:	1090000c 	andi	r2,r2,16384
   4e408:	1000131e 	bne	r2,zero,4e458 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   4e40c:	0001883a 	nop
   4e410:	e0bffc17 	ldw	r2,-16(fp)
   4e414:	10c00a17 	ldw	r3,40(r2)
   4e418:	e0bff717 	ldw	r2,-36(fp)
   4e41c:	1880051e 	bne	r3,r2,4e434 <altera_avalon_jtag_uart_read+0x138>
   4e420:	e0bffc17 	ldw	r2,-16(fp)
   4e424:	10c00917 	ldw	r3,36(r2)
   4e428:	e0bffc17 	ldw	r2,-16(fp)
   4e42c:	10800117 	ldw	r2,4(r2)
   4e430:	18bff736 	bltu	r3,r2,4e410 <__alt_mem_onchip_memory2_1+0xfffcd410>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   4e434:	e0bffc17 	ldw	r2,-16(fp)
   4e438:	10c00a17 	ldw	r3,40(r2)
   4e43c:	e0bff717 	ldw	r2,-36(fp)
   4e440:	18800726 	beq	r3,r2,4e460 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   4e444:	e0bffe17 	ldw	r2,-8(fp)
   4e448:	00bfb716 	blt	zero,r2,4e328 <__alt_mem_onchip_memory2_1+0xfffcd328>
   4e44c:	00000506 	br	4e464 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   4e450:	0001883a 	nop
   4e454:	00000306 	br	4e464 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   4e458:	0001883a 	nop
   4e45c:	00000106 	br	4e464 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   4e460:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   4e464:	e0fff517 	ldw	r3,-44(fp)
   4e468:	e0bffd17 	ldw	r2,-12(fp)
   4e46c:	18801826 	beq	r3,r2,4e4d0 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e470:	0005303a 	rdctl	r2,status
   4e474:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e478:	e0fffb17 	ldw	r3,-20(fp)
   4e47c:	00bfff84 	movi	r2,-2
   4e480:	1884703a 	and	r2,r3,r2
   4e484:	1001703a 	wrctl	status,r2
  
  return context;
   4e488:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   4e48c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   4e490:	e0bffc17 	ldw	r2,-16(fp)
   4e494:	10800817 	ldw	r2,32(r2)
   4e498:	10c00054 	ori	r3,r2,1
   4e49c:	e0bffc17 	ldw	r2,-16(fp)
   4e4a0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e4a4:	e0bffc17 	ldw	r2,-16(fp)
   4e4a8:	10800017 	ldw	r2,0(r2)
   4e4ac:	10800104 	addi	r2,r2,4
   4e4b0:	1007883a 	mov	r3,r2
   4e4b4:	e0bffc17 	ldw	r2,-16(fp)
   4e4b8:	10800817 	ldw	r2,32(r2)
   4e4bc:	18800035 	stwio	r2,0(r3)
   4e4c0:	e0bffa17 	ldw	r2,-24(fp)
   4e4c4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e4c8:	e0bff917 	ldw	r2,-28(fp)
   4e4cc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   4e4d0:	e0fff517 	ldw	r3,-44(fp)
   4e4d4:	e0bffd17 	ldw	r2,-12(fp)
   4e4d8:	18800426 	beq	r3,r2,4e4ec <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   4e4dc:	e0fff517 	ldw	r3,-44(fp)
   4e4e0:	e0bffd17 	ldw	r2,-12(fp)
   4e4e4:	1885c83a 	sub	r2,r3,r2
   4e4e8:	00000606 	br	4e504 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   4e4ec:	e0bfff17 	ldw	r2,-4(fp)
   4e4f0:	1090000c 	andi	r2,r2,16384
   4e4f4:	10000226 	beq	r2,zero,4e500 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   4e4f8:	00bffd44 	movi	r2,-11
   4e4fc:	00000106 	br	4e504 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   4e500:	00bffec4 	movi	r2,-5
}
   4e504:	e037883a 	mov	sp,fp
   4e508:	dfc00117 	ldw	ra,4(sp)
   4e50c:	df000017 	ldw	fp,0(sp)
   4e510:	dec00204 	addi	sp,sp,8
   4e514:	f800283a 	ret

0004e518 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   4e518:	defff304 	addi	sp,sp,-52
   4e51c:	dfc00c15 	stw	ra,48(sp)
   4e520:	df000b15 	stw	fp,44(sp)
   4e524:	df000b04 	addi	fp,sp,44
   4e528:	e13ffc15 	stw	r4,-16(fp)
   4e52c:	e17ffd15 	stw	r5,-12(fp)
   4e530:	e1bffe15 	stw	r6,-8(fp)
   4e534:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   4e538:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   4e53c:	e0bffd17 	ldw	r2,-12(fp)
   4e540:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e544:	00003706 	br	4e624 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   4e548:	e0bffc17 	ldw	r2,-16(fp)
   4e54c:	10800c17 	ldw	r2,48(r2)
   4e550:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   4e554:	e0bffc17 	ldw	r2,-16(fp)
   4e558:	10800d17 	ldw	r2,52(r2)
   4e55c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   4e560:	e0fff917 	ldw	r3,-28(fp)
   4e564:	e0bff517 	ldw	r2,-44(fp)
   4e568:	1880062e 	bgeu	r3,r2,4e584 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   4e56c:	e0fff517 	ldw	r3,-44(fp)
   4e570:	e0bff917 	ldw	r2,-28(fp)
   4e574:	1885c83a 	sub	r2,r3,r2
   4e578:	10bfffc4 	addi	r2,r2,-1
   4e57c:	e0bff615 	stw	r2,-40(fp)
   4e580:	00000b06 	br	4e5b0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   4e584:	e0bff517 	ldw	r2,-44(fp)
   4e588:	10000526 	beq	r2,zero,4e5a0 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   4e58c:	00c20004 	movi	r3,2048
   4e590:	e0bff917 	ldw	r2,-28(fp)
   4e594:	1885c83a 	sub	r2,r3,r2
   4e598:	e0bff615 	stw	r2,-40(fp)
   4e59c:	00000406 	br	4e5b0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   4e5a0:	00c1ffc4 	movi	r3,2047
   4e5a4:	e0bff917 	ldw	r2,-28(fp)
   4e5a8:	1885c83a 	sub	r2,r3,r2
   4e5ac:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   4e5b0:	e0bff617 	ldw	r2,-40(fp)
   4e5b4:	10001e26 	beq	r2,zero,4e630 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   4e5b8:	e0fffe17 	ldw	r3,-8(fp)
   4e5bc:	e0bff617 	ldw	r2,-40(fp)
   4e5c0:	1880022e 	bgeu	r3,r2,4e5cc <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   4e5c4:	e0bffe17 	ldw	r2,-8(fp)
   4e5c8:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   4e5cc:	e0bffc17 	ldw	r2,-16(fp)
   4e5d0:	10c20e04 	addi	r3,r2,2104
   4e5d4:	e0bff917 	ldw	r2,-28(fp)
   4e5d8:	1885883a 	add	r2,r3,r2
   4e5dc:	e1bff617 	ldw	r6,-40(fp)
   4e5e0:	e17ffd17 	ldw	r5,-12(fp)
   4e5e4:	1009883a 	mov	r4,r2
   4e5e8:	004619c0 	call	4619c <memcpy>
      ptr   += n;
   4e5ec:	e0fffd17 	ldw	r3,-12(fp)
   4e5f0:	e0bff617 	ldw	r2,-40(fp)
   4e5f4:	1885883a 	add	r2,r3,r2
   4e5f8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   4e5fc:	e0fffe17 	ldw	r3,-8(fp)
   4e600:	e0bff617 	ldw	r2,-40(fp)
   4e604:	1885c83a 	sub	r2,r3,r2
   4e608:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   4e60c:	e0fff917 	ldw	r3,-28(fp)
   4e610:	e0bff617 	ldw	r2,-40(fp)
   4e614:	1885883a 	add	r2,r3,r2
   4e618:	10c1ffcc 	andi	r3,r2,2047
   4e61c:	e0bffc17 	ldw	r2,-16(fp)
   4e620:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   4e624:	e0bffe17 	ldw	r2,-8(fp)
   4e628:	00bfc716 	blt	zero,r2,4e548 <__alt_mem_onchip_memory2_1+0xfffcd548>
   4e62c:	00000106 	br	4e634 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   4e630:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e634:	0005303a 	rdctl	r2,status
   4e638:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e63c:	e0fffb17 	ldw	r3,-20(fp)
   4e640:	00bfff84 	movi	r2,-2
   4e644:	1884703a 	and	r2,r3,r2
   4e648:	1001703a 	wrctl	status,r2
  
  return context;
   4e64c:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   4e650:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   4e654:	e0bffc17 	ldw	r2,-16(fp)
   4e658:	10800817 	ldw	r2,32(r2)
   4e65c:	10c00094 	ori	r3,r2,2
   4e660:	e0bffc17 	ldw	r2,-16(fp)
   4e664:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   4e668:	e0bffc17 	ldw	r2,-16(fp)
   4e66c:	10800017 	ldw	r2,0(r2)
   4e670:	10800104 	addi	r2,r2,4
   4e674:	1007883a 	mov	r3,r2
   4e678:	e0bffc17 	ldw	r2,-16(fp)
   4e67c:	10800817 	ldw	r2,32(r2)
   4e680:	18800035 	stwio	r2,0(r3)
   4e684:	e0bffa17 	ldw	r2,-24(fp)
   4e688:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e68c:	e0bff817 	ldw	r2,-32(fp)
   4e690:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   4e694:	e0bffe17 	ldw	r2,-8(fp)
   4e698:	0080100e 	bge	zero,r2,4e6dc <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   4e69c:	e0bfff17 	ldw	r2,-4(fp)
   4e6a0:	1090000c 	andi	r2,r2,16384
   4e6a4:	1000101e 	bne	r2,zero,4e6e8 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   4e6a8:	0001883a 	nop
   4e6ac:	e0bffc17 	ldw	r2,-16(fp)
   4e6b0:	10c00d17 	ldw	r3,52(r2)
   4e6b4:	e0bff517 	ldw	r2,-44(fp)
   4e6b8:	1880051e 	bne	r3,r2,4e6d0 <altera_avalon_jtag_uart_write+0x1b8>
   4e6bc:	e0bffc17 	ldw	r2,-16(fp)
   4e6c0:	10c00917 	ldw	r3,36(r2)
   4e6c4:	e0bffc17 	ldw	r2,-16(fp)
   4e6c8:	10800117 	ldw	r2,4(r2)
   4e6cc:	18bff736 	bltu	r3,r2,4e6ac <__alt_mem_onchip_memory2_1+0xfffcd6ac>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   4e6d0:	e0bffc17 	ldw	r2,-16(fp)
   4e6d4:	10800917 	ldw	r2,36(r2)
   4e6d8:	1000051e 	bne	r2,zero,4e6f0 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   4e6dc:	e0bffe17 	ldw	r2,-8(fp)
   4e6e0:	00bfd016 	blt	zero,r2,4e624 <__alt_mem_onchip_memory2_1+0xfffcd624>
   4e6e4:	00000306 	br	4e6f4 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   4e6e8:	0001883a 	nop
   4e6ec:	00000106 	br	4e6f4 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   4e6f0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   4e6f4:	e0fffd17 	ldw	r3,-12(fp)
   4e6f8:	e0bff717 	ldw	r2,-36(fp)
   4e6fc:	18800426 	beq	r3,r2,4e710 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   4e700:	e0fffd17 	ldw	r3,-12(fp)
   4e704:	e0bff717 	ldw	r2,-36(fp)
   4e708:	1885c83a 	sub	r2,r3,r2
   4e70c:	00000606 	br	4e728 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   4e710:	e0bfff17 	ldw	r2,-4(fp)
   4e714:	1090000c 	andi	r2,r2,16384
   4e718:	10000226 	beq	r2,zero,4e724 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   4e71c:	00bffd44 	movi	r2,-11
   4e720:	00000106 	br	4e728 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   4e724:	00bffec4 	movi	r2,-5
}
   4e728:	e037883a 	mov	sp,fp
   4e72c:	dfc00117 	ldw	ra,4(sp)
   4e730:	df000017 	ldw	fp,0(sp)
   4e734:	dec00204 	addi	sp,sp,8
   4e738:	f800283a 	ret

0004e73c <alt_timestamp_start>:
 * The return value of this function is 0 upon sucess and -1 if in timestamp
 * device has not been registered. 
 */

int alt_timestamp_start(void)
{
   4e73c:	defffe04 	addi	sp,sp,-8
   4e740:	df000115 	stw	fp,4(sp)
   4e744:	df000104 	addi	fp,sp,4
  void* base = altera_avalon_timer_ts_base;
   4e748:	d0a6d717 	ldw	r2,-25764(gp)
   4e74c:	e0bfff15 	stw	r2,-4(fp)

  if (!altera_avalon_timer_ts_freq)
   4e750:	d0a6d817 	ldw	r2,-25760(gp)
   4e754:	1000021e 	bne	r2,zero,4e760 <alt_timestamp_start+0x24>
  {
    return -1;
   4e758:	00bfffc4 	movi	r2,-1
   4e75c:	00001106 	br	4e7a4 <alt_timestamp_start+0x68>
        IOWR_ALTERA_AVALON_TIMER_PERIOD_1 (base, 0xFFFF);;
        IOWR_ALTERA_AVALON_TIMER_PERIOD_2 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_PERIOD_3 (base, 0xFFFF);
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK);
    } else {
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base,ALTERA_AVALON_TIMER_CONTROL_STOP_MSK);
   4e760:	e0bfff17 	ldw	r2,-4(fp)
   4e764:	10800104 	addi	r2,r2,4
   4e768:	00c00204 	movi	r3,8
   4e76c:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODL (base, 0xFFFF);
   4e770:	e0bfff17 	ldw	r2,-4(fp)
   4e774:	10800204 	addi	r2,r2,8
   4e778:	00ffffd4 	movui	r3,65535
   4e77c:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_PERIODH (base, 0xFFFF);
   4e780:	e0bfff17 	ldw	r2,-4(fp)
   4e784:	10800304 	addi	r2,r2,12
   4e788:	00ffffd4 	movui	r3,65535
   4e78c:	10c00035 	stwio	r3,0(r2)
        IOWR_ALTERA_AVALON_TIMER_CONTROL (base, ALTERA_AVALON_TIMER_CONTROL_START_MSK); 
   4e790:	e0bfff17 	ldw	r2,-4(fp)
   4e794:	10800104 	addi	r2,r2,4
   4e798:	00c00104 	movi	r3,4
   4e79c:	10c00035 	stwio	r3,0(r2)
    } 
  }
  return 0;
   4e7a0:	0005883a 	mov	r2,zero
}
   4e7a4:	e037883a 	mov	sp,fp
   4e7a8:	df000017 	ldw	fp,0(sp)
   4e7ac:	dec00104 	addi	sp,sp,4
   4e7b0:	f800283a 	ret

0004e7b4 <alt_timestamp>:
 * The returned timestamp counts up from the last time the period register
 * was reset. 
 */

alt_timestamp_type alt_timestamp(void)
{
   4e7b4:	defffc04 	addi	sp,sp,-16
   4e7b8:	df000315 	stw	fp,12(sp)
   4e7bc:	df000304 	addi	fp,sp,12

  void* base = altera_avalon_timer_ts_base;
   4e7c0:	d0a6d717 	ldw	r2,-25764(gp)
   4e7c4:	e0bffd15 	stw	r2,-12(fp)

  if (!altera_avalon_timer_ts_freq)
   4e7c8:	d0a6d817 	ldw	r2,-25760(gp)
   4e7cc:	1000021e 	bne	r2,zero,4e7d8 <alt_timestamp+0x24>
  {
#if (ALT_TIMESTAMP_COUNTER_SIZE == 64)
        return 0xFFFFFFFFFFFFFFFFULL;
#else
        return 0xFFFFFFFF;
   4e7d0:	00bfffc4 	movi	r2,-1
   4e7d4:	00001306 	br	4e824 <alt_timestamp+0x70>
        alt_timestamp_type snap_2 = IORD_ALTERA_AVALON_TIMER_SNAP_2(base) & ALTERA_AVALON_TIMER_SNAP_2_MSK;
        alt_timestamp_type snap_3 = IORD_ALTERA_AVALON_TIMER_SNAP_3(base) & ALTERA_AVALON_TIMER_SNAP_3_MSK;
        
        return (0xFFFFFFFFFFFFFFFFULL - ( (snap_3 << 48) | (snap_2 << 32) | (snap_1 << 16) | (snap_0) ));
#else
        IOWR_ALTERA_AVALON_TIMER_SNAPL (base, 0);
   4e7d8:	e0bffd17 	ldw	r2,-12(fp)
   4e7dc:	10800404 	addi	r2,r2,16
   4e7e0:	0007883a 	mov	r3,zero
   4e7e4:	10c00035 	stwio	r3,0(r2)
        alt_timestamp_type lower = IORD_ALTERA_AVALON_TIMER_SNAPL(base) & ALTERA_AVALON_TIMER_SNAPL_MSK;
   4e7e8:	e0bffd17 	ldw	r2,-12(fp)
   4e7ec:	10800404 	addi	r2,r2,16
   4e7f0:	10800037 	ldwio	r2,0(r2)
   4e7f4:	10bfffcc 	andi	r2,r2,65535
   4e7f8:	e0bffe15 	stw	r2,-8(fp)
        alt_timestamp_type upper = IORD_ALTERA_AVALON_TIMER_SNAPH(base) & ALTERA_AVALON_TIMER_SNAPH_MSK;
   4e7fc:	e0bffd17 	ldw	r2,-12(fp)
   4e800:	10800504 	addi	r2,r2,20
   4e804:	10800037 	ldwio	r2,0(r2)
   4e808:	10bfffcc 	andi	r2,r2,65535
   4e80c:	e0bfff15 	stw	r2,-4(fp)
        
        return (0xFFFFFFFF - ((upper << 16) | lower)); 
   4e810:	e0bfff17 	ldw	r2,-4(fp)
   4e814:	1006943a 	slli	r3,r2,16
   4e818:	e0bffe17 	ldw	r2,-8(fp)
   4e81c:	1884b03a 	or	r2,r3,r2
   4e820:	0084303a 	nor	r2,zero,r2
#endif
  }
}
   4e824:	e037883a 	mov	sp,fp
   4e828:	df000017 	ldw	fp,0(sp)
   4e82c:	dec00104 	addi	sp,sp,4
   4e830:	f800283a 	ret

0004e834 <alt_timestamp_freq>:
 * Return the number of timestamp ticks per second. This will be 0 if no
 * timestamp device has been registered.
 */

alt_u32 alt_timestamp_freq(void)
{
   4e834:	deffff04 	addi	sp,sp,-4
   4e838:	df000015 	stw	fp,0(sp)
   4e83c:	d839883a 	mov	fp,sp
  return altera_avalon_timer_ts_freq;
   4e840:	d0a6d817 	ldw	r2,-25760(gp)
}
   4e844:	e037883a 	mov	sp,fp
   4e848:	df000017 	ldw	fp,0(sp)
   4e84c:	dec00104 	addi	sp,sp,4
   4e850:	f800283a 	ret

0004e854 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   4e854:	defff504 	addi	sp,sp,-44
   4e858:	df000a15 	stw	fp,40(sp)
   4e85c:	df000a04 	addi	fp,sp,40
   4e860:	e13ffc15 	stw	r4,-16(fp)
   4e864:	e17ffd15 	stw	r5,-12(fp)
   4e868:	e1bffe15 	stw	r6,-8(fp)
   4e86c:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   4e870:	e03ff615 	stw	zero,-40(fp)
   4e874:	d0a6da17 	ldw	r2,-25752(gp)
  
  if (alt_ticks_per_second ())
   4e878:	10003c26 	beq	r2,zero,4e96c <alt_alarm_start+0x118>
  {
    if (alarm)
   4e87c:	e0bffc17 	ldw	r2,-16(fp)
   4e880:	10003826 	beq	r2,zero,4e964 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   4e884:	e0bffc17 	ldw	r2,-16(fp)
   4e888:	e0fffe17 	ldw	r3,-8(fp)
   4e88c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   4e890:	e0bffc17 	ldw	r2,-16(fp)
   4e894:	e0ffff17 	ldw	r3,-4(fp)
   4e898:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4e89c:	0005303a 	rdctl	r2,status
   4e8a0:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4e8a4:	e0fff917 	ldw	r3,-28(fp)
   4e8a8:	00bfff84 	movi	r2,-2
   4e8ac:	1884703a 	and	r2,r3,r2
   4e8b0:	1001703a 	wrctl	status,r2
  
  return context;
   4e8b4:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   4e8b8:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   4e8bc:	d0a6db17 	ldw	r2,-25748(gp)
      
      current_nticks = alt_nticks();
   4e8c0:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   4e8c4:	e0fffd17 	ldw	r3,-12(fp)
   4e8c8:	e0bff617 	ldw	r2,-40(fp)
   4e8cc:	1885883a 	add	r2,r3,r2
   4e8d0:	10c00044 	addi	r3,r2,1
   4e8d4:	e0bffc17 	ldw	r2,-16(fp)
   4e8d8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   4e8dc:	e0bffc17 	ldw	r2,-16(fp)
   4e8e0:	10c00217 	ldw	r3,8(r2)
   4e8e4:	e0bff617 	ldw	r2,-40(fp)
   4e8e8:	1880042e 	bgeu	r3,r2,4e8fc <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   4e8ec:	e0bffc17 	ldw	r2,-16(fp)
   4e8f0:	00c00044 	movi	r3,1
   4e8f4:	10c00405 	stb	r3,16(r2)
   4e8f8:	00000206 	br	4e904 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   4e8fc:	e0bffc17 	ldw	r2,-16(fp)
   4e900:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   4e904:	e0bffc17 	ldw	r2,-16(fp)
   4e908:	d0e00e04 	addi	r3,gp,-32712
   4e90c:	e0fffa15 	stw	r3,-24(fp)
   4e910:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4e914:	e0bffb17 	ldw	r2,-20(fp)
   4e918:	e0fffa17 	ldw	r3,-24(fp)
   4e91c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4e920:	e0bffa17 	ldw	r2,-24(fp)
   4e924:	10c00017 	ldw	r3,0(r2)
   4e928:	e0bffb17 	ldw	r2,-20(fp)
   4e92c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4e930:	e0bffa17 	ldw	r2,-24(fp)
   4e934:	10800017 	ldw	r2,0(r2)
   4e938:	e0fffb17 	ldw	r3,-20(fp)
   4e93c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4e940:	e0bffa17 	ldw	r2,-24(fp)
   4e944:	e0fffb17 	ldw	r3,-20(fp)
   4e948:	10c00015 	stw	r3,0(r2)
   4e94c:	e0bff817 	ldw	r2,-32(fp)
   4e950:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4e954:	e0bff717 	ldw	r2,-36(fp)
   4e958:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   4e95c:	0005883a 	mov	r2,zero
   4e960:	00000306 	br	4e970 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   4e964:	00bffa84 	movi	r2,-22
   4e968:	00000106 	br	4e970 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   4e96c:	00bfde84 	movi	r2,-134
  }
}
   4e970:	e037883a 	mov	sp,fp
   4e974:	df000017 	ldw	fp,0(sp)
   4e978:	dec00104 	addi	sp,sp,4
   4e97c:	f800283a 	ret

0004e980 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   4e980:	defffa04 	addi	sp,sp,-24
   4e984:	dfc00515 	stw	ra,20(sp)
   4e988:	df000415 	stw	fp,16(sp)
   4e98c:	df000404 	addi	fp,sp,16
   4e990:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   4e994:	008000c4 	movi	r2,3
   4e998:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   4e99c:	e0fffd17 	ldw	r3,-12(fp)
   4e9a0:	008003f4 	movhi	r2,15
   4e9a4:	10909004 	addi	r2,r2,16960
   4e9a8:	1885383a 	mul	r2,r3,r2
   4e9ac:	100b883a 	mov	r5,r2
   4e9b0:	0100bef4 	movhi	r4,763
   4e9b4:	213c2004 	addi	r4,r4,-3968
   4e9b8:	004a8cc0 	call	4a8cc <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   4e9bc:	100b883a 	mov	r5,r2
   4e9c0:	01200034 	movhi	r4,32768
   4e9c4:	213fffc4 	addi	r4,r4,-1
   4e9c8:	004a8cc0 	call	4a8cc <__udivsi3>
   4e9cc:	100b883a 	mov	r5,r2
   4e9d0:	e13fff17 	ldw	r4,-4(fp)
   4e9d4:	004a8cc0 	call	4a8cc <__udivsi3>
   4e9d8:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   4e9dc:	e0bffe17 	ldw	r2,-8(fp)
   4e9e0:	10002a26 	beq	r2,zero,4ea8c <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   4e9e4:	e03ffc15 	stw	zero,-16(fp)
   4e9e8:	00001706 	br	4ea48 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   4e9ec:	00a00034 	movhi	r2,32768
   4e9f0:	10bfffc4 	addi	r2,r2,-1
   4e9f4:	10bfffc4 	addi	r2,r2,-1
   4e9f8:	103ffe1e 	bne	r2,zero,4e9f4 <__alt_mem_onchip_memory2_1+0xfffcd9f4>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   4e9fc:	e0fffd17 	ldw	r3,-12(fp)
   4ea00:	008003f4 	movhi	r2,15
   4ea04:	10909004 	addi	r2,r2,16960
   4ea08:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   4ea0c:	100b883a 	mov	r5,r2
   4ea10:	0100bef4 	movhi	r4,763
   4ea14:	213c2004 	addi	r4,r4,-3968
   4ea18:	004a8cc0 	call	4a8cc <__udivsi3>
   4ea1c:	100b883a 	mov	r5,r2
   4ea20:	01200034 	movhi	r4,32768
   4ea24:	213fffc4 	addi	r4,r4,-1
   4ea28:	004a8cc0 	call	4a8cc <__udivsi3>
   4ea2c:	1007883a 	mov	r3,r2
   4ea30:	e0bfff17 	ldw	r2,-4(fp)
   4ea34:	10c5c83a 	sub	r2,r2,r3
   4ea38:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   4ea3c:	e0bffc17 	ldw	r2,-16(fp)
   4ea40:	10800044 	addi	r2,r2,1
   4ea44:	e0bffc15 	stw	r2,-16(fp)
   4ea48:	e0fffc17 	ldw	r3,-16(fp)
   4ea4c:	e0bffe17 	ldw	r2,-8(fp)
   4ea50:	18bfe616 	blt	r3,r2,4e9ec <__alt_mem_onchip_memory2_1+0xfffcd9ec>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4ea54:	e0fffd17 	ldw	r3,-12(fp)
   4ea58:	008003f4 	movhi	r2,15
   4ea5c:	10909004 	addi	r2,r2,16960
   4ea60:	1885383a 	mul	r2,r3,r2
   4ea64:	100b883a 	mov	r5,r2
   4ea68:	0100bef4 	movhi	r4,763
   4ea6c:	213c2004 	addi	r4,r4,-3968
   4ea70:	004a8cc0 	call	4a8cc <__udivsi3>
   4ea74:	1007883a 	mov	r3,r2
   4ea78:	e0bfff17 	ldw	r2,-4(fp)
   4ea7c:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   4ea80:	10bfffc4 	addi	r2,r2,-1
   4ea84:	103ffe1e 	bne	r2,zero,4ea80 <__alt_mem_onchip_memory2_1+0xfffcda80>
   4ea88:	00000d06 	br	4eac0 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   4ea8c:	e0fffd17 	ldw	r3,-12(fp)
   4ea90:	008003f4 	movhi	r2,15
   4ea94:	10909004 	addi	r2,r2,16960
   4ea98:	1885383a 	mul	r2,r3,r2
   4ea9c:	100b883a 	mov	r5,r2
   4eaa0:	0100bef4 	movhi	r4,763
   4eaa4:	213c2004 	addi	r4,r4,-3968
   4eaa8:	004a8cc0 	call	4a8cc <__udivsi3>
   4eaac:	1007883a 	mov	r3,r2
   4eab0:	e0bfff17 	ldw	r2,-4(fp)
   4eab4:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   4eab8:	10bfffc4 	addi	r2,r2,-1
   4eabc:	00bffe16 	blt	zero,r2,4eab8 <__alt_mem_onchip_memory2_1+0xfffcdab8>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   4eac0:	0005883a 	mov	r2,zero
}
   4eac4:	e037883a 	mov	sp,fp
   4eac8:	dfc00117 	ldw	ra,4(sp)
   4eacc:	df000017 	ldw	fp,0(sp)
   4ead0:	dec00204 	addi	sp,sp,8
   4ead4:	f800283a 	ret

0004ead8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   4ead8:	defffe04 	addi	sp,sp,-8
   4eadc:	df000115 	stw	fp,4(sp)
   4eae0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4eae4:	e03fff15 	stw	zero,-4(fp)
   4eae8:	00000506 	br	4eb00 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   4eaec:	e0bfff17 	ldw	r2,-4(fp)
   4eaf0:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   4eaf4:	e0bfff17 	ldw	r2,-4(fp)
   4eaf8:	10800804 	addi	r2,r2,32
   4eafc:	e0bfff15 	stw	r2,-4(fp)
   4eb00:	e0bfff17 	ldw	r2,-4(fp)
   4eb04:	10820030 	cmpltui	r2,r2,2048
   4eb08:	103ff81e 	bne	r2,zero,4eaec <__alt_mem_onchip_memory2_1+0xfffcdaec>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   4eb0c:	0001883a 	nop
   4eb10:	e037883a 	mov	sp,fp
   4eb14:	df000017 	ldw	fp,0(sp)
   4eb18:	dec00104 	addi	sp,sp,4
   4eb1c:	f800283a 	ret

0004eb20 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4eb20:	defffe04 	addi	sp,sp,-8
   4eb24:	dfc00115 	stw	ra,4(sp)
   4eb28:	df000015 	stw	fp,0(sp)
   4eb2c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4eb30:	d0a00b17 	ldw	r2,-32724(gp)
   4eb34:	10000326 	beq	r2,zero,4eb44 <alt_get_errno+0x24>
   4eb38:	d0a00b17 	ldw	r2,-32724(gp)
   4eb3c:	103ee83a 	callr	r2
   4eb40:	00000106 	br	4eb48 <alt_get_errno+0x28>
   4eb44:	d0a6d204 	addi	r2,gp,-25784
}
   4eb48:	e037883a 	mov	sp,fp
   4eb4c:	dfc00117 	ldw	ra,4(sp)
   4eb50:	df000017 	ldw	fp,0(sp)
   4eb54:	dec00204 	addi	sp,sp,8
   4eb58:	f800283a 	ret

0004eb5c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   4eb5c:	defffa04 	addi	sp,sp,-24
   4eb60:	dfc00515 	stw	ra,20(sp)
   4eb64:	df000415 	stw	fp,16(sp)
   4eb68:	df000404 	addi	fp,sp,16
   4eb6c:	e13ffe15 	stw	r4,-8(fp)
   4eb70:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   4eb74:	e0bffe17 	ldw	r2,-8(fp)
   4eb78:	10000326 	beq	r2,zero,4eb88 <alt_dev_llist_insert+0x2c>
   4eb7c:	e0bffe17 	ldw	r2,-8(fp)
   4eb80:	10800217 	ldw	r2,8(r2)
   4eb84:	1000061e 	bne	r2,zero,4eba0 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   4eb88:	004eb200 	call	4eb20 <alt_get_errno>
   4eb8c:	1007883a 	mov	r3,r2
   4eb90:	00800584 	movi	r2,22
   4eb94:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   4eb98:	00bffa84 	movi	r2,-22
   4eb9c:	00001306 	br	4ebec <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   4eba0:	e0bffe17 	ldw	r2,-8(fp)
   4eba4:	e0ffff17 	ldw	r3,-4(fp)
   4eba8:	e0fffc15 	stw	r3,-16(fp)
   4ebac:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   4ebb0:	e0bffd17 	ldw	r2,-12(fp)
   4ebb4:	e0fffc17 	ldw	r3,-16(fp)
   4ebb8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   4ebbc:	e0bffc17 	ldw	r2,-16(fp)
   4ebc0:	10c00017 	ldw	r3,0(r2)
   4ebc4:	e0bffd17 	ldw	r2,-12(fp)
   4ebc8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   4ebcc:	e0bffc17 	ldw	r2,-16(fp)
   4ebd0:	10800017 	ldw	r2,0(r2)
   4ebd4:	e0fffd17 	ldw	r3,-12(fp)
   4ebd8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   4ebdc:	e0bffc17 	ldw	r2,-16(fp)
   4ebe0:	e0fffd17 	ldw	r3,-12(fp)
   4ebe4:	10c00015 	stw	r3,0(r2)

  return 0;  
   4ebe8:	0005883a 	mov	r2,zero
}
   4ebec:	e037883a 	mov	sp,fp
   4ebf0:	dfc00117 	ldw	ra,4(sp)
   4ebf4:	df000017 	ldw	fp,0(sp)
   4ebf8:	dec00204 	addi	sp,sp,8
   4ebfc:	f800283a 	ret

0004ec00 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   4ec00:	defffd04 	addi	sp,sp,-12
   4ec04:	dfc00215 	stw	ra,8(sp)
   4ec08:	df000115 	stw	fp,4(sp)
   4ec0c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4ec10:	00800174 	movhi	r2,5
   4ec14:	10be5204 	addi	r2,r2,-1720
   4ec18:	e0bfff15 	stw	r2,-4(fp)
   4ec1c:	00000606 	br	4ec38 <_do_ctors+0x38>
        (*ctor) (); 
   4ec20:	e0bfff17 	ldw	r2,-4(fp)
   4ec24:	10800017 	ldw	r2,0(r2)
   4ec28:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   4ec2c:	e0bfff17 	ldw	r2,-4(fp)
   4ec30:	10bfff04 	addi	r2,r2,-4
   4ec34:	e0bfff15 	stw	r2,-4(fp)
   4ec38:	e0ffff17 	ldw	r3,-4(fp)
   4ec3c:	00800174 	movhi	r2,5
   4ec40:	10be5304 	addi	r2,r2,-1716
   4ec44:	18bff62e 	bgeu	r3,r2,4ec20 <__alt_mem_onchip_memory2_1+0xfffcdc20>
        (*ctor) (); 
}
   4ec48:	0001883a 	nop
   4ec4c:	e037883a 	mov	sp,fp
   4ec50:	dfc00117 	ldw	ra,4(sp)
   4ec54:	df000017 	ldw	fp,0(sp)
   4ec58:	dec00204 	addi	sp,sp,8
   4ec5c:	f800283a 	ret

0004ec60 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   4ec60:	defffd04 	addi	sp,sp,-12
   4ec64:	dfc00215 	stw	ra,8(sp)
   4ec68:	df000115 	stw	fp,4(sp)
   4ec6c:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4ec70:	00800174 	movhi	r2,5
   4ec74:	10be5204 	addi	r2,r2,-1720
   4ec78:	e0bfff15 	stw	r2,-4(fp)
   4ec7c:	00000606 	br	4ec98 <_do_dtors+0x38>
        (*dtor) (); 
   4ec80:	e0bfff17 	ldw	r2,-4(fp)
   4ec84:	10800017 	ldw	r2,0(r2)
   4ec88:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   4ec8c:	e0bfff17 	ldw	r2,-4(fp)
   4ec90:	10bfff04 	addi	r2,r2,-4
   4ec94:	e0bfff15 	stw	r2,-4(fp)
   4ec98:	e0ffff17 	ldw	r3,-4(fp)
   4ec9c:	00800174 	movhi	r2,5
   4eca0:	10be5304 	addi	r2,r2,-1716
   4eca4:	18bff62e 	bgeu	r3,r2,4ec80 <__alt_mem_onchip_memory2_1+0xfffcdc80>
        (*dtor) (); 
}
   4eca8:	0001883a 	nop
   4ecac:	e037883a 	mov	sp,fp
   4ecb0:	dfc00117 	ldw	ra,4(sp)
   4ecb4:	df000017 	ldw	fp,0(sp)
   4ecb8:	dec00204 	addi	sp,sp,8
   4ecbc:	f800283a 	ret

0004ecc0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   4ecc0:	defffe04 	addi	sp,sp,-8
   4ecc4:	dfc00115 	stw	ra,4(sp)
   4ecc8:	df000015 	stw	fp,0(sp)
   4eccc:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   4ecd0:	01440004 	movi	r5,4096
   4ecd4:	0009883a 	mov	r4,zero
   4ecd8:	004f5280 	call	4f528 <alt_icache_flush>
#endif
}
   4ecdc:	0001883a 	nop
   4ece0:	e037883a 	mov	sp,fp
   4ece4:	dfc00117 	ldw	ra,4(sp)
   4ece8:	df000017 	ldw	fp,0(sp)
   4ecec:	dec00204 	addi	sp,sp,8
   4ecf0:	f800283a 	ret

0004ecf4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   4ecf4:	defffe04 	addi	sp,sp,-8
   4ecf8:	df000115 	stw	fp,4(sp)
   4ecfc:	df000104 	addi	fp,sp,4
   4ed00:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   4ed04:	e0bfff17 	ldw	r2,-4(fp)
   4ed08:	10bffe84 	addi	r2,r2,-6
   4ed0c:	10c00428 	cmpgeui	r3,r2,16
   4ed10:	18001a1e 	bne	r3,zero,4ed7c <alt_exception_cause_generated_bad_addr+0x88>
   4ed14:	100690ba 	slli	r3,r2,2
   4ed18:	00800174 	movhi	r2,5
   4ed1c:	10bb4b04 	addi	r2,r2,-4820
   4ed20:	1885883a 	add	r2,r3,r2
   4ed24:	10800017 	ldw	r2,0(r2)
   4ed28:	1000683a 	jmp	r2
   4ed2c:	0004ed6c 	andhi	zero,zero,5045
   4ed30:	0004ed6c 	andhi	zero,zero,5045
   4ed34:	0004ed7c 	xorhi	zero,zero,5045
   4ed38:	0004ed7c 	xorhi	zero,zero,5045
   4ed3c:	0004ed7c 	xorhi	zero,zero,5045
   4ed40:	0004ed6c 	andhi	zero,zero,5045
   4ed44:	0004ed74 	movhi	zero,5045
   4ed48:	0004ed7c 	xorhi	zero,zero,5045
   4ed4c:	0004ed6c 	andhi	zero,zero,5045
   4ed50:	0004ed6c 	andhi	zero,zero,5045
   4ed54:	0004ed7c 	xorhi	zero,zero,5045
   4ed58:	0004ed6c 	andhi	zero,zero,5045
   4ed5c:	0004ed74 	movhi	zero,5045
   4ed60:	0004ed7c 	xorhi	zero,zero,5045
   4ed64:	0004ed7c 	xorhi	zero,zero,5045
   4ed68:	0004ed6c 	andhi	zero,zero,5045
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   4ed6c:	00800044 	movi	r2,1
   4ed70:	00000306 	br	4ed80 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   4ed74:	0005883a 	mov	r2,zero
   4ed78:	00000106 	br	4ed80 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   4ed7c:	0005883a 	mov	r2,zero
  }
}
   4ed80:	e037883a 	mov	sp,fp
   4ed84:	df000017 	ldw	fp,0(sp)
   4ed88:	dec00104 	addi	sp,sp,4
   4ed8c:	f800283a 	ret

0004ed90 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   4ed90:	defff904 	addi	sp,sp,-28
   4ed94:	dfc00615 	stw	ra,24(sp)
   4ed98:	df000515 	stw	fp,20(sp)
   4ed9c:	df000504 	addi	fp,sp,20
   4eda0:	e13ffc15 	stw	r4,-16(fp)
   4eda4:	e17ffd15 	stw	r5,-12(fp)
   4eda8:	e1bffe15 	stw	r6,-8(fp)
   4edac:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   4edb0:	e1bfff17 	ldw	r6,-4(fp)
   4edb4:	e17ffe17 	ldw	r5,-8(fp)
   4edb8:	e13ffd17 	ldw	r4,-12(fp)
   4edbc:	004efd00 	call	4efd0 <open>
   4edc0:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   4edc4:	e0bffb17 	ldw	r2,-20(fp)
   4edc8:	10001c16 	blt	r2,zero,4ee3c <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   4edcc:	00800174 	movhi	r2,5
   4edd0:	10817504 	addi	r2,r2,1492
   4edd4:	e0fffb17 	ldw	r3,-20(fp)
   4edd8:	18c00324 	muli	r3,r3,12
   4eddc:	10c5883a 	add	r2,r2,r3
   4ede0:	10c00017 	ldw	r3,0(r2)
   4ede4:	e0bffc17 	ldw	r2,-16(fp)
   4ede8:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   4edec:	00800174 	movhi	r2,5
   4edf0:	10817504 	addi	r2,r2,1492
   4edf4:	e0fffb17 	ldw	r3,-20(fp)
   4edf8:	18c00324 	muli	r3,r3,12
   4edfc:	10c5883a 	add	r2,r2,r3
   4ee00:	10800104 	addi	r2,r2,4
   4ee04:	10c00017 	ldw	r3,0(r2)
   4ee08:	e0bffc17 	ldw	r2,-16(fp)
   4ee0c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   4ee10:	00800174 	movhi	r2,5
   4ee14:	10817504 	addi	r2,r2,1492
   4ee18:	e0fffb17 	ldw	r3,-20(fp)
   4ee1c:	18c00324 	muli	r3,r3,12
   4ee20:	10c5883a 	add	r2,r2,r3
   4ee24:	10800204 	addi	r2,r2,8
   4ee28:	10c00017 	ldw	r3,0(r2)
   4ee2c:	e0bffc17 	ldw	r2,-16(fp)
   4ee30:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   4ee34:	e13ffb17 	ldw	r4,-20(fp)
   4ee38:	004d98c0 	call	4d98c <alt_release_fd>
  }
} 
   4ee3c:	0001883a 	nop
   4ee40:	e037883a 	mov	sp,fp
   4ee44:	dfc00117 	ldw	ra,4(sp)
   4ee48:	df000017 	ldw	fp,0(sp)
   4ee4c:	dec00204 	addi	sp,sp,8
   4ee50:	f800283a 	ret

0004ee54 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   4ee54:	defffb04 	addi	sp,sp,-20
   4ee58:	dfc00415 	stw	ra,16(sp)
   4ee5c:	df000315 	stw	fp,12(sp)
   4ee60:	df000304 	addi	fp,sp,12
   4ee64:	e13ffd15 	stw	r4,-12(fp)
   4ee68:	e17ffe15 	stw	r5,-8(fp)
   4ee6c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   4ee70:	01c07fc4 	movi	r7,511
   4ee74:	01800044 	movi	r6,1
   4ee78:	e17ffd17 	ldw	r5,-12(fp)
   4ee7c:	01000174 	movhi	r4,5
   4ee80:	21017804 	addi	r4,r4,1504
   4ee84:	004ed900 	call	4ed90 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   4ee88:	01c07fc4 	movi	r7,511
   4ee8c:	000d883a 	mov	r6,zero
   4ee90:	e17ffe17 	ldw	r5,-8(fp)
   4ee94:	01000174 	movhi	r4,5
   4ee98:	21017504 	addi	r4,r4,1492
   4ee9c:	004ed900 	call	4ed90 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   4eea0:	01c07fc4 	movi	r7,511
   4eea4:	01800044 	movi	r6,1
   4eea8:	e17fff17 	ldw	r5,-4(fp)
   4eeac:	01000174 	movhi	r4,5
   4eeb0:	21017b04 	addi	r4,r4,1516
   4eeb4:	004ed900 	call	4ed90 <alt_open_fd>
}  
   4eeb8:	0001883a 	nop
   4eebc:	e037883a 	mov	sp,fp
   4eec0:	dfc00117 	ldw	ra,4(sp)
   4eec4:	df000017 	ldw	fp,0(sp)
   4eec8:	dec00204 	addi	sp,sp,8
   4eecc:	f800283a 	ret

0004eed0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   4eed0:	defffe04 	addi	sp,sp,-8
   4eed4:	dfc00115 	stw	ra,4(sp)
   4eed8:	df000015 	stw	fp,0(sp)
   4eedc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   4eee0:	d0a00b17 	ldw	r2,-32724(gp)
   4eee4:	10000326 	beq	r2,zero,4eef4 <alt_get_errno+0x24>
   4eee8:	d0a00b17 	ldw	r2,-32724(gp)
   4eeec:	103ee83a 	callr	r2
   4eef0:	00000106 	br	4eef8 <alt_get_errno+0x28>
   4eef4:	d0a6d204 	addi	r2,gp,-25784
}
   4eef8:	e037883a 	mov	sp,fp
   4eefc:	dfc00117 	ldw	ra,4(sp)
   4ef00:	df000017 	ldw	fp,0(sp)
   4ef04:	dec00204 	addi	sp,sp,8
   4ef08:	f800283a 	ret

0004ef0c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   4ef0c:	defffd04 	addi	sp,sp,-12
   4ef10:	df000215 	stw	fp,8(sp)
   4ef14:	df000204 	addi	fp,sp,8
   4ef18:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   4ef1c:	e0bfff17 	ldw	r2,-4(fp)
   4ef20:	10800217 	ldw	r2,8(r2)
   4ef24:	10d00034 	orhi	r3,r2,16384
   4ef28:	e0bfff17 	ldw	r2,-4(fp)
   4ef2c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4ef30:	e03ffe15 	stw	zero,-8(fp)
   4ef34:	00001d06 	br	4efac <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4ef38:	00800174 	movhi	r2,5
   4ef3c:	10817504 	addi	r2,r2,1492
   4ef40:	e0fffe17 	ldw	r3,-8(fp)
   4ef44:	18c00324 	muli	r3,r3,12
   4ef48:	10c5883a 	add	r2,r2,r3
   4ef4c:	10c00017 	ldw	r3,0(r2)
   4ef50:	e0bfff17 	ldw	r2,-4(fp)
   4ef54:	10800017 	ldw	r2,0(r2)
   4ef58:	1880111e 	bne	r3,r2,4efa0 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4ef5c:	00800174 	movhi	r2,5
   4ef60:	10817504 	addi	r2,r2,1492
   4ef64:	e0fffe17 	ldw	r3,-8(fp)
   4ef68:	18c00324 	muli	r3,r3,12
   4ef6c:	10c5883a 	add	r2,r2,r3
   4ef70:	10800204 	addi	r2,r2,8
   4ef74:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   4ef78:	1000090e 	bge	r2,zero,4efa0 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   4ef7c:	e0bffe17 	ldw	r2,-8(fp)
   4ef80:	10c00324 	muli	r3,r2,12
   4ef84:	00800174 	movhi	r2,5
   4ef88:	10817504 	addi	r2,r2,1492
   4ef8c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   4ef90:	e0bfff17 	ldw	r2,-4(fp)
   4ef94:	18800226 	beq	r3,r2,4efa0 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   4ef98:	00bffcc4 	movi	r2,-13
   4ef9c:	00000806 	br	4efc0 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   4efa0:	e0bffe17 	ldw	r2,-8(fp)
   4efa4:	10800044 	addi	r2,r2,1
   4efa8:	e0bffe15 	stw	r2,-8(fp)
   4efac:	d0a00a17 	ldw	r2,-32728(gp)
   4efb0:	1007883a 	mov	r3,r2
   4efb4:	e0bffe17 	ldw	r2,-8(fp)
   4efb8:	18bfdf2e 	bgeu	r3,r2,4ef38 <__alt_mem_onchip_memory2_1+0xfffcdf38>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   4efbc:	0005883a 	mov	r2,zero
}
   4efc0:	e037883a 	mov	sp,fp
   4efc4:	df000017 	ldw	fp,0(sp)
   4efc8:	dec00104 	addi	sp,sp,4
   4efcc:	f800283a 	ret

0004efd0 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   4efd0:	defff604 	addi	sp,sp,-40
   4efd4:	dfc00915 	stw	ra,36(sp)
   4efd8:	df000815 	stw	fp,32(sp)
   4efdc:	df000804 	addi	fp,sp,32
   4efe0:	e13ffd15 	stw	r4,-12(fp)
   4efe4:	e17ffe15 	stw	r5,-8(fp)
   4efe8:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   4efec:	00bfffc4 	movi	r2,-1
   4eff0:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   4eff4:	00bffb44 	movi	r2,-19
   4eff8:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   4effc:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   4f000:	d1600804 	addi	r5,gp,-32736
   4f004:	e13ffd17 	ldw	r4,-12(fp)
   4f008:	004f2ec0 	call	4f2ec <alt_find_dev>
   4f00c:	e0bff815 	stw	r2,-32(fp)
   4f010:	e0bff817 	ldw	r2,-32(fp)
   4f014:	1000051e 	bne	r2,zero,4f02c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   4f018:	e13ffd17 	ldw	r4,-12(fp)
   4f01c:	004f37c0 	call	4f37c <alt_find_file>
   4f020:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   4f024:	00800044 	movi	r2,1
   4f028:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   4f02c:	e0bff817 	ldw	r2,-32(fp)
   4f030:	10002926 	beq	r2,zero,4f0d8 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   4f034:	e13ff817 	ldw	r4,-32(fp)
   4f038:	004f4840 	call	4f484 <alt_get_fd>
   4f03c:	e0bff915 	stw	r2,-28(fp)
   4f040:	e0bff917 	ldw	r2,-28(fp)
   4f044:	1000030e 	bge	r2,zero,4f054 <open+0x84>
    {
      status = index;
   4f048:	e0bff917 	ldw	r2,-28(fp)
   4f04c:	e0bffa15 	stw	r2,-24(fp)
   4f050:	00002306 	br	4f0e0 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   4f054:	e0bff917 	ldw	r2,-28(fp)
   4f058:	10c00324 	muli	r3,r2,12
   4f05c:	00800174 	movhi	r2,5
   4f060:	10817504 	addi	r2,r2,1492
   4f064:	1885883a 	add	r2,r3,r2
   4f068:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   4f06c:	e0fffe17 	ldw	r3,-8(fp)
   4f070:	00900034 	movhi	r2,16384
   4f074:	10bfffc4 	addi	r2,r2,-1
   4f078:	1886703a 	and	r3,r3,r2
   4f07c:	e0bffc17 	ldw	r2,-16(fp)
   4f080:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   4f084:	e0bffb17 	ldw	r2,-20(fp)
   4f088:	1000051e 	bne	r2,zero,4f0a0 <open+0xd0>
   4f08c:	e13ffc17 	ldw	r4,-16(fp)
   4f090:	004ef0c0 	call	4ef0c <alt_file_locked>
   4f094:	e0bffa15 	stw	r2,-24(fp)
   4f098:	e0bffa17 	ldw	r2,-24(fp)
   4f09c:	10001016 	blt	r2,zero,4f0e0 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   4f0a0:	e0bff817 	ldw	r2,-32(fp)
   4f0a4:	10800317 	ldw	r2,12(r2)
   4f0a8:	10000826 	beq	r2,zero,4f0cc <open+0xfc>
   4f0ac:	e0bff817 	ldw	r2,-32(fp)
   4f0b0:	10800317 	ldw	r2,12(r2)
   4f0b4:	e1ffff17 	ldw	r7,-4(fp)
   4f0b8:	e1bffe17 	ldw	r6,-8(fp)
   4f0bc:	e17ffd17 	ldw	r5,-12(fp)
   4f0c0:	e13ffc17 	ldw	r4,-16(fp)
   4f0c4:	103ee83a 	callr	r2
   4f0c8:	00000106 	br	4f0d0 <open+0x100>
   4f0cc:	0005883a 	mov	r2,zero
   4f0d0:	e0bffa15 	stw	r2,-24(fp)
   4f0d4:	00000206 	br	4f0e0 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   4f0d8:	00bffb44 	movi	r2,-19
   4f0dc:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   4f0e0:	e0bffa17 	ldw	r2,-24(fp)
   4f0e4:	1000090e 	bge	r2,zero,4f10c <open+0x13c>
  {
    alt_release_fd (index);  
   4f0e8:	e13ff917 	ldw	r4,-28(fp)
   4f0ec:	004d98c0 	call	4d98c <alt_release_fd>
    ALT_ERRNO = -status;
   4f0f0:	004eed00 	call	4eed0 <alt_get_errno>
   4f0f4:	1007883a 	mov	r3,r2
   4f0f8:	e0bffa17 	ldw	r2,-24(fp)
   4f0fc:	0085c83a 	sub	r2,zero,r2
   4f100:	18800015 	stw	r2,0(r3)
    return -1;
   4f104:	00bfffc4 	movi	r2,-1
   4f108:	00000106 	br	4f110 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   4f10c:	e0bff917 	ldw	r2,-28(fp)
}
   4f110:	e037883a 	mov	sp,fp
   4f114:	dfc00117 	ldw	ra,4(sp)
   4f118:	df000017 	ldw	fp,0(sp)
   4f11c:	dec00204 	addi	sp,sp,8
   4f120:	f800283a 	ret

0004f124 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   4f124:	defffa04 	addi	sp,sp,-24
   4f128:	df000515 	stw	fp,20(sp)
   4f12c:	df000504 	addi	fp,sp,20
   4f130:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   4f134:	0005303a 	rdctl	r2,status
   4f138:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   4f13c:	e0fffc17 	ldw	r3,-16(fp)
   4f140:	00bfff84 	movi	r2,-2
   4f144:	1884703a 	and	r2,r3,r2
   4f148:	1001703a 	wrctl	status,r2
  
  return context;
   4f14c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   4f150:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   4f154:	e0bfff17 	ldw	r2,-4(fp)
   4f158:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   4f15c:	e0bffd17 	ldw	r2,-12(fp)
   4f160:	10800017 	ldw	r2,0(r2)
   4f164:	e0fffd17 	ldw	r3,-12(fp)
   4f168:	18c00117 	ldw	r3,4(r3)
   4f16c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   4f170:	e0bffd17 	ldw	r2,-12(fp)
   4f174:	10800117 	ldw	r2,4(r2)
   4f178:	e0fffd17 	ldw	r3,-12(fp)
   4f17c:	18c00017 	ldw	r3,0(r3)
   4f180:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   4f184:	e0bffd17 	ldw	r2,-12(fp)
   4f188:	e0fffd17 	ldw	r3,-12(fp)
   4f18c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   4f190:	e0bffd17 	ldw	r2,-12(fp)
   4f194:	e0fffd17 	ldw	r3,-12(fp)
   4f198:	10c00015 	stw	r3,0(r2)
   4f19c:	e0bffb17 	ldw	r2,-20(fp)
   4f1a0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   4f1a4:	e0bffe17 	ldw	r2,-8(fp)
   4f1a8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   4f1ac:	0001883a 	nop
   4f1b0:	e037883a 	mov	sp,fp
   4f1b4:	df000017 	ldw	fp,0(sp)
   4f1b8:	dec00104 	addi	sp,sp,4
   4f1bc:	f800283a 	ret

0004f1c0 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   4f1c0:	defffb04 	addi	sp,sp,-20
   4f1c4:	dfc00415 	stw	ra,16(sp)
   4f1c8:	df000315 	stw	fp,12(sp)
   4f1cc:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   4f1d0:	d0a00e17 	ldw	r2,-32712(gp)
   4f1d4:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   4f1d8:	d0a6db17 	ldw	r2,-25748(gp)
   4f1dc:	10800044 	addi	r2,r2,1
   4f1e0:	d0a6db15 	stw	r2,-25748(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f1e4:	00002e06 	br	4f2a0 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   4f1e8:	e0bffd17 	ldw	r2,-12(fp)
   4f1ec:	10800017 	ldw	r2,0(r2)
   4f1f0:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   4f1f4:	e0bffd17 	ldw	r2,-12(fp)
   4f1f8:	10800403 	ldbu	r2,16(r2)
   4f1fc:	10803fcc 	andi	r2,r2,255
   4f200:	10000426 	beq	r2,zero,4f214 <alt_tick+0x54>
   4f204:	d0a6db17 	ldw	r2,-25748(gp)
   4f208:	1000021e 	bne	r2,zero,4f214 <alt_tick+0x54>
    {
      alarm->rollover = 0;
   4f20c:	e0bffd17 	ldw	r2,-12(fp)
   4f210:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   4f214:	e0bffd17 	ldw	r2,-12(fp)
   4f218:	10800217 	ldw	r2,8(r2)
   4f21c:	d0e6db17 	ldw	r3,-25748(gp)
   4f220:	18801d36 	bltu	r3,r2,4f298 <alt_tick+0xd8>
   4f224:	e0bffd17 	ldw	r2,-12(fp)
   4f228:	10800403 	ldbu	r2,16(r2)
   4f22c:	10803fcc 	andi	r2,r2,255
   4f230:	1000191e 	bne	r2,zero,4f298 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   4f234:	e0bffd17 	ldw	r2,-12(fp)
   4f238:	10800317 	ldw	r2,12(r2)
   4f23c:	e0fffd17 	ldw	r3,-12(fp)
   4f240:	18c00517 	ldw	r3,20(r3)
   4f244:	1809883a 	mov	r4,r3
   4f248:	103ee83a 	callr	r2
   4f24c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   4f250:	e0bfff17 	ldw	r2,-4(fp)
   4f254:	1000031e 	bne	r2,zero,4f264 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   4f258:	e13ffd17 	ldw	r4,-12(fp)
   4f25c:	004f1240 	call	4f124 <alt_alarm_stop>
   4f260:	00000d06 	br	4f298 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   4f264:	e0bffd17 	ldw	r2,-12(fp)
   4f268:	10c00217 	ldw	r3,8(r2)
   4f26c:	e0bfff17 	ldw	r2,-4(fp)
   4f270:	1887883a 	add	r3,r3,r2
   4f274:	e0bffd17 	ldw	r2,-12(fp)
   4f278:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   4f27c:	e0bffd17 	ldw	r2,-12(fp)
   4f280:	10c00217 	ldw	r3,8(r2)
   4f284:	d0a6db17 	ldw	r2,-25748(gp)
   4f288:	1880032e 	bgeu	r3,r2,4f298 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   4f28c:	e0bffd17 	ldw	r2,-12(fp)
   4f290:	00c00044 	movi	r3,1
   4f294:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   4f298:	e0bffe17 	ldw	r2,-8(fp)
   4f29c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   4f2a0:	e0fffd17 	ldw	r3,-12(fp)
   4f2a4:	d0a00e04 	addi	r2,gp,-32712
   4f2a8:	18bfcf1e 	bne	r3,r2,4f1e8 <__alt_mem_onchip_memory2_1+0xfffce1e8>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   4f2ac:	0001883a 	nop
}
   4f2b0:	0001883a 	nop
   4f2b4:	e037883a 	mov	sp,fp
   4f2b8:	dfc00117 	ldw	ra,4(sp)
   4f2bc:	df000017 	ldw	fp,0(sp)
   4f2c0:	dec00204 	addi	sp,sp,8
   4f2c4:	f800283a 	ret

0004f2c8 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   4f2c8:	deffff04 	addi	sp,sp,-4
   4f2cc:	df000015 	stw	fp,0(sp)
   4f2d0:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   4f2d4:	000170fa 	wrctl	ienable,zero
}
   4f2d8:	0001883a 	nop
   4f2dc:	e037883a 	mov	sp,fp
   4f2e0:	df000017 	ldw	fp,0(sp)
   4f2e4:	dec00104 	addi	sp,sp,4
   4f2e8:	f800283a 	ret

0004f2ec <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   4f2ec:	defffa04 	addi	sp,sp,-24
   4f2f0:	dfc00515 	stw	ra,20(sp)
   4f2f4:	df000415 	stw	fp,16(sp)
   4f2f8:	df000404 	addi	fp,sp,16
   4f2fc:	e13ffe15 	stw	r4,-8(fp)
   4f300:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   4f304:	e0bfff17 	ldw	r2,-4(fp)
   4f308:	10800017 	ldw	r2,0(r2)
   4f30c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   4f310:	e13ffe17 	ldw	r4,-8(fp)
   4f314:	00408100 	call	40810 <strlen>
   4f318:	10800044 	addi	r2,r2,1
   4f31c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f320:	00000d06 	br	4f358 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   4f324:	e0bffc17 	ldw	r2,-16(fp)
   4f328:	10800217 	ldw	r2,8(r2)
   4f32c:	e0fffd17 	ldw	r3,-12(fp)
   4f330:	180d883a 	mov	r6,r3
   4f334:	e17ffe17 	ldw	r5,-8(fp)
   4f338:	1009883a 	mov	r4,r2
   4f33c:	004f6040 	call	4f604 <memcmp>
   4f340:	1000021e 	bne	r2,zero,4f34c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   4f344:	e0bffc17 	ldw	r2,-16(fp)
   4f348:	00000706 	br	4f368 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   4f34c:	e0bffc17 	ldw	r2,-16(fp)
   4f350:	10800017 	ldw	r2,0(r2)
   4f354:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   4f358:	e0fffc17 	ldw	r3,-16(fp)
   4f35c:	e0bfff17 	ldw	r2,-4(fp)
   4f360:	18bff01e 	bne	r3,r2,4f324 <__alt_mem_onchip_memory2_1+0xfffce324>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   4f364:	0005883a 	mov	r2,zero
}
   4f368:	e037883a 	mov	sp,fp
   4f36c:	dfc00117 	ldw	ra,4(sp)
   4f370:	df000017 	ldw	fp,0(sp)
   4f374:	dec00204 	addi	sp,sp,8
   4f378:	f800283a 	ret

0004f37c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   4f37c:	defffb04 	addi	sp,sp,-20
   4f380:	dfc00415 	stw	ra,16(sp)
   4f384:	df000315 	stw	fp,12(sp)
   4f388:	df000304 	addi	fp,sp,12
   4f38c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   4f390:	d0a00617 	ldw	r2,-32744(gp)
   4f394:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f398:	00003106 	br	4f460 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   4f39c:	e0bffd17 	ldw	r2,-12(fp)
   4f3a0:	10800217 	ldw	r2,8(r2)
   4f3a4:	1009883a 	mov	r4,r2
   4f3a8:	00408100 	call	40810 <strlen>
   4f3ac:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   4f3b0:	e0bffd17 	ldw	r2,-12(fp)
   4f3b4:	10c00217 	ldw	r3,8(r2)
   4f3b8:	e0bffe17 	ldw	r2,-8(fp)
   4f3bc:	10bfffc4 	addi	r2,r2,-1
   4f3c0:	1885883a 	add	r2,r3,r2
   4f3c4:	10800003 	ldbu	r2,0(r2)
   4f3c8:	10803fcc 	andi	r2,r2,255
   4f3cc:	1080201c 	xori	r2,r2,128
   4f3d0:	10bfe004 	addi	r2,r2,-128
   4f3d4:	10800bd8 	cmpnei	r2,r2,47
   4f3d8:	1000031e 	bne	r2,zero,4f3e8 <alt_find_file+0x6c>
    {
      len -= 1;
   4f3dc:	e0bffe17 	ldw	r2,-8(fp)
   4f3e0:	10bfffc4 	addi	r2,r2,-1
   4f3e4:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f3e8:	e0bffe17 	ldw	r2,-8(fp)
   4f3ec:	e0ffff17 	ldw	r3,-4(fp)
   4f3f0:	1885883a 	add	r2,r3,r2
   4f3f4:	10800003 	ldbu	r2,0(r2)
   4f3f8:	10803fcc 	andi	r2,r2,255
   4f3fc:	1080201c 	xori	r2,r2,128
   4f400:	10bfe004 	addi	r2,r2,-128
   4f404:	10800be0 	cmpeqi	r2,r2,47
   4f408:	1000081e 	bne	r2,zero,4f42c <alt_find_file+0xb0>
   4f40c:	e0bffe17 	ldw	r2,-8(fp)
   4f410:	e0ffff17 	ldw	r3,-4(fp)
   4f414:	1885883a 	add	r2,r3,r2
   4f418:	10800003 	ldbu	r2,0(r2)
   4f41c:	10803fcc 	andi	r2,r2,255
   4f420:	1080201c 	xori	r2,r2,128
   4f424:	10bfe004 	addi	r2,r2,-128
   4f428:	10000a1e 	bne	r2,zero,4f454 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   4f42c:	e0bffd17 	ldw	r2,-12(fp)
   4f430:	10800217 	ldw	r2,8(r2)
   4f434:	e0fffe17 	ldw	r3,-8(fp)
   4f438:	180d883a 	mov	r6,r3
   4f43c:	e17fff17 	ldw	r5,-4(fp)
   4f440:	1009883a 	mov	r4,r2
   4f444:	004f6040 	call	4f604 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   4f448:	1000021e 	bne	r2,zero,4f454 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   4f44c:	e0bffd17 	ldw	r2,-12(fp)
   4f450:	00000706 	br	4f470 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   4f454:	e0bffd17 	ldw	r2,-12(fp)
   4f458:	10800017 	ldw	r2,0(r2)
   4f45c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   4f460:	e0fffd17 	ldw	r3,-12(fp)
   4f464:	d0a00604 	addi	r2,gp,-32744
   4f468:	18bfcc1e 	bne	r3,r2,4f39c <__alt_mem_onchip_memory2_1+0xfffce39c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   4f46c:	0005883a 	mov	r2,zero
}
   4f470:	e037883a 	mov	sp,fp
   4f474:	dfc00117 	ldw	ra,4(sp)
   4f478:	df000017 	ldw	fp,0(sp)
   4f47c:	dec00204 	addi	sp,sp,8
   4f480:	f800283a 	ret

0004f484 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   4f484:	defffc04 	addi	sp,sp,-16
   4f488:	df000315 	stw	fp,12(sp)
   4f48c:	df000304 	addi	fp,sp,12
   4f490:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   4f494:	00bffa04 	movi	r2,-24
   4f498:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f49c:	e03ffd15 	stw	zero,-12(fp)
   4f4a0:	00001906 	br	4f508 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   4f4a4:	00800174 	movhi	r2,5
   4f4a8:	10817504 	addi	r2,r2,1492
   4f4ac:	e0fffd17 	ldw	r3,-12(fp)
   4f4b0:	18c00324 	muli	r3,r3,12
   4f4b4:	10c5883a 	add	r2,r2,r3
   4f4b8:	10800017 	ldw	r2,0(r2)
   4f4bc:	10000f1e 	bne	r2,zero,4f4fc <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   4f4c0:	00800174 	movhi	r2,5
   4f4c4:	10817504 	addi	r2,r2,1492
   4f4c8:	e0fffd17 	ldw	r3,-12(fp)
   4f4cc:	18c00324 	muli	r3,r3,12
   4f4d0:	10c5883a 	add	r2,r2,r3
   4f4d4:	e0ffff17 	ldw	r3,-4(fp)
   4f4d8:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   4f4dc:	d0e00a17 	ldw	r3,-32728(gp)
   4f4e0:	e0bffd17 	ldw	r2,-12(fp)
   4f4e4:	1880020e 	bge	r3,r2,4f4f0 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   4f4e8:	e0bffd17 	ldw	r2,-12(fp)
   4f4ec:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   4f4f0:	e0bffd17 	ldw	r2,-12(fp)
   4f4f4:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   4f4f8:	00000606 	br	4f514 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   4f4fc:	e0bffd17 	ldw	r2,-12(fp)
   4f500:	10800044 	addi	r2,r2,1
   4f504:	e0bffd15 	stw	r2,-12(fp)
   4f508:	e0bffd17 	ldw	r2,-12(fp)
   4f50c:	10800810 	cmplti	r2,r2,32
   4f510:	103fe41e 	bne	r2,zero,4f4a4 <__alt_mem_onchip_memory2_1+0xfffce4a4>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   4f514:	e0bffe17 	ldw	r2,-8(fp)
}
   4f518:	e037883a 	mov	sp,fp
   4f51c:	df000017 	ldw	fp,0(sp)
   4f520:	dec00104 	addi	sp,sp,4
   4f524:	f800283a 	ret

0004f528 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   4f528:	defffb04 	addi	sp,sp,-20
   4f52c:	df000415 	stw	fp,16(sp)
   4f530:	df000404 	addi	fp,sp,16
   4f534:	e13ffe15 	stw	r4,-8(fp)
   4f538:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   4f53c:	e0bfff17 	ldw	r2,-4(fp)
   4f540:	10840070 	cmpltui	r2,r2,4097
   4f544:	1000021e 	bne	r2,zero,4f550 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   4f548:	00840004 	movi	r2,4096
   4f54c:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   4f550:	e0fffe17 	ldw	r3,-8(fp)
   4f554:	e0bfff17 	ldw	r2,-4(fp)
   4f558:	1885883a 	add	r2,r3,r2
   4f55c:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   4f560:	e0bffe17 	ldw	r2,-8(fp)
   4f564:	e0bffc15 	stw	r2,-16(fp)
   4f568:	00000506 	br	4f580 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   4f56c:	e0bffc17 	ldw	r2,-16(fp)
   4f570:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   4f574:	e0bffc17 	ldw	r2,-16(fp)
   4f578:	10800804 	addi	r2,r2,32
   4f57c:	e0bffc15 	stw	r2,-16(fp)
   4f580:	e0fffc17 	ldw	r3,-16(fp)
   4f584:	e0bffd17 	ldw	r2,-12(fp)
   4f588:	18bff836 	bltu	r3,r2,4f56c <__alt_mem_onchip_memory2_1+0xfffce56c>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   4f58c:	e0bffe17 	ldw	r2,-8(fp)
   4f590:	108007cc 	andi	r2,r2,31
   4f594:	10000226 	beq	r2,zero,4f5a0 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   4f598:	e0bffc17 	ldw	r2,-16(fp)
   4f59c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   4f5a0:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   4f5a4:	0001883a 	nop
   4f5a8:	e037883a 	mov	sp,fp
   4f5ac:	df000017 	ldw	fp,0(sp)
   4f5b0:	dec00104 	addi	sp,sp,4
   4f5b4:	f800283a 	ret

0004f5b8 <atexit>:
   4f5b8:	200b883a 	mov	r5,r4
   4f5bc:	000f883a 	mov	r7,zero
   4f5c0:	000d883a 	mov	r6,zero
   4f5c4:	0009883a 	mov	r4,zero
   4f5c8:	004f6801 	jmpi	4f680 <__register_exitproc>

0004f5cc <exit>:
   4f5cc:	defffe04 	addi	sp,sp,-8
   4f5d0:	000b883a 	mov	r5,zero
   4f5d4:	dc000015 	stw	r16,0(sp)
   4f5d8:	dfc00115 	stw	ra,4(sp)
   4f5dc:	2021883a 	mov	r16,r4
   4f5e0:	004f7980 	call	4f798 <__call_exitprocs>
   4f5e4:	00800174 	movhi	r2,5
   4f5e8:	1085ed04 	addi	r2,r2,6068
   4f5ec:	11000017 	ldw	r4,0(r2)
   4f5f0:	20800f17 	ldw	r2,60(r4)
   4f5f4:	10000126 	beq	r2,zero,4f5fc <exit+0x30>
   4f5f8:	103ee83a 	callr	r2
   4f5fc:	8009883a 	mov	r4,r16
   4f600:	004f9180 	call	4f918 <_exit>

0004f604 <memcmp>:
   4f604:	01c000c4 	movi	r7,3
   4f608:	3980192e 	bgeu	r7,r6,4f670 <memcmp+0x6c>
   4f60c:	2144b03a 	or	r2,r4,r5
   4f610:	11c4703a 	and	r2,r2,r7
   4f614:	10000f26 	beq	r2,zero,4f654 <memcmp+0x50>
   4f618:	20800003 	ldbu	r2,0(r4)
   4f61c:	28c00003 	ldbu	r3,0(r5)
   4f620:	10c0151e 	bne	r2,r3,4f678 <memcmp+0x74>
   4f624:	31bfff84 	addi	r6,r6,-2
   4f628:	01ffffc4 	movi	r7,-1
   4f62c:	00000406 	br	4f640 <memcmp+0x3c>
   4f630:	20800003 	ldbu	r2,0(r4)
   4f634:	28c00003 	ldbu	r3,0(r5)
   4f638:	31bfffc4 	addi	r6,r6,-1
   4f63c:	10c00e1e 	bne	r2,r3,4f678 <memcmp+0x74>
   4f640:	21000044 	addi	r4,r4,1
   4f644:	29400044 	addi	r5,r5,1
   4f648:	31fff91e 	bne	r6,r7,4f630 <__alt_mem_onchip_memory2_1+0xfffce630>
   4f64c:	0005883a 	mov	r2,zero
   4f650:	f800283a 	ret
   4f654:	20c00017 	ldw	r3,0(r4)
   4f658:	28800017 	ldw	r2,0(r5)
   4f65c:	18bfee1e 	bne	r3,r2,4f618 <__alt_mem_onchip_memory2_1+0xfffce618>
   4f660:	31bfff04 	addi	r6,r6,-4
   4f664:	21000104 	addi	r4,r4,4
   4f668:	29400104 	addi	r5,r5,4
   4f66c:	39bff936 	bltu	r7,r6,4f654 <__alt_mem_onchip_memory2_1+0xfffce654>
   4f670:	303fe91e 	bne	r6,zero,4f618 <__alt_mem_onchip_memory2_1+0xfffce618>
   4f674:	003ff506 	br	4f64c <__alt_mem_onchip_memory2_1+0xfffce64c>
   4f678:	10c5c83a 	sub	r2,r2,r3
   4f67c:	f800283a 	ret

0004f680 <__register_exitproc>:
   4f680:	defffa04 	addi	sp,sp,-24
   4f684:	dc000315 	stw	r16,12(sp)
   4f688:	04000174 	movhi	r16,5
   4f68c:	8405ed04 	addi	r16,r16,6068
   4f690:	80c00017 	ldw	r3,0(r16)
   4f694:	dc400415 	stw	r17,16(sp)
   4f698:	dfc00515 	stw	ra,20(sp)
   4f69c:	18805217 	ldw	r2,328(r3)
   4f6a0:	2023883a 	mov	r17,r4
   4f6a4:	10003726 	beq	r2,zero,4f784 <__register_exitproc+0x104>
   4f6a8:	10c00117 	ldw	r3,4(r2)
   4f6ac:	010007c4 	movi	r4,31
   4f6b0:	20c00e16 	blt	r4,r3,4f6ec <__register_exitproc+0x6c>
   4f6b4:	1a000044 	addi	r8,r3,1
   4f6b8:	8800221e 	bne	r17,zero,4f744 <__register_exitproc+0xc4>
   4f6bc:	18c00084 	addi	r3,r3,2
   4f6c0:	18c7883a 	add	r3,r3,r3
   4f6c4:	18c7883a 	add	r3,r3,r3
   4f6c8:	12000115 	stw	r8,4(r2)
   4f6cc:	10c7883a 	add	r3,r2,r3
   4f6d0:	19400015 	stw	r5,0(r3)
   4f6d4:	0005883a 	mov	r2,zero
   4f6d8:	dfc00517 	ldw	ra,20(sp)
   4f6dc:	dc400417 	ldw	r17,16(sp)
   4f6e0:	dc000317 	ldw	r16,12(sp)
   4f6e4:	dec00604 	addi	sp,sp,24
   4f6e8:	f800283a 	ret
   4f6ec:	00800034 	movhi	r2,0
   4f6f0:	10800004 	addi	r2,r2,0
   4f6f4:	10002626 	beq	r2,zero,4f790 <__register_exitproc+0x110>
   4f6f8:	01006404 	movi	r4,400
   4f6fc:	d9400015 	stw	r5,0(sp)
   4f700:	d9800115 	stw	r6,4(sp)
   4f704:	d9c00215 	stw	r7,8(sp)
   4f708:	00000000 	call	0 <__reset-0x40000>
   4f70c:	d9400017 	ldw	r5,0(sp)
   4f710:	d9800117 	ldw	r6,4(sp)
   4f714:	d9c00217 	ldw	r7,8(sp)
   4f718:	10001d26 	beq	r2,zero,4f790 <__register_exitproc+0x110>
   4f71c:	81000017 	ldw	r4,0(r16)
   4f720:	10000115 	stw	zero,4(r2)
   4f724:	02000044 	movi	r8,1
   4f728:	22405217 	ldw	r9,328(r4)
   4f72c:	0007883a 	mov	r3,zero
   4f730:	12400015 	stw	r9,0(r2)
   4f734:	20805215 	stw	r2,328(r4)
   4f738:	10006215 	stw	zero,392(r2)
   4f73c:	10006315 	stw	zero,396(r2)
   4f740:	883fde26 	beq	r17,zero,4f6bc <__alt_mem_onchip_memory2_1+0xfffce6bc>
   4f744:	18c9883a 	add	r4,r3,r3
   4f748:	2109883a 	add	r4,r4,r4
   4f74c:	1109883a 	add	r4,r2,r4
   4f750:	21802215 	stw	r6,136(r4)
   4f754:	01800044 	movi	r6,1
   4f758:	12406217 	ldw	r9,392(r2)
   4f75c:	30cc983a 	sll	r6,r6,r3
   4f760:	4992b03a 	or	r9,r9,r6
   4f764:	12406215 	stw	r9,392(r2)
   4f768:	21c04215 	stw	r7,264(r4)
   4f76c:	01000084 	movi	r4,2
   4f770:	893fd21e 	bne	r17,r4,4f6bc <__alt_mem_onchip_memory2_1+0xfffce6bc>
   4f774:	11006317 	ldw	r4,396(r2)
   4f778:	218cb03a 	or	r6,r4,r6
   4f77c:	11806315 	stw	r6,396(r2)
   4f780:	003fce06 	br	4f6bc <__alt_mem_onchip_memory2_1+0xfffce6bc>
   4f784:	18805304 	addi	r2,r3,332
   4f788:	18805215 	stw	r2,328(r3)
   4f78c:	003fc606 	br	4f6a8 <__alt_mem_onchip_memory2_1+0xfffce6a8>
   4f790:	00bfffc4 	movi	r2,-1
   4f794:	003fd006 	br	4f6d8 <__alt_mem_onchip_memory2_1+0xfffce6d8>

0004f798 <__call_exitprocs>:
   4f798:	defff504 	addi	sp,sp,-44
   4f79c:	df000915 	stw	fp,36(sp)
   4f7a0:	dd400615 	stw	r21,24(sp)
   4f7a4:	dc800315 	stw	r18,12(sp)
   4f7a8:	dfc00a15 	stw	ra,40(sp)
   4f7ac:	ddc00815 	stw	r23,32(sp)
   4f7b0:	dd800715 	stw	r22,28(sp)
   4f7b4:	dd000515 	stw	r20,20(sp)
   4f7b8:	dcc00415 	stw	r19,16(sp)
   4f7bc:	dc400215 	stw	r17,8(sp)
   4f7c0:	dc000115 	stw	r16,4(sp)
   4f7c4:	d9000015 	stw	r4,0(sp)
   4f7c8:	2839883a 	mov	fp,r5
   4f7cc:	04800044 	movi	r18,1
   4f7d0:	057fffc4 	movi	r21,-1
   4f7d4:	00800174 	movhi	r2,5
   4f7d8:	1085ed04 	addi	r2,r2,6068
   4f7dc:	12000017 	ldw	r8,0(r2)
   4f7e0:	45005217 	ldw	r20,328(r8)
   4f7e4:	44c05204 	addi	r19,r8,328
   4f7e8:	a0001c26 	beq	r20,zero,4f85c <__call_exitprocs+0xc4>
   4f7ec:	a0800117 	ldw	r2,4(r20)
   4f7f0:	15ffffc4 	addi	r23,r2,-1
   4f7f4:	b8000d16 	blt	r23,zero,4f82c <__call_exitprocs+0x94>
   4f7f8:	14000044 	addi	r16,r2,1
   4f7fc:	8421883a 	add	r16,r16,r16
   4f800:	8421883a 	add	r16,r16,r16
   4f804:	84402004 	addi	r17,r16,128
   4f808:	a463883a 	add	r17,r20,r17
   4f80c:	a421883a 	add	r16,r20,r16
   4f810:	e0001e26 	beq	fp,zero,4f88c <__call_exitprocs+0xf4>
   4f814:	80804017 	ldw	r2,256(r16)
   4f818:	e0801c26 	beq	fp,r2,4f88c <__call_exitprocs+0xf4>
   4f81c:	bdffffc4 	addi	r23,r23,-1
   4f820:	843fff04 	addi	r16,r16,-4
   4f824:	8c7fff04 	addi	r17,r17,-4
   4f828:	bd7ff91e 	bne	r23,r21,4f810 <__alt_mem_onchip_memory2_1+0xfffce810>
   4f82c:	00800034 	movhi	r2,0
   4f830:	10800004 	addi	r2,r2,0
   4f834:	10000926 	beq	r2,zero,4f85c <__call_exitprocs+0xc4>
   4f838:	a0800117 	ldw	r2,4(r20)
   4f83c:	1000301e 	bne	r2,zero,4f900 <__call_exitprocs+0x168>
   4f840:	a0800017 	ldw	r2,0(r20)
   4f844:	10003226 	beq	r2,zero,4f910 <__call_exitprocs+0x178>
   4f848:	a009883a 	mov	r4,r20
   4f84c:	98800015 	stw	r2,0(r19)
   4f850:	00000000 	call	0 <__reset-0x40000>
   4f854:	9d000017 	ldw	r20,0(r19)
   4f858:	a03fe41e 	bne	r20,zero,4f7ec <__alt_mem_onchip_memory2_1+0xfffce7ec>
   4f85c:	dfc00a17 	ldw	ra,40(sp)
   4f860:	df000917 	ldw	fp,36(sp)
   4f864:	ddc00817 	ldw	r23,32(sp)
   4f868:	dd800717 	ldw	r22,28(sp)
   4f86c:	dd400617 	ldw	r21,24(sp)
   4f870:	dd000517 	ldw	r20,20(sp)
   4f874:	dcc00417 	ldw	r19,16(sp)
   4f878:	dc800317 	ldw	r18,12(sp)
   4f87c:	dc400217 	ldw	r17,8(sp)
   4f880:	dc000117 	ldw	r16,4(sp)
   4f884:	dec00b04 	addi	sp,sp,44
   4f888:	f800283a 	ret
   4f88c:	a0800117 	ldw	r2,4(r20)
   4f890:	80c00017 	ldw	r3,0(r16)
   4f894:	10bfffc4 	addi	r2,r2,-1
   4f898:	15c01426 	beq	r2,r23,4f8ec <__call_exitprocs+0x154>
   4f89c:	80000015 	stw	zero,0(r16)
   4f8a0:	183fde26 	beq	r3,zero,4f81c <__alt_mem_onchip_memory2_1+0xfffce81c>
   4f8a4:	95c8983a 	sll	r4,r18,r23
   4f8a8:	a0806217 	ldw	r2,392(r20)
   4f8ac:	a5800117 	ldw	r22,4(r20)
   4f8b0:	2084703a 	and	r2,r4,r2
   4f8b4:	10000b26 	beq	r2,zero,4f8e4 <__call_exitprocs+0x14c>
   4f8b8:	a0806317 	ldw	r2,396(r20)
   4f8bc:	2088703a 	and	r4,r4,r2
   4f8c0:	20000c1e 	bne	r4,zero,4f8f4 <__call_exitprocs+0x15c>
   4f8c4:	89400017 	ldw	r5,0(r17)
   4f8c8:	d9000017 	ldw	r4,0(sp)
   4f8cc:	183ee83a 	callr	r3
   4f8d0:	a0800117 	ldw	r2,4(r20)
   4f8d4:	15bfbf1e 	bne	r2,r22,4f7d4 <__alt_mem_onchip_memory2_1+0xfffce7d4>
   4f8d8:	98800017 	ldw	r2,0(r19)
   4f8dc:	153fcf26 	beq	r2,r20,4f81c <__alt_mem_onchip_memory2_1+0xfffce81c>
   4f8e0:	003fbc06 	br	4f7d4 <__alt_mem_onchip_memory2_1+0xfffce7d4>
   4f8e4:	183ee83a 	callr	r3
   4f8e8:	003ff906 	br	4f8d0 <__alt_mem_onchip_memory2_1+0xfffce8d0>
   4f8ec:	a5c00115 	stw	r23,4(r20)
   4f8f0:	003feb06 	br	4f8a0 <__alt_mem_onchip_memory2_1+0xfffce8a0>
   4f8f4:	89000017 	ldw	r4,0(r17)
   4f8f8:	183ee83a 	callr	r3
   4f8fc:	003ff406 	br	4f8d0 <__alt_mem_onchip_memory2_1+0xfffce8d0>
   4f900:	a0800017 	ldw	r2,0(r20)
   4f904:	a027883a 	mov	r19,r20
   4f908:	1029883a 	mov	r20,r2
   4f90c:	003fb606 	br	4f7e8 <__alt_mem_onchip_memory2_1+0xfffce7e8>
   4f910:	0005883a 	mov	r2,zero
   4f914:	003ffb06 	br	4f904 <__alt_mem_onchip_memory2_1+0xfffce904>

0004f918 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   4f918:	defffd04 	addi	sp,sp,-12
   4f91c:	df000215 	stw	fp,8(sp)
   4f920:	df000204 	addi	fp,sp,8
   4f924:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   4f928:	0001883a 	nop
   4f92c:	e0bfff17 	ldw	r2,-4(fp)
   4f930:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   4f934:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   4f938:	10000226 	beq	r2,zero,4f944 <_exit+0x2c>
    ALT_SIM_FAIL();
   4f93c:	002af070 	cmpltui	zero,zero,43969
   4f940:	00000106 	br	4f948 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   4f944:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   4f948:	003fff06 	br	4f948 <__alt_mem_onchip_memory2_1+0xfffce948>
